// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dft_dft_Pipeline_VITIS_LOOP_10_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sum_r_address0,
        sum_r_ce0,
        sum_r_we0,
        sum_r_d0,
        bitcast_ln14_1,
        add,
        bitcast_ln14_2,
        bitcast_ln14_3,
        bitcast_ln14_4,
        bitcast_ln14_5,
        bitcast_ln14_6,
        bitcast_ln14_7,
        sum_i_address0,
        sum_i_ce0,
        sum_i_we0,
        sum_i_d0,
        add1,
        grp_fu_166_p_din0,
        grp_fu_166_p_din1,
        grp_fu_166_p_opcode,
        grp_fu_166_p_dout0,
        grp_fu_166_p_ce,
        grp_fu_171_p_din0,
        grp_fu_171_p_din1,
        grp_fu_171_p_opcode,
        grp_fu_171_p_dout0,
        grp_fu_171_p_ce,
        grp_fu_176_p_din0,
        grp_fu_176_p_din1,
        grp_fu_176_p_dout0,
        grp_fu_176_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] sum_r_address0;
output   sum_r_ce0;
output   sum_r_we0;
output  [31:0] sum_r_d0;
input  [31:0] bitcast_ln14_1;
input  [31:0] add;
input  [31:0] bitcast_ln14_2;
input  [31:0] bitcast_ln14_3;
input  [31:0] bitcast_ln14_4;
input  [31:0] bitcast_ln14_5;
input  [31:0] bitcast_ln14_6;
input  [31:0] bitcast_ln14_7;
output  [2:0] sum_i_address0;
output   sum_i_ce0;
output   sum_i_we0;
output  [31:0] sum_i_d0;
input  [31:0] add1;
output  [31:0] grp_fu_166_p_din0;
output  [31:0] grp_fu_166_p_din1;
output  [1:0] grp_fu_166_p_opcode;
input  [31:0] grp_fu_166_p_dout0;
output   grp_fu_166_p_ce;
output  [31:0] grp_fu_171_p_din0;
output  [31:0] grp_fu_171_p_din1;
output  [1:0] grp_fu_171_p_opcode;
input  [31:0] grp_fu_171_p_dout0;
output   grp_fu_171_p_ce;
output  [31:0] grp_fu_176_p_din0;
output  [31:0] grp_fu_176_p_din1;
input  [31:0] grp_fu_176_p_dout0;
output   grp_fu_176_p_ce;

reg ap_idle;
reg sum_r_ce0;
reg sum_r_we0;
reg sum_i_ce0;
reg sum_i_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln10_fu_438_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] cos_coefficients_table_address0;
reg    cos_coefficients_table_ce0;
wire   [31:0] cos_coefficients_table_q0;
wire   [2:0] cos_coefficients_table_address1;
reg    cos_coefficients_table_ce1;
wire   [31:0] cos_coefficients_table_q1;
wire   [2:0] cos_coefficients_table_address2;
reg    cos_coefficients_table_ce2;
wire   [31:0] cos_coefficients_table_q2;
wire   [2:0] cos_coefficients_table_address3;
reg    cos_coefficients_table_ce3;
wire   [31:0] cos_coefficients_table_q3;
wire   [2:0] cos_coefficients_table_address4;
reg    cos_coefficients_table_ce4;
wire   [31:0] cos_coefficients_table_q4;
wire   [2:0] cos_coefficients_table_address5;
reg    cos_coefficients_table_ce5;
wire   [31:0] cos_coefficients_table_q5;
wire   [2:0] cos_coefficients_table_address6;
reg    cos_coefficients_table_ce6;
wire   [31:0] cos_coefficients_table_q6;
wire   [2:0] sin_coefficients_table_address0;
reg    sin_coefficients_table_ce0;
wire   [31:0] sin_coefficients_table_q0;
wire   [2:0] sin_coefficients_table_address1;
reg    sin_coefficients_table_ce1;
wire   [31:0] sin_coefficients_table_q1;
wire   [2:0] sin_coefficients_table_address2;
reg    sin_coefficients_table_ce2;
wire   [31:0] sin_coefficients_table_q2;
wire   [2:0] sin_coefficients_table_address3;
reg    sin_coefficients_table_ce3;
wire   [31:0] sin_coefficients_table_q3;
wire   [2:0] sin_coefficients_table_address4;
reg    sin_coefficients_table_ce4;
wire   [31:0] sin_coefficients_table_q4;
wire   [2:0] sin_coefficients_table_address5;
reg    sin_coefficients_table_ce5;
wire   [31:0] sin_coefficients_table_q5;
wire   [2:0] sin_coefficients_table_address6;
reg    sin_coefficients_table_ce6;
wire   [31:0] sin_coefficients_table_q6;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] k_1_reg_605;
reg   [3:0] k_1_reg_605_pp0_iter1_reg;
reg   [3:0] k_1_reg_605_pp0_iter2_reg;
reg   [3:0] k_1_reg_605_pp0_iter3_reg;
reg   [3:0] k_1_reg_605_pp0_iter4_reg;
reg   [3:0] k_1_reg_605_pp0_iter5_reg;
reg   [3:0] k_1_reg_605_pp0_iter6_reg;
reg   [3:0] k_1_reg_605_pp0_iter7_reg;
reg   [3:0] k_1_reg_605_pp0_iter8_reg;
reg   [3:0] k_1_reg_605_pp0_iter9_reg;
reg   [3:0] k_1_reg_605_pp0_iter10_reg;
reg   [3:0] k_1_reg_605_pp0_iter11_reg;
reg   [3:0] k_1_reg_605_pp0_iter12_reg;
reg   [3:0] k_1_reg_605_pp0_iter13_reg;
reg   [3:0] k_1_reg_605_pp0_iter14_reg;
reg   [3:0] k_1_reg_605_pp0_iter15_reg;
reg   [3:0] k_1_reg_605_pp0_iter16_reg;
reg   [3:0] k_1_reg_605_pp0_iter17_reg;
reg   [3:0] k_1_reg_605_pp0_iter18_reg;
reg   [3:0] k_1_reg_605_pp0_iter19_reg;
reg   [3:0] k_1_reg_605_pp0_iter20_reg;
reg   [3:0] k_1_reg_605_pp0_iter21_reg;
reg   [3:0] k_1_reg_605_pp0_iter22_reg;
reg   [3:0] k_1_reg_605_pp0_iter23_reg;
reg   [3:0] k_1_reg_605_pp0_iter24_reg;
reg   [3:0] k_1_reg_605_pp0_iter25_reg;
reg   [3:0] k_1_reg_605_pp0_iter26_reg;
reg   [3:0] k_1_reg_605_pp0_iter27_reg;
reg   [3:0] k_1_reg_605_pp0_iter28_reg;
reg   [3:0] k_1_reg_605_pp0_iter29_reg;
reg   [3:0] k_1_reg_605_pp0_iter30_reg;
reg   [3:0] k_1_reg_605_pp0_iter31_reg;
reg   [3:0] k_1_reg_605_pp0_iter32_reg;
reg   [3:0] k_1_reg_605_pp0_iter33_reg;
reg   [3:0] k_1_reg_605_pp0_iter34_reg;
reg   [3:0] k_1_reg_605_pp0_iter35_reg;
reg   [3:0] k_1_reg_605_pp0_iter36_reg;
reg   [3:0] k_1_reg_605_pp0_iter37_reg;
reg   [3:0] k_1_reg_605_pp0_iter38_reg;
reg   [3:0] k_1_reg_605_pp0_iter39_reg;
reg   [3:0] k_1_reg_605_pp0_iter40_reg;
wire   [2:0] empty_7_fu_450_p1;
reg   [2:0] empty_7_reg_616;
reg   [2:0] empty_7_reg_616_pp0_iter1_reg;
reg   [2:0] empty_7_reg_616_pp0_iter2_reg;
reg   [2:0] empty_7_reg_616_pp0_iter3_reg;
reg   [2:0] empty_7_reg_616_pp0_iter4_reg;
reg   [2:0] empty_7_reg_616_pp0_iter5_reg;
reg   [2:0] empty_7_reg_616_pp0_iter6_reg;
reg   [2:0] empty_7_reg_616_pp0_iter7_reg;
reg   [2:0] empty_7_reg_616_pp0_iter8_reg;
reg   [2:0] empty_7_reg_616_pp0_iter9_reg;
reg   [2:0] empty_7_reg_616_pp0_iter10_reg;
reg   [2:0] empty_7_reg_616_pp0_iter11_reg;
reg   [2:0] empty_7_reg_616_pp0_iter12_reg;
reg   [2:0] empty_7_reg_616_pp0_iter13_reg;
reg   [2:0] empty_7_reg_616_pp0_iter14_reg;
reg   [2:0] empty_7_reg_616_pp0_iter15_reg;
reg   [2:0] empty_7_reg_616_pp0_iter16_reg;
reg   [2:0] empty_7_reg_616_pp0_iter17_reg;
reg   [2:0] empty_7_reg_616_pp0_iter18_reg;
reg   [2:0] empty_7_reg_616_pp0_iter19_reg;
reg   [2:0] empty_7_reg_616_pp0_iter20_reg;
reg   [2:0] empty_7_reg_616_pp0_iter21_reg;
reg   [2:0] empty_7_reg_616_pp0_iter22_reg;
reg   [2:0] empty_7_reg_616_pp0_iter23_reg;
reg   [2:0] empty_7_reg_616_pp0_iter24_reg;
reg   [2:0] empty_7_reg_616_pp0_iter25_reg;
reg   [2:0] empty_7_reg_616_pp0_iter26_reg;
reg   [2:0] empty_7_reg_616_pp0_iter27_reg;
reg   [2:0] empty_7_reg_616_pp0_iter28_reg;
reg   [2:0] empty_7_reg_616_pp0_iter29_reg;
reg   [31:0] cos_coefficients_table_load_reg_633;
reg   [31:0] sin_coefficients_table_load_reg_638;
reg   [31:0] mul8_1_reg_643;
wire   [2:0] shl_ln_fu_468_p3;
reg   [2:0] shl_ln_reg_648;
reg   [2:0] shl_ln_reg_648_pp0_iter6_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter7_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter8_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter9_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter10_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter11_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter12_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter13_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter14_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter15_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter16_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter17_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter18_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter19_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter20_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter21_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter22_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter23_reg;
reg   [2:0] shl_ln_reg_648_pp0_iter24_reg;
wire   [31:0] grp_fu_378_p2;
reg   [31:0] mul_1_reg_658;
reg   [31:0] cos_coefficients_table_load_1_reg_668;
reg   [31:0] sin_coefficients_table_load_1_reg_673;
reg   [31:0] add_1_reg_678;
wire   [31:0] grp_fu_382_p2;
reg   [31:0] mul8_2_reg_683;
wire   [2:0] shl_ln14_1_fu_485_p3;
reg   [2:0] shl_ln14_1_reg_688;
reg   [2:0] shl_ln14_1_reg_688_pp0_iter11_reg;
reg   [2:0] shl_ln14_1_reg_688_pp0_iter12_reg;
reg   [2:0] shl_ln14_1_reg_688_pp0_iter13_reg;
reg   [2:0] shl_ln14_1_reg_688_pp0_iter14_reg;
reg   [2:0] shl_ln14_1_reg_688_pp0_iter15_reg;
reg   [2:0] shl_ln14_1_reg_688_pp0_iter16_reg;
reg   [2:0] shl_ln14_1_reg_688_pp0_iter17_reg;
reg   [2:0] shl_ln14_1_reg_688_pp0_iter18_reg;
reg   [2:0] shl_ln14_1_reg_688_pp0_iter19_reg;
reg   [31:0] add1_1_reg_699;
wire   [31:0] grp_fu_386_p2;
reg   [31:0] mul_2_reg_704;
reg   [31:0] cos_coefficients_table_load_2_reg_714;
reg   [31:0] sin_coefficients_table_load_2_reg_719;
wire   [31:0] grp_fu_326_p2;
reg   [31:0] add_2_reg_724;
wire   [31:0] grp_fu_390_p2;
reg   [31:0] mul8_3_reg_729;
wire   [31:0] grp_fu_330_p2;
reg   [31:0] add1_2_reg_739;
wire   [31:0] grp_fu_394_p2;
reg   [31:0] mul_3_reg_744;
reg   [31:0] cos_coefficients_table_load_3_reg_754;
reg   [31:0] sin_coefficients_table_load_3_reg_759;
wire   [31:0] grp_fu_334_p2;
reg   [31:0] add_3_reg_764;
wire   [31:0] grp_fu_398_p2;
reg   [31:0] mul8_4_reg_769;
wire   [31:0] grp_fu_338_p2;
reg   [31:0] add1_3_reg_779;
wire   [31:0] grp_fu_402_p2;
reg   [31:0] mul_4_reg_784;
reg   [31:0] cos_coefficients_table_load_4_reg_794;
reg   [31:0] sin_coefficients_table_load_4_reg_799;
wire   [31:0] grp_fu_342_p2;
reg   [31:0] add_4_reg_804;
wire   [31:0] grp_fu_406_p2;
reg   [31:0] mul8_5_reg_809;
wire   [31:0] grp_fu_346_p2;
reg   [31:0] add1_4_reg_819;
wire   [31:0] grp_fu_410_p2;
reg   [31:0] mul_5_reg_824;
reg   [31:0] cos_coefficients_table_load_5_reg_834;
reg   [31:0] sin_coefficients_table_load_5_reg_839;
wire   [31:0] grp_fu_350_p2;
reg   [31:0] add_5_reg_844;
wire   [31:0] grp_fu_414_p2;
reg   [31:0] mul8_6_reg_849;
wire   [31:0] grp_fu_354_p2;
reg   [31:0] add1_5_reg_859;
wire   [31:0] grp_fu_418_p2;
reg   [31:0] mul_6_reg_864;
reg   [31:0] cos_coefficients_table_load_6_reg_874;
reg   [31:0] sin_coefficients_table_load_6_reg_879;
wire   [31:0] grp_fu_358_p2;
reg   [31:0] add_6_reg_884;
wire   [31:0] grp_fu_422_p2;
reg   [31:0] mul8_7_reg_889;
wire   [31:0] grp_fu_362_p2;
reg   [31:0] add1_6_reg_894;
wire   [31:0] grp_fu_426_p2;
reg   [31:0] mul_7_reg_899;
wire   [31:0] grp_fu_366_p2;
reg   [31:0] add_7_reg_904;
wire   [31:0] grp_fu_370_p2;
reg   [31:0] add1_7_reg_909;
wire   [63:0] zext_ln14_fu_454_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln14_1_fu_476_p1;
wire   [63:0] zext_ln14_2_fu_498_p1;
wire   [63:0] zext_ln14_3_fu_504_p1;
wire   [63:0] zext_ln14_4_fu_513_p1;
wire   [63:0] zext_ln14_5_fu_524_p1;
wire   [63:0] zext_ln14_6_fu_535_p1;
wire   [63:0] k_cast1_fu_541_p1;
reg   [3:0] k_fu_64;
wire   [3:0] add_ln10_fu_444_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_k_1;
wire   [1:0] trunc_ln14_fu_465_p1;
wire   [0:0] trunc_ln14_1_fu_482_p1;
wire   [2:0] sub_ln14_fu_493_p2;
wire   [2:0] add_ln14_fu_509_p2;
wire   [2:0] sub_ln14_1_fu_519_p2;
wire   [2:0] sub_ln14_2_fu_530_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_done_reg = 1'b0;
end

dft_dft_Pipeline_VITIS_LOOP_10_1_cos_coefficients_table_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
cos_coefficients_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cos_coefficients_table_address0),
    .ce0(cos_coefficients_table_ce0),
    .q0(cos_coefficients_table_q0),
    .address1(cos_coefficients_table_address1),
    .ce1(cos_coefficients_table_ce1),
    .q1(cos_coefficients_table_q1),
    .address2(cos_coefficients_table_address2),
    .ce2(cos_coefficients_table_ce2),
    .q2(cos_coefficients_table_q2),
    .address3(cos_coefficients_table_address3),
    .ce3(cos_coefficients_table_ce3),
    .q3(cos_coefficients_table_q3),
    .address4(cos_coefficients_table_address4),
    .ce4(cos_coefficients_table_ce4),
    .q4(cos_coefficients_table_q4),
    .address5(cos_coefficients_table_address5),
    .ce5(cos_coefficients_table_ce5),
    .q5(cos_coefficients_table_q5),
    .address6(cos_coefficients_table_address6),
    .ce6(cos_coefficients_table_ce6),
    .q6(cos_coefficients_table_q6)
);

dft_dft_Pipeline_VITIS_LOOP_10_1_sin_coefficients_table_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sin_coefficients_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sin_coefficients_table_address0),
    .ce0(sin_coefficients_table_ce0),
    .q0(sin_coefficients_table_q0),
    .address1(sin_coefficients_table_address1),
    .ce1(sin_coefficients_table_ce1),
    .q1(sin_coefficients_table_q1),
    .address2(sin_coefficients_table_address2),
    .ce2(sin_coefficients_table_ce2),
    .q2(sin_coefficients_table_q2),
    .address3(sin_coefficients_table_address3),
    .ce3(sin_coefficients_table_ce3),
    .q3(sin_coefficients_table_q3),
    .address4(sin_coefficients_table_address4),
    .ce4(sin_coefficients_table_ce4),
    .q4(sin_coefficients_table_q4),
    .address5(sin_coefficients_table_address5),
    .ce5(sin_coefficients_table_ce5),
    .q5(sin_coefficients_table_q5),
    .address6(sin_coefficients_table_address6),
    .ce6(sin_coefficients_table_ce6),
    .q6(sin_coefficients_table_q6)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_1_reg_678),
    .din1(mul8_2_reg_683),
    .ce(1'b1),
    .dout(grp_fu_326_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add1_1_reg_699),
    .din1(mul_2_reg_704),
    .ce(1'b1),
    .dout(grp_fu_330_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_2_reg_724),
    .din1(mul8_3_reg_729),
    .ce(1'b1),
    .dout(grp_fu_334_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add1_2_reg_739),
    .din1(mul_3_reg_744),
    .ce(1'b1),
    .dout(grp_fu_338_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_3_reg_764),
    .din1(mul8_4_reg_769),
    .ce(1'b1),
    .dout(grp_fu_342_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add1_3_reg_779),
    .din1(mul_4_reg_784),
    .ce(1'b1),
    .dout(grp_fu_346_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_4_reg_804),
    .din1(mul8_5_reg_809),
    .ce(1'b1),
    .dout(grp_fu_350_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add1_4_reg_819),
    .din1(mul_5_reg_824),
    .ce(1'b1),
    .dout(grp_fu_354_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_5_reg_844),
    .din1(mul8_6_reg_849),
    .ce(1'b1),
    .dout(grp_fu_358_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add1_5_reg_859),
    .din1(mul_6_reg_864),
    .ce(1'b1),
    .dout(grp_fu_362_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_6_reg_884),
    .din1(mul8_7_reg_889),
    .ce(1'b1),
    .dout(grp_fu_366_p2)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add1_6_reg_894),
    .din1(mul_7_reg_899),
    .ce(1'b1),
    .dout(grp_fu_370_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_1),
    .din1(sin_coefficients_table_load_reg_638),
    .ce(1'b1),
    .dout(grp_fu_378_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_2),
    .din1(cos_coefficients_table_load_1_reg_668),
    .ce(1'b1),
    .dout(grp_fu_382_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_2),
    .din1(sin_coefficients_table_load_1_reg_673),
    .ce(1'b1),
    .dout(grp_fu_386_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_3),
    .din1(cos_coefficients_table_load_2_reg_714),
    .ce(1'b1),
    .dout(grp_fu_390_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_3),
    .din1(sin_coefficients_table_load_2_reg_719),
    .ce(1'b1),
    .dout(grp_fu_394_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_4),
    .din1(cos_coefficients_table_load_3_reg_754),
    .ce(1'b1),
    .dout(grp_fu_398_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_4),
    .din1(sin_coefficients_table_load_3_reg_759),
    .ce(1'b1),
    .dout(grp_fu_402_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_5),
    .din1(cos_coefficients_table_load_4_reg_794),
    .ce(1'b1),
    .dout(grp_fu_406_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_5),
    .din1(sin_coefficients_table_load_4_reg_799),
    .ce(1'b1),
    .dout(grp_fu_410_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_6),
    .din1(cos_coefficients_table_load_5_reg_834),
    .ce(1'b1),
    .dout(grp_fu_414_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_6),
    .din1(sin_coefficients_table_load_5_reg_839),
    .ce(1'b1),
    .dout(grp_fu_418_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_7),
    .din1(cos_coefficients_table_load_6_reg_874),
    .ce(1'b1),
    .dout(grp_fu_422_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln14_7),
    .din1(sin_coefficients_table_load_6_reg_879),
    .ce(1'b1),
    .dout(grp_fu_426_p2)
);

dft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter40_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln10_fu_438_p2 == 1'd0))) begin
            k_fu_64 <= add_ln10_fu_444_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_64 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add1_1_reg_699 <= grp_fu_171_p_dout0;
        add1_2_reg_739 <= grp_fu_330_p2;
        add1_3_reg_779 <= grp_fu_338_p2;
        add1_4_reg_819 <= grp_fu_346_p2;
        add1_5_reg_859 <= grp_fu_354_p2;
        add1_6_reg_894 <= grp_fu_362_p2;
        add1_7_reg_909 <= grp_fu_370_p2;
        add_1_reg_678 <= grp_fu_166_p_dout0;
        add_2_reg_724 <= grp_fu_326_p2;
        add_3_reg_764 <= grp_fu_334_p2;
        add_4_reg_804 <= grp_fu_342_p2;
        add_5_reg_844 <= grp_fu_350_p2;
        add_6_reg_884 <= grp_fu_358_p2;
        add_7_reg_904 <= grp_fu_366_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_7_reg_616_pp0_iter10_reg <= empty_7_reg_616_pp0_iter9_reg;
        empty_7_reg_616_pp0_iter11_reg <= empty_7_reg_616_pp0_iter10_reg;
        empty_7_reg_616_pp0_iter12_reg <= empty_7_reg_616_pp0_iter11_reg;
        empty_7_reg_616_pp0_iter13_reg <= empty_7_reg_616_pp0_iter12_reg;
        empty_7_reg_616_pp0_iter14_reg <= empty_7_reg_616_pp0_iter13_reg;
        empty_7_reg_616_pp0_iter15_reg <= empty_7_reg_616_pp0_iter14_reg;
        empty_7_reg_616_pp0_iter16_reg <= empty_7_reg_616_pp0_iter15_reg;
        empty_7_reg_616_pp0_iter17_reg <= empty_7_reg_616_pp0_iter16_reg;
        empty_7_reg_616_pp0_iter18_reg <= empty_7_reg_616_pp0_iter17_reg;
        empty_7_reg_616_pp0_iter19_reg <= empty_7_reg_616_pp0_iter18_reg;
        empty_7_reg_616_pp0_iter20_reg <= empty_7_reg_616_pp0_iter19_reg;
        empty_7_reg_616_pp0_iter21_reg <= empty_7_reg_616_pp0_iter20_reg;
        empty_7_reg_616_pp0_iter22_reg <= empty_7_reg_616_pp0_iter21_reg;
        empty_7_reg_616_pp0_iter23_reg <= empty_7_reg_616_pp0_iter22_reg;
        empty_7_reg_616_pp0_iter24_reg <= empty_7_reg_616_pp0_iter23_reg;
        empty_7_reg_616_pp0_iter25_reg <= empty_7_reg_616_pp0_iter24_reg;
        empty_7_reg_616_pp0_iter26_reg <= empty_7_reg_616_pp0_iter25_reg;
        empty_7_reg_616_pp0_iter27_reg <= empty_7_reg_616_pp0_iter26_reg;
        empty_7_reg_616_pp0_iter28_reg <= empty_7_reg_616_pp0_iter27_reg;
        empty_7_reg_616_pp0_iter29_reg <= empty_7_reg_616_pp0_iter28_reg;
        empty_7_reg_616_pp0_iter2_reg <= empty_7_reg_616_pp0_iter1_reg;
        empty_7_reg_616_pp0_iter3_reg <= empty_7_reg_616_pp0_iter2_reg;
        empty_7_reg_616_pp0_iter4_reg <= empty_7_reg_616_pp0_iter3_reg;
        empty_7_reg_616_pp0_iter5_reg <= empty_7_reg_616_pp0_iter4_reg;
        empty_7_reg_616_pp0_iter6_reg <= empty_7_reg_616_pp0_iter5_reg;
        empty_7_reg_616_pp0_iter7_reg <= empty_7_reg_616_pp0_iter6_reg;
        empty_7_reg_616_pp0_iter8_reg <= empty_7_reg_616_pp0_iter7_reg;
        empty_7_reg_616_pp0_iter9_reg <= empty_7_reg_616_pp0_iter8_reg;
        k_1_reg_605_pp0_iter10_reg <= k_1_reg_605_pp0_iter9_reg;
        k_1_reg_605_pp0_iter11_reg <= k_1_reg_605_pp0_iter10_reg;
        k_1_reg_605_pp0_iter12_reg <= k_1_reg_605_pp0_iter11_reg;
        k_1_reg_605_pp0_iter13_reg <= k_1_reg_605_pp0_iter12_reg;
        k_1_reg_605_pp0_iter14_reg <= k_1_reg_605_pp0_iter13_reg;
        k_1_reg_605_pp0_iter15_reg <= k_1_reg_605_pp0_iter14_reg;
        k_1_reg_605_pp0_iter16_reg <= k_1_reg_605_pp0_iter15_reg;
        k_1_reg_605_pp0_iter17_reg <= k_1_reg_605_pp0_iter16_reg;
        k_1_reg_605_pp0_iter18_reg <= k_1_reg_605_pp0_iter17_reg;
        k_1_reg_605_pp0_iter19_reg <= k_1_reg_605_pp0_iter18_reg;
        k_1_reg_605_pp0_iter20_reg <= k_1_reg_605_pp0_iter19_reg;
        k_1_reg_605_pp0_iter21_reg <= k_1_reg_605_pp0_iter20_reg;
        k_1_reg_605_pp0_iter22_reg <= k_1_reg_605_pp0_iter21_reg;
        k_1_reg_605_pp0_iter23_reg <= k_1_reg_605_pp0_iter22_reg;
        k_1_reg_605_pp0_iter24_reg <= k_1_reg_605_pp0_iter23_reg;
        k_1_reg_605_pp0_iter25_reg <= k_1_reg_605_pp0_iter24_reg;
        k_1_reg_605_pp0_iter26_reg <= k_1_reg_605_pp0_iter25_reg;
        k_1_reg_605_pp0_iter27_reg <= k_1_reg_605_pp0_iter26_reg;
        k_1_reg_605_pp0_iter28_reg <= k_1_reg_605_pp0_iter27_reg;
        k_1_reg_605_pp0_iter29_reg <= k_1_reg_605_pp0_iter28_reg;
        k_1_reg_605_pp0_iter2_reg <= k_1_reg_605_pp0_iter1_reg;
        k_1_reg_605_pp0_iter30_reg <= k_1_reg_605_pp0_iter29_reg;
        k_1_reg_605_pp0_iter31_reg <= k_1_reg_605_pp0_iter30_reg;
        k_1_reg_605_pp0_iter32_reg <= k_1_reg_605_pp0_iter31_reg;
        k_1_reg_605_pp0_iter33_reg <= k_1_reg_605_pp0_iter32_reg;
        k_1_reg_605_pp0_iter34_reg <= k_1_reg_605_pp0_iter33_reg;
        k_1_reg_605_pp0_iter35_reg <= k_1_reg_605_pp0_iter34_reg;
        k_1_reg_605_pp0_iter36_reg <= k_1_reg_605_pp0_iter35_reg;
        k_1_reg_605_pp0_iter37_reg <= k_1_reg_605_pp0_iter36_reg;
        k_1_reg_605_pp0_iter38_reg <= k_1_reg_605_pp0_iter37_reg;
        k_1_reg_605_pp0_iter39_reg <= k_1_reg_605_pp0_iter38_reg;
        k_1_reg_605_pp0_iter3_reg <= k_1_reg_605_pp0_iter2_reg;
        k_1_reg_605_pp0_iter40_reg <= k_1_reg_605_pp0_iter39_reg;
        k_1_reg_605_pp0_iter4_reg <= k_1_reg_605_pp0_iter3_reg;
        k_1_reg_605_pp0_iter5_reg <= k_1_reg_605_pp0_iter4_reg;
        k_1_reg_605_pp0_iter6_reg <= k_1_reg_605_pp0_iter5_reg;
        k_1_reg_605_pp0_iter7_reg <= k_1_reg_605_pp0_iter6_reg;
        k_1_reg_605_pp0_iter8_reg <= k_1_reg_605_pp0_iter7_reg;
        k_1_reg_605_pp0_iter9_reg <= k_1_reg_605_pp0_iter8_reg;
        mul8_1_reg_643 <= grp_fu_176_p_dout0;
        mul8_2_reg_683 <= grp_fu_382_p2;
        mul8_3_reg_729 <= grp_fu_390_p2;
        mul8_4_reg_769 <= grp_fu_398_p2;
        mul8_5_reg_809 <= grp_fu_406_p2;
        mul8_6_reg_849 <= grp_fu_414_p2;
        mul8_7_reg_889 <= grp_fu_422_p2;
        mul_1_reg_658 <= grp_fu_378_p2;
        mul_2_reg_704 <= grp_fu_386_p2;
        mul_3_reg_744 <= grp_fu_394_p2;
        mul_4_reg_784 <= grp_fu_402_p2;
        mul_5_reg_824 <= grp_fu_410_p2;
        mul_6_reg_864 <= grp_fu_418_p2;
        mul_7_reg_899 <= grp_fu_426_p2;
        shl_ln14_1_reg_688[2] <= shl_ln14_1_fu_485_p3[2];
        shl_ln14_1_reg_688_pp0_iter11_reg[2] <= shl_ln14_1_reg_688[2];
        shl_ln14_1_reg_688_pp0_iter12_reg[2] <= shl_ln14_1_reg_688_pp0_iter11_reg[2];
        shl_ln14_1_reg_688_pp0_iter13_reg[2] <= shl_ln14_1_reg_688_pp0_iter12_reg[2];
        shl_ln14_1_reg_688_pp0_iter14_reg[2] <= shl_ln14_1_reg_688_pp0_iter13_reg[2];
        shl_ln14_1_reg_688_pp0_iter15_reg[2] <= shl_ln14_1_reg_688_pp0_iter14_reg[2];
        shl_ln14_1_reg_688_pp0_iter16_reg[2] <= shl_ln14_1_reg_688_pp0_iter15_reg[2];
        shl_ln14_1_reg_688_pp0_iter17_reg[2] <= shl_ln14_1_reg_688_pp0_iter16_reg[2];
        shl_ln14_1_reg_688_pp0_iter18_reg[2] <= shl_ln14_1_reg_688_pp0_iter17_reg[2];
        shl_ln14_1_reg_688_pp0_iter19_reg[2] <= shl_ln14_1_reg_688_pp0_iter18_reg[2];
        shl_ln_reg_648[2 : 1] <= shl_ln_fu_468_p3[2 : 1];
        shl_ln_reg_648_pp0_iter10_reg[2 : 1] <= shl_ln_reg_648_pp0_iter9_reg[2 : 1];
        shl_ln_reg_648_pp0_iter11_reg[2 : 1] <= shl_ln_reg_648_pp0_iter10_reg[2 : 1];
        shl_ln_reg_648_pp0_iter12_reg[2 : 1] <= shl_ln_reg_648_pp0_iter11_reg[2 : 1];
        shl_ln_reg_648_pp0_iter13_reg[2 : 1] <= shl_ln_reg_648_pp0_iter12_reg[2 : 1];
        shl_ln_reg_648_pp0_iter14_reg[2 : 1] <= shl_ln_reg_648_pp0_iter13_reg[2 : 1];
        shl_ln_reg_648_pp0_iter15_reg[2 : 1] <= shl_ln_reg_648_pp0_iter14_reg[2 : 1];
        shl_ln_reg_648_pp0_iter16_reg[2 : 1] <= shl_ln_reg_648_pp0_iter15_reg[2 : 1];
        shl_ln_reg_648_pp0_iter17_reg[2 : 1] <= shl_ln_reg_648_pp0_iter16_reg[2 : 1];
        shl_ln_reg_648_pp0_iter18_reg[2 : 1] <= shl_ln_reg_648_pp0_iter17_reg[2 : 1];
        shl_ln_reg_648_pp0_iter19_reg[2 : 1] <= shl_ln_reg_648_pp0_iter18_reg[2 : 1];
        shl_ln_reg_648_pp0_iter20_reg[2 : 1] <= shl_ln_reg_648_pp0_iter19_reg[2 : 1];
        shl_ln_reg_648_pp0_iter21_reg[2 : 1] <= shl_ln_reg_648_pp0_iter20_reg[2 : 1];
        shl_ln_reg_648_pp0_iter22_reg[2 : 1] <= shl_ln_reg_648_pp0_iter21_reg[2 : 1];
        shl_ln_reg_648_pp0_iter23_reg[2 : 1] <= shl_ln_reg_648_pp0_iter22_reg[2 : 1];
        shl_ln_reg_648_pp0_iter24_reg[2 : 1] <= shl_ln_reg_648_pp0_iter23_reg[2 : 1];
        shl_ln_reg_648_pp0_iter6_reg[2 : 1] <= shl_ln_reg_648[2 : 1];
        shl_ln_reg_648_pp0_iter7_reg[2 : 1] <= shl_ln_reg_648_pp0_iter6_reg[2 : 1];
        shl_ln_reg_648_pp0_iter8_reg[2 : 1] <= shl_ln_reg_648_pp0_iter7_reg[2 : 1];
        shl_ln_reg_648_pp0_iter9_reg[2 : 1] <= shl_ln_reg_648_pp0_iter8_reg[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_7_reg_616_pp0_iter1_reg <= empty_7_reg_616;
        k_1_reg_605 <= ap_sig_allocacmp_k_1;
        k_1_reg_605_pp0_iter1_reg <= k_1_reg_605;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_load_1_reg_668 <= cos_coefficients_table_q5;
        sin_coefficients_table_load_1_reg_673 <= sin_coefficients_table_q5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_load_2_reg_714 <= cos_coefficients_table_q4;
        sin_coefficients_table_load_2_reg_719 <= sin_coefficients_table_q4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_load_3_reg_754 <= cos_coefficients_table_q3;
        sin_coefficients_table_load_3_reg_759 <= sin_coefficients_table_q3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_load_4_reg_794 <= cos_coefficients_table_q2;
        sin_coefficients_table_load_4_reg_799 <= sin_coefficients_table_q2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_load_5_reg_834 <= cos_coefficients_table_q1;
        sin_coefficients_table_load_5_reg_839 <= sin_coefficients_table_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        cos_coefficients_table_load_6_reg_874 <= cos_coefficients_table_q0;
        sin_coefficients_table_load_6_reg_879 <= sin_coefficients_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_load_reg_633 <= cos_coefficients_table_q6;
        sin_coefficients_table_load_reg_638 <= sin_coefficients_table_q6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_fu_438_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_7_reg_616 <= empty_7_fu_450_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_fu_438_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter40_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_k_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_k_1 = k_fu_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        cos_coefficients_table_ce0 = 1'b1;
    end else begin
        cos_coefficients_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_ce1 = 1'b1;
    end else begin
        cos_coefficients_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_ce2 = 1'b1;
    end else begin
        cos_coefficients_table_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_ce3 = 1'b1;
    end else begin
        cos_coefficients_table_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_ce4 = 1'b1;
    end else begin
        cos_coefficients_table_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_ce5 = 1'b1;
    end else begin
        cos_coefficients_table_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cos_coefficients_table_ce6 = 1'b1;
    end else begin
        cos_coefficients_table_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        sin_coefficients_table_ce0 = 1'b1;
    end else begin
        sin_coefficients_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sin_coefficients_table_ce1 = 1'b1;
    end else begin
        sin_coefficients_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sin_coefficients_table_ce2 = 1'b1;
    end else begin
        sin_coefficients_table_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sin_coefficients_table_ce3 = 1'b1;
    end else begin
        sin_coefficients_table_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sin_coefficients_table_ce4 = 1'b1;
    end else begin
        sin_coefficients_table_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sin_coefficients_table_ce5 = 1'b1;
    end else begin
        sin_coefficients_table_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sin_coefficients_table_ce6 = 1'b1;
    end else begin
        sin_coefficients_table_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        sum_i_ce0 = 1'b1;
    end else begin
        sum_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        sum_i_we0 = 1'b1;
    end else begin
        sum_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        sum_r_ce0 = 1'b1;
    end else begin
        sum_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        sum_r_we0 = 1'b1;
    end else begin
        sum_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_444_p2 = (ap_sig_allocacmp_k_1 + 4'd1);

assign add_ln14_fu_509_p2 = (shl_ln14_1_reg_688_pp0_iter19_reg + empty_7_reg_616_pp0_iter19_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign cos_coefficients_table_address0 = zext_ln14_6_fu_535_p1;

assign cos_coefficients_table_address1 = zext_ln14_5_fu_524_p1;

assign cos_coefficients_table_address2 = zext_ln14_4_fu_513_p1;

assign cos_coefficients_table_address3 = zext_ln14_3_fu_504_p1;

assign cos_coefficients_table_address4 = zext_ln14_2_fu_498_p1;

assign cos_coefficients_table_address5 = zext_ln14_1_fu_476_p1;

assign cos_coefficients_table_address6 = zext_ln14_fu_454_p1;

assign empty_7_fu_450_p1 = ap_sig_allocacmp_k_1[2:0];

assign grp_fu_166_p_ce = 1'b1;

assign grp_fu_166_p_din0 = add;

assign grp_fu_166_p_din1 = mul8_1_reg_643;

assign grp_fu_166_p_opcode = 2'd0;

assign grp_fu_171_p_ce = 1'b1;

assign grp_fu_171_p_din0 = add1;

assign grp_fu_171_p_din1 = mul_1_reg_658;

assign grp_fu_171_p_opcode = 2'd0;

assign grp_fu_176_p_ce = 1'b1;

assign grp_fu_176_p_din0 = bitcast_ln14_1;

assign grp_fu_176_p_din1 = cos_coefficients_table_load_reg_633;

assign icmp_ln10_fu_438_p2 = ((ap_sig_allocacmp_k_1 == 4'd8) ? 1'b1 : 1'b0);

assign k_cast1_fu_541_p1 = k_1_reg_605_pp0_iter40_reg;

assign shl_ln14_1_fu_485_p3 = {{trunc_ln14_1_fu_482_p1}, {2'd0}};

assign shl_ln_fu_468_p3 = {{trunc_ln14_fu_465_p1}, {1'd0}};

assign sin_coefficients_table_address0 = zext_ln14_6_fu_535_p1;

assign sin_coefficients_table_address1 = zext_ln14_5_fu_524_p1;

assign sin_coefficients_table_address2 = zext_ln14_4_fu_513_p1;

assign sin_coefficients_table_address3 = zext_ln14_3_fu_504_p1;

assign sin_coefficients_table_address4 = zext_ln14_2_fu_498_p1;

assign sin_coefficients_table_address5 = zext_ln14_1_fu_476_p1;

assign sin_coefficients_table_address6 = zext_ln14_fu_454_p1;

assign sub_ln14_1_fu_519_p2 = (3'd0 - shl_ln_reg_648_pp0_iter24_reg);

assign sub_ln14_2_fu_530_p2 = (3'd0 - empty_7_reg_616_pp0_iter29_reg);

assign sub_ln14_fu_493_p2 = (shl_ln14_1_fu_485_p3 - empty_7_reg_616_pp0_iter9_reg);

assign sum_i_address0 = k_cast1_fu_541_p1;

assign sum_i_d0 = add1_7_reg_909;

assign sum_r_address0 = k_cast1_fu_541_p1;

assign sum_r_d0 = add_7_reg_904;

assign trunc_ln14_1_fu_482_p1 = k_1_reg_605_pp0_iter9_reg[0:0];

assign trunc_ln14_fu_465_p1 = k_1_reg_605_pp0_iter4_reg[1:0];

assign zext_ln14_1_fu_476_p1 = shl_ln_fu_468_p3;

assign zext_ln14_2_fu_498_p1 = sub_ln14_fu_493_p2;

assign zext_ln14_3_fu_504_p1 = shl_ln14_1_reg_688_pp0_iter14_reg;

assign zext_ln14_4_fu_513_p1 = add_ln14_fu_509_p2;

assign zext_ln14_5_fu_524_p1 = sub_ln14_1_fu_519_p2;

assign zext_ln14_6_fu_535_p1 = sub_ln14_2_fu_530_p2;

assign zext_ln14_fu_454_p1 = empty_7_fu_450_p1;

always @ (posedge ap_clk) begin
    shl_ln_reg_648[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter6_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter7_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter8_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter9_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter10_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter11_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter12_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter13_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter14_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter15_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter16_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter17_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter18_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter19_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter20_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter21_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter22_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter23_reg[0] <= 1'b0;
    shl_ln_reg_648_pp0_iter24_reg[0] <= 1'b0;
    shl_ln14_1_reg_688[1:0] <= 2'b00;
    shl_ln14_1_reg_688_pp0_iter11_reg[1:0] <= 2'b00;
    shl_ln14_1_reg_688_pp0_iter12_reg[1:0] <= 2'b00;
    shl_ln14_1_reg_688_pp0_iter13_reg[1:0] <= 2'b00;
    shl_ln14_1_reg_688_pp0_iter14_reg[1:0] <= 2'b00;
    shl_ln14_1_reg_688_pp0_iter15_reg[1:0] <= 2'b00;
    shl_ln14_1_reg_688_pp0_iter16_reg[1:0] <= 2'b00;
    shl_ln14_1_reg_688_pp0_iter17_reg[1:0] <= 2'b00;
    shl_ln14_1_reg_688_pp0_iter18_reg[1:0] <= 2'b00;
    shl_ln14_1_reg_688_pp0_iter19_reg[1:0] <= 2'b00;
end

endmodule //dft_dft_Pipeline_VITIS_LOOP_10_1
