// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dft_dft_Pipeline_VITIS_LOOP_24_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bitcast_ln28,
        real_sample_0_address0,
        real_sample_0_ce0,
        real_sample_0_q0,
        trunc_ln,
        real_sample_1_address0,
        real_sample_1_ce0,
        real_sample_1_q0,
        real_sample_2_address0,
        real_sample_2_ce0,
        real_sample_2_q0,
        real_sample_3_address0,
        real_sample_3_ce0,
        real_sample_3_q0,
        real_sample_4_address0,
        real_sample_4_ce0,
        real_sample_4_q0,
        real_sample_5_address0,
        real_sample_5_ce0,
        real_sample_5_q0,
        real_sample_6_address0,
        real_sample_6_ce0,
        real_sample_6_q0,
        real_sample_7_address0,
        real_sample_7_ce0,
        real_sample_7_q0,
        real_sample_8_address0,
        real_sample_8_ce0,
        real_sample_8_q0,
        real_sample_9_address0,
        real_sample_9_ce0,
        real_sample_9_q0,
        real_sample_10_address0,
        real_sample_10_ce0,
        real_sample_10_q0,
        real_sample_11_address0,
        real_sample_11_ce0,
        real_sample_11_q0,
        real_sample_12_address0,
        real_sample_12_ce0,
        real_sample_12_q0,
        real_sample_13_address0,
        real_sample_13_ce0,
        real_sample_13_q0,
        real_sample_14_address0,
        real_sample_14_ce0,
        real_sample_14_q0,
        real_sample_15_address0,
        real_sample_15_ce0,
        real_sample_15_q0,
        p_out,
        p_out_ap_vld,
        grp_fu_318_p_din0,
        grp_fu_318_p_din1,
        grp_fu_318_p_opcode,
        grp_fu_318_p_dout0,
        grp_fu_318_p_ce,
        grp_fu_322_p_din0,
        grp_fu_322_p_din1,
        grp_fu_322_p_dout0,
        grp_fu_322_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 81'd1;
parameter    ap_ST_fsm_pp0_stage1 = 81'd2;
parameter    ap_ST_fsm_pp0_stage2 = 81'd4;
parameter    ap_ST_fsm_pp0_stage3 = 81'd8;
parameter    ap_ST_fsm_pp0_stage4 = 81'd16;
parameter    ap_ST_fsm_pp0_stage5 = 81'd32;
parameter    ap_ST_fsm_pp0_stage6 = 81'd64;
parameter    ap_ST_fsm_pp0_stage7 = 81'd128;
parameter    ap_ST_fsm_pp0_stage8 = 81'd256;
parameter    ap_ST_fsm_pp0_stage9 = 81'd512;
parameter    ap_ST_fsm_pp0_stage10 = 81'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 81'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 81'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 81'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 81'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 81'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 81'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 81'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 81'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 81'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 81'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 81'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 81'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 81'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 81'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 81'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 81'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 81'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 81'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 81'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 81'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 81'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 81'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 81'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 81'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 81'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 81'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 81'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 81'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 81'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 81'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 81'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 81'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 81'd8796093022208;
parameter    ap_ST_fsm_pp0_stage44 = 81'd17592186044416;
parameter    ap_ST_fsm_pp0_stage45 = 81'd35184372088832;
parameter    ap_ST_fsm_pp0_stage46 = 81'd70368744177664;
parameter    ap_ST_fsm_pp0_stage47 = 81'd140737488355328;
parameter    ap_ST_fsm_pp0_stage48 = 81'd281474976710656;
parameter    ap_ST_fsm_pp0_stage49 = 81'd562949953421312;
parameter    ap_ST_fsm_pp0_stage50 = 81'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage51 = 81'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage52 = 81'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage53 = 81'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage54 = 81'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage55 = 81'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage56 = 81'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage57 = 81'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage58 = 81'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage59 = 81'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage60 = 81'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage61 = 81'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage62 = 81'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage63 = 81'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage64 = 81'd18446744073709551616;
parameter    ap_ST_fsm_pp0_stage65 = 81'd36893488147419103232;
parameter    ap_ST_fsm_pp0_stage66 = 81'd73786976294838206464;
parameter    ap_ST_fsm_pp0_stage67 = 81'd147573952589676412928;
parameter    ap_ST_fsm_pp0_stage68 = 81'd295147905179352825856;
parameter    ap_ST_fsm_pp0_stage69 = 81'd590295810358705651712;
parameter    ap_ST_fsm_pp0_stage70 = 81'd1180591620717411303424;
parameter    ap_ST_fsm_pp0_stage71 = 81'd2361183241434822606848;
parameter    ap_ST_fsm_pp0_stage72 = 81'd4722366482869645213696;
parameter    ap_ST_fsm_pp0_stage73 = 81'd9444732965739290427392;
parameter    ap_ST_fsm_pp0_stage74 = 81'd18889465931478580854784;
parameter    ap_ST_fsm_pp0_stage75 = 81'd37778931862957161709568;
parameter    ap_ST_fsm_pp0_stage76 = 81'd75557863725914323419136;
parameter    ap_ST_fsm_pp0_stage77 = 81'd151115727451828646838272;
parameter    ap_ST_fsm_pp0_stage78 = 81'd302231454903657293676544;
parameter    ap_ST_fsm_pp0_stage79 = 81'd604462909807314587353088;
parameter    ap_ST_fsm_pp0_stage80 = 81'd1208925819614629174706176;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] bitcast_ln28;
output  [3:0] real_sample_0_address0;
output   real_sample_0_ce0;
input  [31:0] real_sample_0_q0;
input  [7:0] trunc_ln;
output  [3:0] real_sample_1_address0;
output   real_sample_1_ce0;
input  [31:0] real_sample_1_q0;
output  [3:0] real_sample_2_address0;
output   real_sample_2_ce0;
input  [31:0] real_sample_2_q0;
output  [3:0] real_sample_3_address0;
output   real_sample_3_ce0;
input  [31:0] real_sample_3_q0;
output  [3:0] real_sample_4_address0;
output   real_sample_4_ce0;
input  [31:0] real_sample_4_q0;
output  [3:0] real_sample_5_address0;
output   real_sample_5_ce0;
input  [31:0] real_sample_5_q0;
output  [3:0] real_sample_6_address0;
output   real_sample_6_ce0;
input  [31:0] real_sample_6_q0;
output  [3:0] real_sample_7_address0;
output   real_sample_7_ce0;
input  [31:0] real_sample_7_q0;
output  [3:0] real_sample_8_address0;
output   real_sample_8_ce0;
input  [31:0] real_sample_8_q0;
output  [3:0] real_sample_9_address0;
output   real_sample_9_ce0;
input  [31:0] real_sample_9_q0;
output  [3:0] real_sample_10_address0;
output   real_sample_10_ce0;
input  [31:0] real_sample_10_q0;
output  [3:0] real_sample_11_address0;
output   real_sample_11_ce0;
input  [31:0] real_sample_11_q0;
output  [3:0] real_sample_12_address0;
output   real_sample_12_ce0;
input  [31:0] real_sample_12_q0;
output  [3:0] real_sample_13_address0;
output   real_sample_13_ce0;
input  [31:0] real_sample_13_q0;
output  [3:0] real_sample_14_address0;
output   real_sample_14_ce0;
input  [31:0] real_sample_14_q0;
output  [3:0] real_sample_15_address0;
output   real_sample_15_ce0;
input  [31:0] real_sample_15_q0;
output  [31:0] p_out;
output   p_out_ap_vld;
output  [31:0] grp_fu_318_p_din0;
output  [31:0] grp_fu_318_p_din1;
output  [1:0] grp_fu_318_p_opcode;
input  [31:0] grp_fu_318_p_dout0;
output   grp_fu_318_p_ce;
output  [31:0] grp_fu_322_p_din0;
output  [31:0] grp_fu_322_p_din1;
input  [31:0] grp_fu_322_p_dout0;
output   grp_fu_322_p_ce;

reg ap_idle;
reg real_sample_0_ce0;
reg real_sample_1_ce0;
reg real_sample_2_ce0;
reg real_sample_3_ce0;
reg real_sample_4_ce0;
reg real_sample_5_ce0;
reg real_sample_6_ce0;
reg real_sample_7_ce0;
reg real_sample_8_ce0;
reg real_sample_9_ce0;
reg real_sample_10_ce0;
reg real_sample_11_ce0;
reg real_sample_12_ce0;
reg real_sample_13_ce0;
reg real_sample_14_ce0;
reg real_sample_15_ce0;
reg p_out_ap_vld;

(* fsm_encoding = "none" *) reg   [80:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state88_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_subdone;
reg   [0:0] tmp_reg_841;
reg    ap_condition_exit_pp0_iter0_stage6;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage80;
wire    ap_block_state81_pp0_stage80_iter0;
wire    ap_block_pp0_stage80_subdone;
reg   [7:0] sin_coefficients_table_address0;
reg    sin_coefficients_table_ce0;
wire   [31:0] sin_coefficients_table_q0;
reg   [31:0] reg_462;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state84_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
reg   [31:0] reg_467;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state85_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
reg   [31:0] reg_472;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state86_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
reg   [31:0] reg_477;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state87_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
reg   [31:0] reg_482;
reg   [31:0] reg_487;
reg   [31:0] reg_492;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
reg   [31:0] reg_497;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_11001;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_11001;
wire    ap_CS_fsm_pp0_stage36;
wire    ap_block_state37_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_11001;
wire    ap_CS_fsm_pp0_stage41;
wire    ap_block_state42_pp0_stage41_iter0;
wire    ap_block_pp0_stage41_11001;
wire    ap_CS_fsm_pp0_stage46;
wire    ap_block_state47_pp0_stage46_iter0;
wire    ap_block_pp0_stage46_11001;
wire    ap_CS_fsm_pp0_stage51;
wire    ap_block_state52_pp0_stage51_iter0;
wire    ap_block_pp0_stage51_11001;
wire    ap_CS_fsm_pp0_stage56;
wire    ap_block_state57_pp0_stage56_iter0;
wire    ap_block_pp0_stage56_11001;
wire    ap_CS_fsm_pp0_stage61;
wire    ap_block_state62_pp0_stage61_iter0;
wire    ap_block_pp0_stage61_11001;
wire    ap_CS_fsm_pp0_stage66;
wire    ap_block_state67_pp0_stage66_iter0;
wire    ap_block_pp0_stage66_11001;
wire    ap_CS_fsm_pp0_stage71;
wire    ap_block_state72_pp0_stage71_iter0;
wire    ap_block_pp0_stage71_11001;
wire    ap_CS_fsm_pp0_stage76;
wire    ap_block_state77_pp0_stage76_iter0;
wire    ap_block_pp0_stage76_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state82_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [8:0] n_1_reg_835;
wire   [0:0] tmp_fu_515_p3;
wire   [7:0] mul_ln30_fu_557_p2;
reg   [7:0] mul_ln30_reg_850;
reg   [31:0] real_sample_0_load_reg_931;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state83_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] real_sample_1_load_reg_941;
reg   [31:0] real_sample_2_load_reg_946;
reg   [31:0] real_sample_3_load_reg_951;
reg   [31:0] real_sample_4_load_reg_956;
reg   [31:0] real_sample_5_load_reg_961;
reg   [31:0] real_sample_6_load_reg_966;
reg   [31:0] real_sample_7_load_reg_971;
reg   [31:0] real_sample_8_load_reg_976;
reg   [31:0] real_sample_9_load_reg_981;
reg   [31:0] real_sample_10_load_reg_986;
reg   [31:0] real_sample_11_load_reg_991;
reg   [31:0] real_sample_12_load_reg_996;
reg   [31:0] real_sample_13_load_reg_1001;
reg   [31:0] real_sample_14_load_reg_1006;
reg   [31:0] real_sample_15_load_reg_1011;
wire   [7:0] add_ln30_fu_567_p2;
reg   [7:0] add_ln30_reg_1016;
wire   [31:0] bitcast_ln30_fu_576_p1;
wire   [7:0] empty_11_fu_580_p2;
reg   [7:0] empty_11_reg_1031;
wire   [31:0] bitcast_ln30_1_fu_589_p1;
wire   [7:0] empty_12_fu_593_p2;
reg   [7:0] empty_12_reg_1046;
wire   [31:0] bitcast_ln30_2_fu_602_p1;
wire   [7:0] empty_13_fu_606_p2;
reg   [7:0] empty_13_reg_1061;
wire   [31:0] select_ln27_fu_623_p3;
reg   [31:0] select_ln27_reg_1071;
wire   [31:0] bitcast_ln30_3_fu_631_p1;
wire   [7:0] empty_14_fu_635_p2;
reg   [7:0] empty_14_reg_1081;
wire   [31:0] bitcast_ln30_4_fu_644_p1;
wire   [7:0] empty_15_fu_648_p2;
reg   [7:0] empty_15_reg_1096;
wire   [31:0] bitcast_ln30_5_fu_657_p1;
wire   [7:0] empty_16_fu_661_p2;
reg   [7:0] empty_16_reg_1111;
reg   [31:0] mul26_3_reg_1121;
wire   [31:0] bitcast_ln30_6_fu_670_p1;
wire   [7:0] empty_17_fu_674_p2;
reg   [7:0] empty_17_reg_1131;
reg   [31:0] mul26_4_reg_1141;
wire   [31:0] bitcast_ln30_7_fu_683_p1;
wire   [7:0] empty_18_fu_687_p2;
reg   [7:0] empty_18_reg_1151;
wire   [31:0] bitcast_ln30_8_fu_696_p1;
wire   [7:0] empty_19_fu_700_p2;
reg   [7:0] empty_19_reg_1166;
reg   [31:0] mul26_6_reg_1176;
wire   [31:0] bitcast_ln30_9_fu_709_p1;
wire   [7:0] empty_20_fu_713_p2;
reg   [7:0] empty_20_reg_1186;
reg   [31:0] mul26_7_reg_1196;
wire   [31:0] bitcast_ln30_10_fu_722_p1;
wire   [7:0] empty_21_fu_726_p2;
reg   [7:0] empty_21_reg_1206;
reg   [31:0] mul26_8_reg_1216;
wire   [31:0] bitcast_ln30_11_fu_735_p1;
wire   [7:0] empty_22_fu_739_p2;
reg   [7:0] empty_22_reg_1226;
reg   [31:0] mul26_9_reg_1236;
wire   [31:0] bitcast_ln30_12_fu_748_p1;
wire   [7:0] empty_24_fu_761_p2;
reg   [7:0] empty_24_reg_1251;
wire   [31:0] bitcast_ln30_13_fu_766_p1;
reg   [31:0] mul26_10_reg_1266;
wire   [31:0] bitcast_ln30_14_fu_774_p1;
reg   [31:0] mul26_11_reg_1276;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire   [31:0] bitcast_ln30_15_fu_778_p1;
reg   [31:0] mul26_12_reg_1286;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
reg   [31:0] mul26_13_reg_1291;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln30_16_fu_537_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln30_fu_563_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln30_1_fu_571_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln30_2_fu_584_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln30_3_fu_597_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln30_4_fu_610_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln30_5_fu_639_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln30_6_fu_652_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln30_7_fu_665_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln30_8_fu_678_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln30_9_fu_691_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln30_10_fu_704_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln30_11_fu_717_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln30_12_fu_730_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln30_13_fu_743_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln30_14_fu_756_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] zext_ln30_15_fu_770_p1;
wire    ap_block_pp0_stage16;
reg   [31:0] empty_fu_86;
reg   [31:0] ap_sig_allocacmp_p_load5;
wire    ap_loop_init;
reg   [8:0] n_fu_90;
wire   [8:0] add_ln24_fu_782_p2;
wire    ap_block_pp0_stage80_11001;
reg   [8:0] ap_sig_allocacmp_n_1;
wire    ap_block_pp0_stage6_01001;
reg   [31:0] grp_fu_454_p0;
reg   [31:0] grp_fu_454_p1;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage32;
wire    ap_block_pp0_stage32;
wire    ap_CS_fsm_pp0_stage37;
wire    ap_block_pp0_stage37;
wire    ap_CS_fsm_pp0_stage42;
wire    ap_block_pp0_stage42;
wire    ap_CS_fsm_pp0_stage47;
wire    ap_block_pp0_stage47;
wire    ap_CS_fsm_pp0_stage52;
wire    ap_block_pp0_stage52;
wire    ap_CS_fsm_pp0_stage57;
wire    ap_block_pp0_stage57;
wire    ap_CS_fsm_pp0_stage62;
wire    ap_block_pp0_stage62;
wire    ap_CS_fsm_pp0_stage67;
wire    ap_block_pp0_stage67;
wire    ap_CS_fsm_pp0_stage72;
wire    ap_block_pp0_stage72;
wire    ap_CS_fsm_pp0_stage77;
wire    ap_block_pp0_stage77;
reg   [31:0] grp_fu_458_p0;
reg   [31:0] grp_fu_458_p1;
wire    ap_block_pp0_stage18;
wire   [3:0] lshr_ln1_fu_527_p4;
wire  signed [7:0] mul_ln30_fu_557_p0;
wire  signed [7:0] add_ln30_fu_567_p1;
wire  signed [7:0] empty_11_fu_580_p1;
wire  signed [7:0] empty_12_fu_593_p1;
wire  signed [7:0] empty_13_fu_606_p1;
wire   [0:0] icmp_ln27_fu_618_p2;
wire  signed [7:0] empty_14_fu_635_p1;
wire  signed [7:0] empty_15_fu_648_p1;
wire  signed [7:0] empty_16_fu_661_p1;
wire  signed [7:0] empty_17_fu_674_p1;
wire  signed [7:0] empty_18_fu_687_p1;
wire  signed [7:0] empty_19_fu_700_p1;
wire  signed [7:0] empty_20_fu_713_p1;
wire  signed [7:0] empty_21_fu_726_p1;
wire  signed [7:0] empty_22_fu_739_p1;
wire  signed [7:0] empty_23_fu_752_p1;
wire   [7:0] empty_23_fu_752_p2;
wire  signed [7:0] empty_24_fu_761_p1;
wire    ap_block_pp0_stage80;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [80:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_state33_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_state34_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_state35_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_state36_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_state38_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_state39_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_state40_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_state41_pp0_stage40_iter0;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_state43_pp0_stage42_iter0;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_state44_pp0_stage43_iter0;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_state45_pp0_stage44_iter0;
wire    ap_block_pp0_stage44_subdone;
wire    ap_block_state46_pp0_stage45_iter0;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_pp0_stage46_subdone;
wire    ap_block_state48_pp0_stage47_iter0;
wire    ap_block_pp0_stage47_subdone;
wire    ap_block_state49_pp0_stage48_iter0;
wire    ap_block_pp0_stage48_subdone;
wire    ap_block_state50_pp0_stage49_iter0;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_state51_pp0_stage50_iter0;
wire    ap_block_pp0_stage50_subdone;
wire    ap_block_pp0_stage51_subdone;
wire    ap_block_state53_pp0_stage52_iter0;
wire    ap_block_pp0_stage52_subdone;
wire    ap_block_state54_pp0_stage53_iter0;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_state55_pp0_stage54_iter0;
wire    ap_block_pp0_stage54_subdone;
wire    ap_block_state56_pp0_stage55_iter0;
wire    ap_block_pp0_stage55_subdone;
wire    ap_block_pp0_stage56_subdone;
wire    ap_block_state58_pp0_stage57_iter0;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_state59_pp0_stage58_iter0;
wire    ap_block_pp0_stage58_subdone;
wire    ap_block_state60_pp0_stage59_iter0;
wire    ap_block_pp0_stage59_subdone;
wire    ap_block_state61_pp0_stage60_iter0;
wire    ap_block_pp0_stage60_subdone;
wire    ap_block_pp0_stage61_subdone;
wire    ap_block_state63_pp0_stage62_iter0;
wire    ap_block_pp0_stage62_subdone;
wire    ap_block_state64_pp0_stage63_iter0;
wire    ap_block_pp0_stage63_subdone;
wire    ap_block_state65_pp0_stage64_iter0;
wire    ap_block_pp0_stage64_subdone;
wire    ap_block_state66_pp0_stage65_iter0;
wire    ap_block_pp0_stage65_subdone;
wire    ap_block_pp0_stage66_subdone;
wire    ap_block_state68_pp0_stage67_iter0;
wire    ap_block_pp0_stage67_subdone;
wire    ap_block_state69_pp0_stage68_iter0;
wire    ap_block_pp0_stage68_subdone;
wire    ap_block_state70_pp0_stage69_iter0;
wire    ap_block_pp0_stage69_subdone;
wire    ap_block_state71_pp0_stage70_iter0;
wire    ap_block_pp0_stage70_subdone;
wire    ap_block_pp0_stage71_subdone;
wire    ap_block_state73_pp0_stage72_iter0;
wire    ap_block_pp0_stage72_subdone;
wire    ap_block_state74_pp0_stage73_iter0;
wire    ap_block_pp0_stage73_subdone;
wire    ap_block_state75_pp0_stage74_iter0;
wire    ap_block_pp0_stage74_subdone;
wire    ap_block_state76_pp0_stage75_iter0;
wire    ap_block_pp0_stage75_subdone;
wire    ap_block_pp0_stage76_subdone;
wire    ap_block_state78_pp0_stage77_iter0;
wire    ap_block_pp0_stage77_subdone;
wire    ap_block_state79_pp0_stage78_iter0;
wire    ap_block_pp0_stage78_subdone;
wire    ap_block_state80_pp0_stage79_iter0;
wire    ap_block_pp0_stage79_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage12_00001;
wire    ap_block_pp0_stage17_00001;
wire    ap_block_pp0_stage22_00001;
wire    ap_block_pp0_stage27_00001;
wire    ap_block_pp0_stage32_00001;
wire    ap_block_pp0_stage37_00001;
wire    ap_block_pp0_stage42_00001;
wire    ap_block_pp0_stage47_00001;
wire    ap_block_pp0_stage52_00001;
wire    ap_block_pp0_stage57_00001;
wire    ap_block_pp0_stage62_00001;
wire    ap_block_pp0_stage67_00001;
wire    ap_block_pp0_stage72_00001;
wire    ap_block_pp0_stage77_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 81'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dft_dft_Pipeline_VITIS_LOOP_24_3_sin_coefficients_table_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sin_coefficients_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sin_coefficients_table_address0),
    .ce0(sin_coefficients_table_ce0),
    .q0(sin_coefficients_table_q0)
);

dft_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U27(
    .din0(mul_ln30_fu_557_p0),
    .din1(trunc_ln),
    .dout(mul_ln30_fu_557_p2)
);

dft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage6),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage6)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage80) & (1'b0 == ap_block_pp0_stage80_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_fu_86 <= bitcast_ln28;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        empty_fu_86 <= reg_497;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        n_fu_90 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage80) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage80_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        n_fu_90 <= add_ln24_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln30_reg_1016 <= add_ln30_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        empty_11_reg_1031 <= empty_11_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        empty_12_reg_1046 <= empty_12_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        empty_13_reg_1061 <= empty_13_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        empty_14_reg_1081 <= empty_14_fu_635_p2;
        select_ln27_reg_1071 <= select_ln27_fu_623_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        empty_15_reg_1096 <= empty_15_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        empty_16_reg_1111 <= empty_16_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        empty_17_reg_1131 <= empty_17_fu_674_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        empty_18_reg_1151 <= empty_18_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        empty_19_reg_1166 <= empty_19_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        empty_20_reg_1186 <= empty_20_fu_713_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        empty_21_reg_1206 <= empty_21_fu_726_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        empty_22_reg_1226 <= empty_22_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        empty_24_reg_1251 <= empty_24_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul26_10_reg_1266 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul26_11_reg_1276 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul26_12_reg_1286 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul26_13_reg_1291 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul26_3_reg_1121 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul26_4_reg_1141 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul26_6_reg_1176 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul26_7_reg_1196 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul26_8_reg_1216 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mul26_9_reg_1236 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_515_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln30_reg_850 <= mul_ln30_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        n_1_reg_835 <= ap_sig_allocacmp_n_1;
        tmp_reg_841 <= ap_sig_allocacmp_n_1[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        real_sample_0_load_reg_931 <= real_sample_0_q0;
        real_sample_10_load_reg_986 <= real_sample_10_q0;
        real_sample_11_load_reg_991 <= real_sample_11_q0;
        real_sample_12_load_reg_996 <= real_sample_12_q0;
        real_sample_13_load_reg_1001 <= real_sample_13_q0;
        real_sample_14_load_reg_1006 <= real_sample_14_q0;
        real_sample_15_load_reg_1011 <= real_sample_15_q0;
        real_sample_1_load_reg_941 <= real_sample_1_q0;
        real_sample_2_load_reg_946 <= real_sample_2_q0;
        real_sample_3_load_reg_951 <= real_sample_3_q0;
        real_sample_4_load_reg_956 <= real_sample_4_q0;
        real_sample_5_load_reg_961 <= real_sample_5_q0;
        real_sample_6_load_reg_966 <= real_sample_6_q0;
        real_sample_7_load_reg_971 <= real_sample_7_q0;
        real_sample_8_load_reg_976 <= real_sample_8_q0;
        real_sample_9_load_reg_981 <= real_sample_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_462 <= sin_coefficients_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_467 <= sin_coefficients_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage16) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_472 <= sin_coefficients_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage17) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_477 <= sin_coefficients_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage11) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_482 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage16) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_487 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage21) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_492 <= grp_fu_322_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage76) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage76_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage71) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage71_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage66) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage66_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage61) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage61_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage56) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage56_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage51) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage51_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage46) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage46_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage41) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage41_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage36) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage36_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (tmp_reg_841 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_497 <= grp_fu_318_p_dout0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (tmp_reg_841 == 1'd1) & (1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_condition_exit_pp0_iter0_stage6 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage80) & (1'b0 == ap_block_pp0_stage80_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_n_1 = 9'd0;
    end else begin
        ap_sig_allocacmp_n_1 = n_fu_90;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_sig_allocacmp_p_load5 = reg_497;
    end else begin
        ap_sig_allocacmp_p_load5 = empty_fu_86;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage72) & (1'b0 == ap_block_pp0_stage72) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage67) & (1'b0 == ap_block_pp0_stage67) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage62) & (1'b0 == ap_block_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage57) & (1'b0 == ap_block_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage52) & (1'b0 == ap_block_pp0_stage52) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_454_p0 = reg_497;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p0 = select_ln27_reg_1071;
    end else begin
        grp_fu_454_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p1 = mul26_13_reg_1291;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage72) & (1'b0 == ap_block_pp0_stage72) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p1 = mul26_12_reg_1286;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage67) & (1'b0 == ap_block_pp0_stage67) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p1 = mul26_11_reg_1276;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage62) & (1'b0 == ap_block_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p1 = mul26_10_reg_1266;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage52) & (1'b0 == ap_block_pp0_stage52) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p1 = mul26_9_reg_1236;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p1 = mul26_8_reg_1216;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p1 = mul26_7_reg_1196;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p1 = mul26_6_reg_1176;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p1 = mul26_4_reg_1141;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_454_p1 = mul26_3_reg_1121;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_454_p1 = reg_492;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage57) & (1'b0 == ap_block_pp0_stage57) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_454_p1 = reg_487;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_454_p1 = reg_482;
    end else begin
        grp_fu_454_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
            grp_fu_458_p0 = bitcast_ln30_15_fu_778_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
            grp_fu_458_p0 = bitcast_ln30_14_fu_774_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
            grp_fu_458_p0 = bitcast_ln30_13_fu_766_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
            grp_fu_458_p0 = bitcast_ln30_12_fu_748_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
            grp_fu_458_p0 = bitcast_ln30_11_fu_735_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
            grp_fu_458_p0 = bitcast_ln30_10_fu_722_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
            grp_fu_458_p0 = bitcast_ln30_9_fu_709_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
            grp_fu_458_p0 = bitcast_ln30_8_fu_696_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
            grp_fu_458_p0 = bitcast_ln30_7_fu_683_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            grp_fu_458_p0 = bitcast_ln30_6_fu_670_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
            grp_fu_458_p0 = bitcast_ln30_5_fu_657_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            grp_fu_458_p0 = bitcast_ln30_4_fu_644_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            grp_fu_458_p0 = bitcast_ln30_3_fu_631_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            grp_fu_458_p0 = bitcast_ln30_2_fu_602_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            grp_fu_458_p0 = bitcast_ln30_1_fu_589_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_458_p0 = bitcast_ln30_fu_576_p1;
        end else begin
            grp_fu_458_p0 = 'bx;
        end
    end else begin
        grp_fu_458_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_458_p1 = reg_477;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_458_p1 = reg_472;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_458_p1 = reg_467;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_458_p1 = reg_462;
    end else begin
        grp_fu_458_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (tmp_reg_841 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_0_ce0 = 1'b1;
    end else begin
        real_sample_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_10_ce0 = 1'b1;
    end else begin
        real_sample_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_11_ce0 = 1'b1;
    end else begin
        real_sample_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_12_ce0 = 1'b1;
    end else begin
        real_sample_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_13_ce0 = 1'b1;
    end else begin
        real_sample_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_14_ce0 = 1'b1;
    end else begin
        real_sample_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_15_ce0 = 1'b1;
    end else begin
        real_sample_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_1_ce0 = 1'b1;
    end else begin
        real_sample_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_2_ce0 = 1'b1;
    end else begin
        real_sample_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_3_ce0 = 1'b1;
    end else begin
        real_sample_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_4_ce0 = 1'b1;
    end else begin
        real_sample_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_5_ce0 = 1'b1;
    end else begin
        real_sample_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_6_ce0 = 1'b1;
    end else begin
        real_sample_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_7_ce0 = 1'b1;
    end else begin
        real_sample_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_8_ce0 = 1'b1;
    end else begin
        real_sample_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        real_sample_9_ce0 = 1'b1;
    end else begin
        real_sample_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
            sin_coefficients_table_address0 = zext_ln30_15_fu_770_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
            sin_coefficients_table_address0 = zext_ln30_14_fu_756_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
            sin_coefficients_table_address0 = zext_ln30_13_fu_743_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
            sin_coefficients_table_address0 = zext_ln30_12_fu_730_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
            sin_coefficients_table_address0 = zext_ln30_11_fu_717_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
            sin_coefficients_table_address0 = zext_ln30_10_fu_704_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
            sin_coefficients_table_address0 = zext_ln30_9_fu_691_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            sin_coefficients_table_address0 = zext_ln30_8_fu_678_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
            sin_coefficients_table_address0 = zext_ln30_7_fu_665_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            sin_coefficients_table_address0 = zext_ln30_6_fu_652_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            sin_coefficients_table_address0 = zext_ln30_5_fu_639_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            sin_coefficients_table_address0 = zext_ln30_4_fu_610_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            sin_coefficients_table_address0 = zext_ln30_3_fu_597_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            sin_coefficients_table_address0 = zext_ln30_2_fu_584_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            sin_coefficients_table_address0 = zext_ln30_1_fu_571_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            sin_coefficients_table_address0 = zext_ln30_fu_563_p1;
        end else begin
            sin_coefficients_table_address0 = 'bx;
        end
    end else begin
        sin_coefficients_table_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        sin_coefficients_table_ce0 = 1'b1;
    end else begin
        sin_coefficients_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage6)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((1'b0 == ap_block_pp0_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_pp0_stage64 : begin
            if ((1'b0 == ap_block_pp0_stage64_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end
        end
        ap_ST_fsm_pp0_stage65 : begin
            if ((1'b0 == ap_block_pp0_stage65_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end
        end
        ap_ST_fsm_pp0_stage66 : begin
            if ((1'b0 == ap_block_pp0_stage66_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end
        end
        ap_ST_fsm_pp0_stage67 : begin
            if ((1'b0 == ap_block_pp0_stage67_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end
        end
        ap_ST_fsm_pp0_stage68 : begin
            if ((1'b0 == ap_block_pp0_stage68_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end
        end
        ap_ST_fsm_pp0_stage69 : begin
            if ((1'b0 == ap_block_pp0_stage69_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end
        end
        ap_ST_fsm_pp0_stage70 : begin
            if ((1'b0 == ap_block_pp0_stage70_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end
        end
        ap_ST_fsm_pp0_stage71 : begin
            if ((1'b0 == ap_block_pp0_stage71_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end
        end
        ap_ST_fsm_pp0_stage72 : begin
            if ((1'b0 == ap_block_pp0_stage72_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end
        end
        ap_ST_fsm_pp0_stage73 : begin
            if ((1'b0 == ap_block_pp0_stage73_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end
        end
        ap_ST_fsm_pp0_stage74 : begin
            if ((1'b0 == ap_block_pp0_stage74_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end
        end
        ap_ST_fsm_pp0_stage75 : begin
            if ((1'b0 == ap_block_pp0_stage75_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage75;
            end
        end
        ap_ST_fsm_pp0_stage76 : begin
            if ((1'b0 == ap_block_pp0_stage76_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage76;
            end
        end
        ap_ST_fsm_pp0_stage77 : begin
            if ((1'b0 == ap_block_pp0_stage77_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage77;
            end
        end
        ap_ST_fsm_pp0_stage78 : begin
            if ((1'b0 == ap_block_pp0_stage78_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage78;
            end
        end
        ap_ST_fsm_pp0_stage79 : begin
            if ((1'b0 == ap_block_pp0_stage79_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage79;
            end
        end
        ap_ST_fsm_pp0_stage80 : begin
            if ((1'b0 == ap_block_pp0_stage80_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage80;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln24_fu_782_p2 = (n_1_reg_835 + 9'd16);

assign add_ln30_fu_567_p1 = trunc_ln;

assign add_ln30_fu_567_p2 = ($signed(mul_ln30_reg_850) + $signed(add_ln30_fu_567_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage37 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage41 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp0_stage42 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp0_stage46 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp0_stage47 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage51 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_pp0_stage52 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_pp0_stage56 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp0_stage57 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage61 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp0_stage62 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_pp0_stage66 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_pp0_stage67 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage71 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_pp0_stage72 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_pp0_stage76 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_pp0_stage77 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage80 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage68_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage69_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage70_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage72 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage72_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage72_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage73_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage74_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage75_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage76_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage76_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage43_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage44_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage47_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage48_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage50_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage51_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage52_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage54_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage55_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage56_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage58_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage59_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage60_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage62_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage63_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage64_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage65_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage66_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage67_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage68_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage69_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage70_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage71_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage72_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage73_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage74_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage75_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage76_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage77_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage78_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage79_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage80_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage6;

assign bitcast_ln30_10_fu_722_p1 = real_sample_10_load_reg_986;

assign bitcast_ln30_11_fu_735_p1 = real_sample_11_load_reg_991;

assign bitcast_ln30_12_fu_748_p1 = real_sample_12_load_reg_996;

assign bitcast_ln30_13_fu_766_p1 = real_sample_13_load_reg_1001;

assign bitcast_ln30_14_fu_774_p1 = real_sample_14_load_reg_1006;

assign bitcast_ln30_15_fu_778_p1 = real_sample_15_load_reg_1011;

assign bitcast_ln30_1_fu_589_p1 = real_sample_1_load_reg_941;

assign bitcast_ln30_2_fu_602_p1 = real_sample_2_load_reg_946;

assign bitcast_ln30_3_fu_631_p1 = real_sample_3_load_reg_951;

assign bitcast_ln30_4_fu_644_p1 = real_sample_4_load_reg_956;

assign bitcast_ln30_5_fu_657_p1 = real_sample_5_load_reg_961;

assign bitcast_ln30_6_fu_670_p1 = real_sample_6_load_reg_966;

assign bitcast_ln30_7_fu_683_p1 = real_sample_7_load_reg_971;

assign bitcast_ln30_8_fu_696_p1 = real_sample_8_load_reg_976;

assign bitcast_ln30_9_fu_709_p1 = real_sample_9_load_reg_981;

assign bitcast_ln30_fu_576_p1 = real_sample_0_load_reg_931;

assign empty_11_fu_580_p1 = trunc_ln;

assign empty_11_fu_580_p2 = ($signed(add_ln30_reg_1016) + $signed(empty_11_fu_580_p1));

assign empty_12_fu_593_p1 = trunc_ln;

assign empty_12_fu_593_p2 = ($signed(empty_11_reg_1031) + $signed(empty_12_fu_593_p1));

assign empty_13_fu_606_p1 = trunc_ln;

assign empty_13_fu_606_p2 = ($signed(empty_12_reg_1046) + $signed(empty_13_fu_606_p1));

assign empty_14_fu_635_p1 = trunc_ln;

assign empty_14_fu_635_p2 = ($signed(empty_13_reg_1061) + $signed(empty_14_fu_635_p1));

assign empty_15_fu_648_p1 = trunc_ln;

assign empty_15_fu_648_p2 = ($signed(empty_14_reg_1081) + $signed(empty_15_fu_648_p1));

assign empty_16_fu_661_p1 = trunc_ln;

assign empty_16_fu_661_p2 = ($signed(empty_15_reg_1096) + $signed(empty_16_fu_661_p1));

assign empty_17_fu_674_p1 = trunc_ln;

assign empty_17_fu_674_p2 = ($signed(empty_16_reg_1111) + $signed(empty_17_fu_674_p1));

assign empty_18_fu_687_p1 = trunc_ln;

assign empty_18_fu_687_p2 = ($signed(empty_17_reg_1131) + $signed(empty_18_fu_687_p1));

assign empty_19_fu_700_p1 = trunc_ln;

assign empty_19_fu_700_p2 = ($signed(empty_18_reg_1151) + $signed(empty_19_fu_700_p1));

assign empty_20_fu_713_p1 = trunc_ln;

assign empty_20_fu_713_p2 = ($signed(empty_19_reg_1166) + $signed(empty_20_fu_713_p1));

assign empty_21_fu_726_p1 = trunc_ln;

assign empty_21_fu_726_p2 = ($signed(empty_20_reg_1186) + $signed(empty_21_fu_726_p1));

assign empty_22_fu_739_p1 = trunc_ln;

assign empty_22_fu_739_p2 = ($signed(empty_21_reg_1206) + $signed(empty_22_fu_739_p1));

assign empty_23_fu_752_p1 = trunc_ln;

assign empty_23_fu_752_p2 = ($signed(empty_22_reg_1226) + $signed(empty_23_fu_752_p1));

assign empty_24_fu_761_p1 = trunc_ln;

assign empty_24_fu_761_p2 = ($signed(empty_23_fu_752_p2) + $signed(empty_24_fu_761_p1));

assign grp_fu_318_p_ce = 1'b1;

assign grp_fu_318_p_din0 = grp_fu_454_p0;

assign grp_fu_318_p_din1 = grp_fu_454_p1;

assign grp_fu_318_p_opcode = 2'd0;

assign grp_fu_322_p_ce = 1'b1;

assign grp_fu_322_p_din0 = grp_fu_458_p0;

assign grp_fu_322_p_din1 = grp_fu_458_p1;

assign icmp_ln27_fu_618_p2 = ((n_1_reg_835 == 9'd0) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_527_p4 = {{ap_sig_allocacmp_n_1[7:4]}};

assign mul_ln30_fu_557_p0 = ap_sig_allocacmp_n_1[7:0];

assign p_out = empty_fu_86;

assign real_sample_0_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_10_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_11_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_12_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_13_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_14_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_15_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_1_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_2_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_3_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_4_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_5_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_6_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_7_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_8_address0 = zext_ln30_16_fu_537_p1;

assign real_sample_9_address0 = zext_ln30_16_fu_537_p1;

assign select_ln27_fu_623_p3 = ((icmp_ln27_fu_618_p2[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_p_load5);

assign tmp_fu_515_p3 = ap_sig_allocacmp_n_1[32'd8];

assign zext_ln30_10_fu_704_p1 = empty_19_fu_700_p2;

assign zext_ln30_11_fu_717_p1 = empty_20_fu_713_p2;

assign zext_ln30_12_fu_730_p1 = empty_21_fu_726_p2;

assign zext_ln30_13_fu_743_p1 = empty_22_fu_739_p2;

assign zext_ln30_14_fu_756_p1 = empty_23_fu_752_p2;

assign zext_ln30_15_fu_770_p1 = empty_24_reg_1251;

assign zext_ln30_16_fu_537_p1 = lshr_ln1_fu_527_p4;

assign zext_ln30_1_fu_571_p1 = add_ln30_fu_567_p2;

assign zext_ln30_2_fu_584_p1 = empty_11_fu_580_p2;

assign zext_ln30_3_fu_597_p1 = empty_12_fu_593_p2;

assign zext_ln30_4_fu_610_p1 = empty_13_fu_606_p2;

assign zext_ln30_5_fu_639_p1 = empty_14_fu_635_p2;

assign zext_ln30_6_fu_652_p1 = empty_15_fu_648_p2;

assign zext_ln30_7_fu_665_p1 = empty_16_fu_661_p2;

assign zext_ln30_8_fu_678_p1 = empty_17_fu_674_p2;

assign zext_ln30_9_fu_691_p1 = empty_18_fu_687_p2;

assign zext_ln30_fu_563_p1 = mul_ln30_reg_850;

endmodule //dft_dft_Pipeline_VITIS_LOOP_24_3
