-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dft_Loop_top_loop_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sum_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    sum_r_ce0 : OUT STD_LOGIC;
    sum_r_we0 : OUT STD_LOGIC;
    sum_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sum_i_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    sum_i_ce0 : OUT STD_LOGIC;
    sum_i_we0 : OUT STD_LOGIC;
    sum_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    real_sample_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_0_ce0 : OUT STD_LOGIC;
    real_sample_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_1_ce0 : OUT STD_LOGIC;
    real_sample_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_2_ce0 : OUT STD_LOGIC;
    real_sample_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_3_ce0 : OUT STD_LOGIC;
    real_sample_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_4_ce0 : OUT STD_LOGIC;
    real_sample_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_5_ce0 : OUT STD_LOGIC;
    real_sample_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_6_ce0 : OUT STD_LOGIC;
    real_sample_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_7_ce0 : OUT STD_LOGIC;
    real_sample_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_8_ce0 : OUT STD_LOGIC;
    real_sample_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_9_ce0 : OUT STD_LOGIC;
    real_sample_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_10_ce0 : OUT STD_LOGIC;
    real_sample_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_11_ce0 : OUT STD_LOGIC;
    real_sample_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_12_ce0 : OUT STD_LOGIC;
    real_sample_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_13_ce0 : OUT STD_LOGIC;
    real_sample_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_14_ce0 : OUT STD_LOGIC;
    real_sample_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_sample_15_ce0 : OUT STD_LOGIC;
    real_sample_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of dft_Loop_top_loop_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage33 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage40 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage41 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage42 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage43 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage44 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage45 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage46 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage47 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage48 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage49 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage50 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage51 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage52 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage53 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage54 : STD_LOGIC_VECTOR (63 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage55 : STD_LOGIC_VECTOR (63 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage56 : STD_LOGIC_VECTOR (63 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage57 : STD_LOGIC_VECTOR (63 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage58 : STD_LOGIC_VECTOR (63 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage59 : STD_LOGIC_VECTOR (63 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage60 : STD_LOGIC_VECTOR (63 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage61 : STD_LOGIC_VECTOR (63 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage62 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage63 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv9_10 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state70_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal icmp_ln13_reg_1174 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage5 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage63 : signal is "none";
    signal ap_block_state64_pp0_stage63_iter0 : BOOLEAN;
    signal ap_block_pp0_stage63_subdone : BOOLEAN;
    signal cos_coefficients_table_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cos_coefficients_table_ce0 : STD_LOGIC;
    signal cos_coefficients_table_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_coefficients_table_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sin_coefficients_table_ce0 : STD_LOGIC;
    signal sin_coefficients_table_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_624 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state66_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state69_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal reg_629 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal reg_634 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state67_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal reg_639 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal reg_644 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state68_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal reg_649 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal grp_fu_618_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_654 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage32 : signal is "none";
    signal ap_block_state33_pp0_stage32_iter0 : BOOLEAN;
    signal ap_block_pp0_stage32_11001 : BOOLEAN;
    signal reg_659 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage33 : signal is "none";
    signal ap_block_state34_pp0_stage33_iter0 : BOOLEAN;
    signal ap_block_pp0_stage33_11001 : BOOLEAN;
    signal reg_669 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal reg_674 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_state25_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal reg_679 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal reg_684 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal ap_block_state26_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_11001 : BOOLEAN;
    signal reg_689 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_613_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage28 : signal is "none";
    signal ap_block_state29_pp0_stage28_iter0 : BOOLEAN;
    signal ap_block_pp0_stage28_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage36 : signal is "none";
    signal ap_block_state37_pp0_stage36_iter0 : BOOLEAN;
    signal ap_block_pp0_stage36_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage40 : signal is "none";
    signal ap_block_state41_pp0_stage40_iter0 : BOOLEAN;
    signal ap_block_pp0_stage40_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage44 : signal is "none";
    signal ap_block_state45_pp0_stage44_iter0 : BOOLEAN;
    signal ap_block_pp0_stage44_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage48 : signal is "none";
    signal ap_block_state49_pp0_stage48_iter0 : BOOLEAN;
    signal ap_block_pp0_stage48_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage52 : signal is "none";
    signal ap_block_state53_pp0_stage52_iter0 : BOOLEAN;
    signal ap_block_pp0_stage52_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage56 : signal is "none";
    signal ap_block_state57_pp0_stage56_iter0 : BOOLEAN;
    signal ap_block_pp0_stage56_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage60 : signal is "none";
    signal ap_block_state61_pp0_stage60_iter0 : BOOLEAN;
    signal ap_block_pp0_stage60_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state65_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage29 : signal is "none";
    signal ap_block_state30_pp0_stage29_iter0 : BOOLEAN;
    signal ap_block_pp0_stage29_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage37 : signal is "none";
    signal ap_block_state38_pp0_stage37_iter0 : BOOLEAN;
    signal ap_block_pp0_stage37_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage41 : signal is "none";
    signal ap_block_state42_pp0_stage41_iter0 : BOOLEAN;
    signal ap_block_pp0_stage41_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage45 : signal is "none";
    signal ap_block_state46_pp0_stage45_iter0 : BOOLEAN;
    signal ap_block_pp0_stage45_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage49 : signal is "none";
    signal ap_block_state50_pp0_stage49_iter0 : BOOLEAN;
    signal ap_block_pp0_stage49_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage53 : signal is "none";
    signal ap_block_state54_pp0_stage53_iter0 : BOOLEAN;
    signal ap_block_pp0_stage53_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage57 : signal is "none";
    signal ap_block_state58_pp0_stage57_iter0 : BOOLEAN;
    signal ap_block_pp0_stage57_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage61 : signal is "none";
    signal ap_block_state62_pp0_stage61_iter0 : BOOLEAN;
    signal ap_block_pp0_stage61_11001 : BOOLEAN;
    signal reg_704 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_709 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_714 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_719 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln13_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln11_1_fu_782_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln11_1_reg_1178 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln11_1_reg_1178_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln11_fu_790_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln11_reg_1183 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln20_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_reg_1202 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln25_fu_834_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln25_reg_1213 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln27_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_1303 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_1303_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln25_fu_879_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_reg_1307 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_sample_1_load_reg_1312 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln25_fu_884_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln25_reg_1317 : STD_LOGIC_VECTOR (7 downto 0);
    signal real_sample_2_load_reg_1332 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_sample_3_load_reg_1337 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_sample_4_load_reg_1342 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_sample_5_load_reg_1347 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_sample_6_load_reg_1352 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_sample_7_load_reg_1357 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_sample_8_load_reg_1362 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_sample_9_load_reg_1367 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_10_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_10_reg_1372 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_11_fu_898_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_11_reg_1377 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_12_fu_902_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_12_reg_1382 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_13_fu_906_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_13_reg_1387 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_14_fu_910_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_14_reg_1392 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_15_fu_914_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_15_reg_1397 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_12_fu_918_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_12_reg_1402 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln25_1_fu_928_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_1_reg_1417 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_13_fu_932_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_13_reg_1422 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_r_1_fu_945_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_14_fu_953_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_14_reg_1442 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_1_fu_966_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_2_fu_974_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_2_reg_1462 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_15_fu_978_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_15_reg_1467 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_16_fu_988_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_16_reg_1482 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln25_3_fu_998_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_3_reg_1497 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_17_fu_1002_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_17_reg_1502 : STD_LOGIC_VECTOR (7 downto 0);
    signal sin_coefficients_table_load_7_reg_1517 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_18_fu_1012_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_18_reg_1522 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln25_4_fu_1022_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_4_reg_1537 : STD_LOGIC_VECTOR (31 downto 0);
    signal cos_coefficients_table_load_8_reg_1542 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_19_fu_1026_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_19_reg_1547 : STD_LOGIC_VECTOR (7 downto 0);
    signal sin_coefficients_table_load_9_reg_1562 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_20_fu_1036_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_20_reg_1567 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln25_5_fu_1046_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_5_reg_1582 : STD_LOGIC_VECTOR (31 downto 0);
    signal cos_coefficients_table_load_10_reg_1587 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_21_fu_1050_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_21_reg_1592 : STD_LOGIC_VECTOR (7 downto 0);
    signal sin_coefficients_table_load_11_reg_1607 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_22_fu_1060_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_22_reg_1612 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln25_6_fu_1070_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_6_reg_1627 : STD_LOGIC_VECTOR (31 downto 0);
    signal cos_coefficients_table_load_12_reg_1632 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_23_fu_1074_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_23_reg_1637 : STD_LOGIC_VECTOR (7 downto 0);
    signal sin_coefficients_table_load_13_reg_1652 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_25_fu_1094_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_25_reg_1667 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln25_7_fu_1099_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_7_reg_1672 : STD_LOGIC_VECTOR (31 downto 0);
    signal cos_coefficients_table_load_14_reg_1677 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_coefficients_table_load_15_reg_1692 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_8_fu_1108_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_8_reg_1697 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_7_i_i_reg_1702 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal mul14_7_i_i_reg_1707 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal bitcast_ln25_9_fu_1112_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln25_9_reg_1712 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_9_i_i_reg_1717 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal mul14_9_i_i_reg_1722 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_state24_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal mul7_11_i_i_reg_1727 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_block_state27_pp0_stage26_iter0 : BOOLEAN;
    signal ap_block_pp0_stage26_11001 : BOOLEAN;
    signal mul14_11_i_i_reg_1732 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_block_state28_pp0_stage27_iter0 : BOOLEAN;
    signal ap_block_pp0_stage27_11001 : BOOLEAN;
    signal mul7_13_i_i_reg_1737 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage30 : signal is "none";
    signal ap_block_state31_pp0_stage30_iter0 : BOOLEAN;
    signal ap_block_pp0_stage30_11001 : BOOLEAN;
    signal mul14_13_i_i_reg_1742 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage31 : signal is "none";
    signal ap_block_state32_pp0_stage31_iter0 : BOOLEAN;
    signal ap_block_pp0_stage31_11001 : BOOLEAN;
    signal mul7_15_i_i_reg_1747 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage34 : signal is "none";
    signal ap_block_state35_pp0_stage34_iter0 : BOOLEAN;
    signal ap_block_pp0_stage34_11001 : BOOLEAN;
    signal mul14_15_i_i_reg_1752 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage35 : signal is "none";
    signal ap_block_state36_pp0_stage35_iter0 : BOOLEAN;
    signal ap_block_pp0_stage35_11001 : BOOLEAN;
    signal sum_i_addr_reg_1757 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln25_16_fu_814_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln25_fu_840_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln25_1_fu_888_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln25_2_fu_922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln25_3_fu_936_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln25_4_fu_957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln25_5_fu_982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln25_6_fu_992_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln25_7_fu_1006_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln25_8_fu_1016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal zext_ln25_9_fu_1030_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal zext_ln25_10_fu_1040_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal zext_ln25_11_fu_1054_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal zext_ln25_12_fu_1064_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal zext_ln25_13_fu_1078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal zext_ln25_14_fu_1088_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal zext_ln25_15_fu_1103_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal zext_ln11_fu_1116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_r_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_r_load : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_tmp_i_load : STD_LOGIC_VECTOR (31 downto 0);
    signal n_fu_102 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln16_fu_858_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n_load : STD_LOGIC_VECTOR (8 downto 0);
    signal k_fu_106 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_k_load : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_fu_110 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln13_fu_748_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_613_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_613_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal ap_block_pp0_stage25 : BOOLEAN;
    signal ap_block_pp0_stage28 : BOOLEAN;
    signal ap_block_pp0_stage29 : BOOLEAN;
    signal ap_block_pp0_stage32 : BOOLEAN;
    signal ap_block_pp0_stage33 : BOOLEAN;
    signal ap_block_pp0_stage36 : BOOLEAN;
    signal ap_block_pp0_stage37 : BOOLEAN;
    signal ap_block_pp0_stage40 : BOOLEAN;
    signal ap_block_pp0_stage41 : BOOLEAN;
    signal ap_block_pp0_stage44 : BOOLEAN;
    signal ap_block_pp0_stage45 : BOOLEAN;
    signal ap_block_pp0_stage48 : BOOLEAN;
    signal ap_block_pp0_stage49 : BOOLEAN;
    signal ap_block_pp0_stage52 : BOOLEAN;
    signal ap_block_pp0_stage53 : BOOLEAN;
    signal ap_block_pp0_stage56 : BOOLEAN;
    signal ap_block_pp0_stage57 : BOOLEAN;
    signal ap_block_pp0_stage60 : BOOLEAN;
    signal ap_block_pp0_stage61 : BOOLEAN;
    signal grp_fu_618_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_618_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_block_pp0_stage26 : BOOLEAN;
    signal ap_block_pp0_stage27 : BOOLEAN;
    signal ap_block_pp0_stage30 : BOOLEAN;
    signal ap_block_pp0_stage31 : BOOLEAN;
    signal tmp_fu_760_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln13_1_fu_776_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln11_fu_768_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln_fu_804_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln25_fu_794_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln25_fu_834_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln16_fu_846_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_24_fu_1084_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_613_ce : STD_LOGIC;
    signal ap_block_state39_pp0_stage38_iter0 : BOOLEAN;
    signal ap_block_pp0_stage38_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage38 : signal is "none";
    signal ap_block_state40_pp0_stage39_iter0 : BOOLEAN;
    signal ap_block_pp0_stage39_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage39 : signal is "none";
    signal ap_block_state43_pp0_stage42_iter0 : BOOLEAN;
    signal ap_block_pp0_stage42_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage42 : signal is "none";
    signal ap_block_state44_pp0_stage43_iter0 : BOOLEAN;
    signal ap_block_pp0_stage43_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage43 : signal is "none";
    signal ap_block_state47_pp0_stage46_iter0 : BOOLEAN;
    signal ap_block_pp0_stage46_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage46 : signal is "none";
    signal ap_block_state48_pp0_stage47_iter0 : BOOLEAN;
    signal ap_block_pp0_stage47_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage47 : signal is "none";
    signal ap_block_state51_pp0_stage50_iter0 : BOOLEAN;
    signal ap_block_pp0_stage50_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage50 : signal is "none";
    signal ap_block_state52_pp0_stage51_iter0 : BOOLEAN;
    signal ap_block_pp0_stage51_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage51 : signal is "none";
    signal ap_block_state55_pp0_stage54_iter0 : BOOLEAN;
    signal ap_block_pp0_stage54_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage54 : signal is "none";
    signal ap_block_state56_pp0_stage55_iter0 : BOOLEAN;
    signal ap_block_pp0_stage55_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage55 : signal is "none";
    signal ap_block_state59_pp0_stage58_iter0 : BOOLEAN;
    signal ap_block_pp0_stage58_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage58 : signal is "none";
    signal ap_block_state60_pp0_stage59_iter0 : BOOLEAN;
    signal ap_block_pp0_stage59_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage59 : signal is "none";
    signal ap_block_state63_pp0_stage62_iter0 : BOOLEAN;
    signal ap_block_pp0_stage62_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage62 : signal is "none";
    signal ap_block_pp0_stage63_11001 : BOOLEAN;
    signal grp_fu_618_ce : STD_LOGIC;
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_block_pp0_stage25_subdone : BOOLEAN;
    signal ap_block_pp0_stage26_subdone : BOOLEAN;
    signal ap_block_pp0_stage27_subdone : BOOLEAN;
    signal ap_block_pp0_stage28_subdone : BOOLEAN;
    signal ap_block_pp0_stage29_subdone : BOOLEAN;
    signal ap_block_pp0_stage30_subdone : BOOLEAN;
    signal ap_block_pp0_stage31_subdone : BOOLEAN;
    signal ap_block_pp0_stage32_subdone : BOOLEAN;
    signal ap_block_pp0_stage33_subdone : BOOLEAN;
    signal ap_block_pp0_stage34_subdone : BOOLEAN;
    signal ap_block_pp0_stage35_subdone : BOOLEAN;
    signal ap_block_pp0_stage36_subdone : BOOLEAN;
    signal ap_block_pp0_stage37_subdone : BOOLEAN;
    signal ap_block_pp0_stage38_subdone : BOOLEAN;
    signal ap_block_pp0_stage39_subdone : BOOLEAN;
    signal ap_block_pp0_stage40_subdone : BOOLEAN;
    signal ap_block_pp0_stage41_subdone : BOOLEAN;
    signal ap_block_pp0_stage42_subdone : BOOLEAN;
    signal ap_block_pp0_stage43_subdone : BOOLEAN;
    signal ap_block_pp0_stage44_subdone : BOOLEAN;
    signal ap_block_pp0_stage45_subdone : BOOLEAN;
    signal ap_block_pp0_stage46_subdone : BOOLEAN;
    signal ap_block_pp0_stage47_subdone : BOOLEAN;
    signal ap_block_pp0_stage48_subdone : BOOLEAN;
    signal ap_block_pp0_stage49_subdone : BOOLEAN;
    signal ap_block_pp0_stage50_subdone : BOOLEAN;
    signal ap_block_pp0_stage51_subdone : BOOLEAN;
    signal ap_block_pp0_stage52_subdone : BOOLEAN;
    signal ap_block_pp0_stage53_subdone : BOOLEAN;
    signal ap_block_pp0_stage54_subdone : BOOLEAN;
    signal ap_block_pp0_stage55_subdone : BOOLEAN;
    signal ap_block_pp0_stage56_subdone : BOOLEAN;
    signal ap_block_pp0_stage57_subdone : BOOLEAN;
    signal ap_block_pp0_stage58_subdone : BOOLEAN;
    signal ap_block_pp0_stage59_subdone : BOOLEAN;
    signal ap_block_pp0_stage60_subdone : BOOLEAN;
    signal ap_block_pp0_stage61_subdone : BOOLEAN;
    signal ap_block_pp0_stage62_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1301 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component dft_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_mul_8s_8s_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dft_Loop_top_loop_proc_cos_coefficients_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_Loop_top_loop_proc_sin_coefficients_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    cos_coefficients_table_U : component dft_Loop_top_loop_proc_cos_coefficients_table_ROM_AUTO_1R
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cos_coefficients_table_address0,
        ce0 => cos_coefficients_table_ce0,
        q0 => cos_coefficients_table_q0);

    sin_coefficients_table_U : component dft_Loop_top_loop_proc_sin_coefficients_table_ROM_AUTO_1R
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sin_coefficients_table_address0,
        ce0 => sin_coefficients_table_ce0,
        q0 => sin_coefficients_table_q0);

    fadd_32ns_32ns_32_5_full_dsp_1_U1 : component dft_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_613_p0,
        din1 => grp_fu_613_p1,
        ce => grp_fu_613_ce,
        dout => grp_fu_613_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U2 : component dft_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_618_p0,
        din1 => grp_fu_618_p1,
        ce => grp_fu_618_ce,
        dout => grp_fu_618_p2);

    mul_8s_8s_8_1_1_U3 : component dft_mul_8s_8s_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        din0 => trunc_ln25_fu_794_p1,
        din1 => mul_ln25_fu_834_p1,
        dout => mul_ln25_fu_834_p2);

    flow_control_loop_pipe_U : component dft_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage5,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage5)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_const_boolean_0 = ap_block_pp0_stage63_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1301)) then
                if ((icmp_ln13_fu_742_p2 = ap_const_lv1_0)) then 
                    indvar_flatten_fu_110 <= add_ln13_fu_748_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_110 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;

    k_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1301)) then
                if ((icmp_ln13_fu_742_p2 = ap_const_lv1_0)) then 
                    k_fu_106 <= select_ln11_1_fu_782_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_106 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;

    n_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1301)) then
                if ((icmp_ln13_fu_742_p2 = ap_const_lv1_0)) then 
                    n_fu_102 <= add_ln16_fu_858_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_102 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln25_reg_1317 <= add_ln25_fu_884_p2;
                bitcast_ln25_10_reg_1372 <= bitcast_ln25_10_fu_894_p1;
                bitcast_ln25_11_reg_1377 <= bitcast_ln25_11_fu_898_p1;
                bitcast_ln25_12_reg_1382 <= bitcast_ln25_12_fu_902_p1;
                bitcast_ln25_13_reg_1387 <= bitcast_ln25_13_fu_906_p1;
                bitcast_ln25_14_reg_1392 <= bitcast_ln25_14_fu_910_p1;
                bitcast_ln25_15_reg_1397 <= bitcast_ln25_15_fu_914_p1;
                bitcast_ln25_reg_1307 <= bitcast_ln25_fu_879_p1;
                real_sample_1_load_reg_1312 <= real_sample_1_q0;
                real_sample_2_load_reg_1332 <= real_sample_2_q0;
                real_sample_3_load_reg_1337 <= real_sample_3_q0;
                real_sample_4_load_reg_1342 <= real_sample_4_q0;
                real_sample_5_load_reg_1347 <= real_sample_5_q0;
                real_sample_6_load_reg_1352 <= real_sample_6_q0;
                real_sample_7_load_reg_1357 <= real_sample_7_q0;
                real_sample_8_load_reg_1362 <= real_sample_8_q0;
                real_sample_9_load_reg_1367 <= real_sample_9_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                bitcast_ln25_1_reg_1417 <= bitcast_ln25_1_fu_928_p1;
                empty_13_reg_1422 <= empty_13_fu_932_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                bitcast_ln25_2_reg_1462 <= bitcast_ln25_2_fu_974_p1;
                empty_15_reg_1467 <= empty_15_fu_978_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                bitcast_ln25_3_reg_1497 <= bitcast_ln25_3_fu_998_p1;
                empty_17_reg_1502 <= empty_17_fu_1002_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                bitcast_ln25_4_reg_1537 <= bitcast_ln25_4_fu_1022_p1;
                empty_19_reg_1547 <= empty_19_fu_1026_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                bitcast_ln25_5_reg_1582 <= bitcast_ln25_5_fu_1046_p1;
                empty_21_reg_1592 <= empty_21_fu_1050_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then
                bitcast_ln25_6_reg_1627 <= bitcast_ln25_6_fu_1070_p1;
                empty_23_reg_1637 <= empty_23_fu_1074_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then
                bitcast_ln25_7_reg_1672 <= bitcast_ln25_7_fu_1099_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                bitcast_ln25_8_reg_1697 <= bitcast_ln25_8_fu_1108_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                bitcast_ln25_9_reg_1712 <= bitcast_ln25_9_fu_1112_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                cos_coefficients_table_load_10_reg_1587 <= cos_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then
                cos_coefficients_table_load_12_reg_1632 <= cos_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then
                cos_coefficients_table_load_14_reg_1677 <= cos_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                cos_coefficients_table_load_8_reg_1542 <= cos_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                empty_12_reg_1402 <= empty_12_fu_918_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                empty_14_reg_1442 <= empty_14_fu_953_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                empty_16_reg_1482 <= empty_16_fu_988_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                empty_18_reg_1522 <= empty_18_fu_1012_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                empty_20_reg_1567 <= empty_20_fu_1036_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then
                empty_22_reg_1612 <= empty_22_fu_1060_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then
                empty_25_reg_1667 <= empty_25_fu_1094_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln13_reg_1174 <= icmp_ln13_fu_742_p2;
                icmp_ln27_reg_1303_pp0_iter1_reg <= icmp_ln27_reg_1303;
                select_ln11_1_reg_1178_pp0_iter1_reg <= select_ln11_1_reg_1178;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln13_fu_742_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln20_reg_1202 <= icmp_ln20_fu_798_p2;
                icmp_ln27_reg_1303 <= icmp_ln27_fu_852_p2;
                mul_ln25_reg_1213 <= mul_ln25_fu_834_p2;
                select_ln11_1_reg_1178 <= select_ln11_1_fu_782_p3;
                trunc_ln11_reg_1183 <= trunc_ln11_fu_790_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001))) then
                mul14_11_i_i_reg_1732 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage31_11001))) then
                mul14_13_i_i_reg_1742 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage35_11001))) then
                mul14_15_i_i_reg_1752 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                mul14_7_i_i_reg_1707 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001))) then
                mul14_9_i_i_reg_1722 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001))) then
                mul7_11_i_i_reg_1727 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001))) then
                mul7_13_i_i_reg_1737 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage34_11001))) then
                mul7_15_i_i_reg_1747 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                mul7_7_i_i_reg_1702 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then
                mul7_9_i_i_reg_1717 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_624 <= cos_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_629 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_634 <= cos_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_639 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then
                reg_644 <= cos_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then
                reg_649 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage32_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then
                reg_654 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then
                reg_659 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage33_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)))) then
                reg_664 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)))) then
                reg_669 <= cos_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)))) then
                reg_674 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)))) then
                reg_679 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)))) then
                reg_684 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)))) then
                reg_689 <= cos_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)))) then
                reg_704 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)))) then
                reg_709 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage28_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)))) then
                reg_714 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage29_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)))) then
                reg_719 <= grp_fu_618_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then
                sin_coefficients_table_load_11_reg_1607 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then
                sin_coefficients_table_load_13_reg_1652 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                sin_coefficients_table_load_15_reg_1692 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                sin_coefficients_table_load_7_reg_1517 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln13_reg_1174 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                sin_coefficients_table_load_9_reg_1562 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                sum_i_addr_reg_1757 <= zext_ln11_fu_1116_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                tmp_i_fu_98 <= grp_fu_613_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                tmp_r_fu_94 <= grp_fu_613_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage5_subdone, ap_condition_exit_pp0_iter0_stage5, ap_block_pp0_stage63_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone, ap_block_pp0_stage24_subdone, ap_block_pp0_stage25_subdone, ap_block_pp0_stage26_subdone, ap_block_pp0_stage27_subdone, ap_block_pp0_stage28_subdone, ap_block_pp0_stage29_subdone, ap_block_pp0_stage30_subdone, ap_block_pp0_stage31_subdone, ap_block_pp0_stage32_subdone, ap_block_pp0_stage33_subdone, ap_block_pp0_stage34_subdone, ap_block_pp0_stage35_subdone, ap_block_pp0_stage36_subdone, ap_block_pp0_stage37_subdone, ap_block_pp0_stage38_subdone, ap_block_pp0_stage39_subdone, ap_block_pp0_stage40_subdone, ap_block_pp0_stage41_subdone, ap_block_pp0_stage42_subdone, ap_block_pp0_stage43_subdone, ap_block_pp0_stage44_subdone, ap_block_pp0_stage45_subdone, ap_block_pp0_stage46_subdone, ap_block_pp0_stage47_subdone, ap_block_pp0_stage48_subdone, ap_block_pp0_stage49_subdone, ap_block_pp0_stage50_subdone, ap_block_pp0_stage51_subdone, ap_block_pp0_stage52_subdone, ap_block_pp0_stage53_subdone, ap_block_pp0_stage54_subdone, ap_block_pp0_stage55_subdone, ap_block_pp0_stage56_subdone, ap_block_pp0_stage57_subdone, ap_block_pp0_stage58_subdone, ap_block_pp0_stage59_subdone, ap_block_pp0_stage60_subdone, ap_block_pp0_stage61_subdone, ap_block_pp0_stage62_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage5)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when ap_ST_fsm_pp0_stage26 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage26_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                end if;
            when ap_ST_fsm_pp0_stage27 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage27_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                end if;
            when ap_ST_fsm_pp0_stage28 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage28_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                end if;
            when ap_ST_fsm_pp0_stage29 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage29_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                end if;
            when ap_ST_fsm_pp0_stage30 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage30_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                end if;
            when ap_ST_fsm_pp0_stage31 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage31_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                end if;
            when ap_ST_fsm_pp0_stage32 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage32_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                end if;
            when ap_ST_fsm_pp0_stage33 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage33_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                end if;
            when ap_ST_fsm_pp0_stage34 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage34_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                end if;
            when ap_ST_fsm_pp0_stage35 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage35_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                end if;
            when ap_ST_fsm_pp0_stage36 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage36_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                end if;
            when ap_ST_fsm_pp0_stage37 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage37_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                end if;
            when ap_ST_fsm_pp0_stage38 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage38_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                end if;
            when ap_ST_fsm_pp0_stage39 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage39_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                end if;
            when ap_ST_fsm_pp0_stage40 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage40_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage41;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage40;
                end if;
            when ap_ST_fsm_pp0_stage41 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage41_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage42;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage41;
                end if;
            when ap_ST_fsm_pp0_stage42 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage42_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage43;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage42;
                end if;
            when ap_ST_fsm_pp0_stage43 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage43_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage44;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage43;
                end if;
            when ap_ST_fsm_pp0_stage44 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage44_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage44;
                end if;
            when ap_ST_fsm_pp0_stage45 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage45_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage46;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage45;
                end if;
            when ap_ST_fsm_pp0_stage46 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage46_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage47;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage46;
                end if;
            when ap_ST_fsm_pp0_stage47 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage47_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage48;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage47;
                end if;
            when ap_ST_fsm_pp0_stage48 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage48_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage49;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage48;
                end if;
            when ap_ST_fsm_pp0_stage49 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage49_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage50;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage49;
                end if;
            when ap_ST_fsm_pp0_stage50 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage50_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage50;
                end if;
            when ap_ST_fsm_pp0_stage51 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage51_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage52;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage51;
                end if;
            when ap_ST_fsm_pp0_stage52 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage52_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage53;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage52;
                end if;
            when ap_ST_fsm_pp0_stage53 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage53_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage54;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage53;
                end if;
            when ap_ST_fsm_pp0_stage54 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage54_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage55;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage54;
                end if;
            when ap_ST_fsm_pp0_stage55 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage55_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage56;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage55;
                end if;
            when ap_ST_fsm_pp0_stage56 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage56_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage57;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage56;
                end if;
            when ap_ST_fsm_pp0_stage57 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage57_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage58;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage57;
                end if;
            when ap_ST_fsm_pp0_stage58 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage58_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage59;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage58;
                end if;
            when ap_ST_fsm_pp0_stage59 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage59_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage60;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage59;
                end if;
            when ap_ST_fsm_pp0_stage60 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage60_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage61;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage60;
                end if;
            when ap_ST_fsm_pp0_stage61 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage61_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage62;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage61;
                end if;
            when ap_ST_fsm_pp0_stage62 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage62_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage63;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage62;
                end if;
            when ap_ST_fsm_pp0_stage63 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage63_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage63;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln13_1_fu_776_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_k_load) + unsigned(ap_const_lv9_1));
    add_ln13_fu_748_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv13_1));
    add_ln16_fu_858_p2 <= std_logic_vector(unsigned(select_ln11_fu_768_p3) + unsigned(ap_const_lv9_10));
    add_ln25_fu_884_p2 <= std_logic_vector(unsigned(mul_ln25_reg_1213) + unsigned(trunc_ln11_reg_1183));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(26);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(27);
    ap_CS_fsm_pp0_stage28 <= ap_CS_fsm(28);
    ap_CS_fsm_pp0_stage29 <= ap_CS_fsm(29);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage30 <= ap_CS_fsm(30);
    ap_CS_fsm_pp0_stage31 <= ap_CS_fsm(31);
    ap_CS_fsm_pp0_stage32 <= ap_CS_fsm(32);
    ap_CS_fsm_pp0_stage33 <= ap_CS_fsm(33);
    ap_CS_fsm_pp0_stage34 <= ap_CS_fsm(34);
    ap_CS_fsm_pp0_stage35 <= ap_CS_fsm(35);
    ap_CS_fsm_pp0_stage36 <= ap_CS_fsm(36);
    ap_CS_fsm_pp0_stage37 <= ap_CS_fsm(37);
    ap_CS_fsm_pp0_stage38 <= ap_CS_fsm(38);
    ap_CS_fsm_pp0_stage39 <= ap_CS_fsm(39);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage40 <= ap_CS_fsm(40);
    ap_CS_fsm_pp0_stage41 <= ap_CS_fsm(41);
    ap_CS_fsm_pp0_stage42 <= ap_CS_fsm(42);
    ap_CS_fsm_pp0_stage43 <= ap_CS_fsm(43);
    ap_CS_fsm_pp0_stage44 <= ap_CS_fsm(44);
    ap_CS_fsm_pp0_stage45 <= ap_CS_fsm(45);
    ap_CS_fsm_pp0_stage46 <= ap_CS_fsm(46);
    ap_CS_fsm_pp0_stage47 <= ap_CS_fsm(47);
    ap_CS_fsm_pp0_stage48 <= ap_CS_fsm(48);
    ap_CS_fsm_pp0_stage49 <= ap_CS_fsm(49);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage50 <= ap_CS_fsm(50);
    ap_CS_fsm_pp0_stage51 <= ap_CS_fsm(51);
    ap_CS_fsm_pp0_stage52 <= ap_CS_fsm(52);
    ap_CS_fsm_pp0_stage53 <= ap_CS_fsm(53);
    ap_CS_fsm_pp0_stage54 <= ap_CS_fsm(54);
    ap_CS_fsm_pp0_stage55 <= ap_CS_fsm(55);
    ap_CS_fsm_pp0_stage56 <= ap_CS_fsm(56);
    ap_CS_fsm_pp0_stage57 <= ap_CS_fsm(57);
    ap_CS_fsm_pp0_stage58 <= ap_CS_fsm(58);
    ap_CS_fsm_pp0_stage59 <= ap_CS_fsm(59);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage60 <= ap_CS_fsm(60);
    ap_CS_fsm_pp0_stage61 <= ap_CS_fsm(61);
    ap_CS_fsm_pp0_stage62 <= ap_CS_fsm(62);
    ap_CS_fsm_pp0_stage63 <= ap_CS_fsm(63);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_done_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage50_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage50_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage51_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage51_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage52_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage52_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage53_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage53_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage54_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage54_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage55_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage55_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage56_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage56_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage57_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage57_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage58_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage58_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage59_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage59_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage60_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage60_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage61 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage61_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage61_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage62_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage62_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage63_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage63_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_done_reg)
    begin
                ap_block_pp0_stage6_11001 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_done_reg)
    begin
                ap_block_pp0_stage6_subdone <= (ap_done_reg = ap_const_logic_1);
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;

        ap_block_state20_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage20_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage21_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage22_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage23_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage24_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage25_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage26_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage27_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage28_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage29_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage30_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage31_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage32_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage33_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage34_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage35_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage36_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage37_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage38_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage39_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage40_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage41_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage42_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage43_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage44_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage45_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage46_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage47_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage48_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage49_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage50_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage51_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage52_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage53_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage54_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage55_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage56_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage57_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage58_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage59_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage60_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage61_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage62_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage63_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1301_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_1301 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_exit_pp0_iter0_stage5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_subdone, icmp_ln13_reg_1174)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln13_reg_1174 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_subdone))) then 
            ap_condition_exit_pp0_iter0_stage5 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage5;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage63, ap_block_pp0_stage63_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_const_boolean_0 = ap_block_pp0_stage63_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_110)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_110;
        end if; 
    end process;


    ap_sig_allocacmp_k_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, k_fu_106)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_k_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_k_load <= k_fu_106;
        end if; 
    end process;


    ap_sig_allocacmp_n_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, n_fu_102, ap_loop_init)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_n_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_n_load <= n_fu_102;
        end if; 
    end process;


    ap_sig_allocacmp_tmp_i_load_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, grp_fu_613_p2, ap_block_pp0_stage5, tmp_i_fu_98)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            ap_sig_allocacmp_tmp_i_load <= grp_fu_613_p2;
        else 
            ap_sig_allocacmp_tmp_i_load <= tmp_i_fu_98;
        end if; 
    end process;


    ap_sig_allocacmp_tmp_r_load_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, grp_fu_613_p2, ap_block_pp0_stage4, tmp_r_fu_94)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            ap_sig_allocacmp_tmp_r_load <= grp_fu_613_p2;
        else 
            ap_sig_allocacmp_tmp_r_load <= tmp_r_fu_94;
        end if; 
    end process;

    bitcast_ln25_10_fu_894_p1 <= real_sample_10_q0;
    bitcast_ln25_11_fu_898_p1 <= real_sample_11_q0;
    bitcast_ln25_12_fu_902_p1 <= real_sample_12_q0;
    bitcast_ln25_13_fu_906_p1 <= real_sample_13_q0;
    bitcast_ln25_14_fu_910_p1 <= real_sample_14_q0;
    bitcast_ln25_15_fu_914_p1 <= real_sample_15_q0;
    bitcast_ln25_1_fu_928_p1 <= real_sample_1_load_reg_1312;
    bitcast_ln25_2_fu_974_p1 <= real_sample_2_load_reg_1332;
    bitcast_ln25_3_fu_998_p1 <= real_sample_3_load_reg_1337;
    bitcast_ln25_4_fu_1022_p1 <= real_sample_4_load_reg_1342;
    bitcast_ln25_5_fu_1046_p1 <= real_sample_5_load_reg_1347;
    bitcast_ln25_6_fu_1070_p1 <= real_sample_6_load_reg_1352;
    bitcast_ln25_7_fu_1099_p1 <= real_sample_7_load_reg_1357;
    bitcast_ln25_8_fu_1108_p1 <= real_sample_8_load_reg_1362;
    bitcast_ln25_9_fu_1112_p1 <= real_sample_9_load_reg_1367;
    bitcast_ln25_fu_879_p1 <= real_sample_0_q0;

    cos_coefficients_table_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage0, zext_ln25_fu_840_p1, zext_ln25_1_fu_888_p1, ap_block_pp0_stage1, zext_ln25_2_fu_922_p1, ap_block_pp0_stage2, zext_ln25_3_fu_936_p1, ap_block_pp0_stage3, zext_ln25_4_fu_957_p1, ap_block_pp0_stage4, zext_ln25_5_fu_982_p1, ap_block_pp0_stage5, zext_ln25_6_fu_992_p1, ap_block_pp0_stage6, zext_ln25_7_fu_1006_p1, ap_block_pp0_stage7, zext_ln25_8_fu_1016_p1, ap_block_pp0_stage8, zext_ln25_9_fu_1030_p1, ap_block_pp0_stage9, zext_ln25_10_fu_1040_p1, ap_block_pp0_stage10, zext_ln25_11_fu_1054_p1, ap_block_pp0_stage11, zext_ln25_12_fu_1064_p1, ap_block_pp0_stage12, zext_ln25_13_fu_1078_p1, ap_block_pp0_stage13, zext_ln25_14_fu_1088_p1, ap_block_pp0_stage14, zext_ln25_15_fu_1103_p1, ap_block_pp0_stage15)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
                cos_coefficients_table_address0 <= zext_ln25_15_fu_1103_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
                cos_coefficients_table_address0 <= zext_ln25_14_fu_1088_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
                cos_coefficients_table_address0 <= zext_ln25_13_fu_1078_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
                cos_coefficients_table_address0 <= zext_ln25_12_fu_1064_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
                cos_coefficients_table_address0 <= zext_ln25_11_fu_1054_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
                cos_coefficients_table_address0 <= zext_ln25_10_fu_1040_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
                cos_coefficients_table_address0 <= zext_ln25_9_fu_1030_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
                cos_coefficients_table_address0 <= zext_ln25_8_fu_1016_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
                cos_coefficients_table_address0 <= zext_ln25_7_fu_1006_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
                cos_coefficients_table_address0 <= zext_ln25_6_fu_992_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
                cos_coefficients_table_address0 <= zext_ln25_5_fu_982_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
                cos_coefficients_table_address0 <= zext_ln25_4_fu_957_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                cos_coefficients_table_address0 <= zext_ln25_3_fu_936_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                cos_coefficients_table_address0 <= zext_ln25_2_fu_922_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                cos_coefficients_table_address0 <= zext_ln25_1_fu_888_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                cos_coefficients_table_address0 <= zext_ln25_fu_840_p1(8 - 1 downto 0);
            else 
                cos_coefficients_table_address0 <= "XXXXXXXX";
            end if;
        else 
            cos_coefficients_table_address0 <= "XXXXXXXX";
        end if; 
    end process;


    cos_coefficients_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            cos_coefficients_table_ce0 <= ap_const_logic_1;
        else 
            cos_coefficients_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_12_fu_918_p2 <= std_logic_vector(unsigned(add_ln25_reg_1317) + unsigned(trunc_ln11_reg_1183));
    empty_13_fu_932_p2 <= std_logic_vector(unsigned(empty_12_reg_1402) + unsigned(trunc_ln11_reg_1183));
    empty_14_fu_953_p2 <= std_logic_vector(unsigned(empty_13_reg_1422) + unsigned(trunc_ln11_reg_1183));
    empty_15_fu_978_p2 <= std_logic_vector(unsigned(empty_14_reg_1442) + unsigned(trunc_ln11_reg_1183));
    empty_16_fu_988_p2 <= std_logic_vector(unsigned(empty_15_reg_1467) + unsigned(trunc_ln11_reg_1183));
    empty_17_fu_1002_p2 <= std_logic_vector(unsigned(empty_16_reg_1482) + unsigned(trunc_ln11_reg_1183));
    empty_18_fu_1012_p2 <= std_logic_vector(unsigned(empty_17_reg_1502) + unsigned(trunc_ln11_reg_1183));
    empty_19_fu_1026_p2 <= std_logic_vector(unsigned(empty_18_reg_1522) + unsigned(trunc_ln11_reg_1183));
    empty_20_fu_1036_p2 <= std_logic_vector(unsigned(empty_19_reg_1547) + unsigned(trunc_ln11_reg_1183));
    empty_21_fu_1050_p2 <= std_logic_vector(unsigned(empty_20_reg_1567) + unsigned(trunc_ln11_reg_1183));
    empty_22_fu_1060_p2 <= std_logic_vector(unsigned(empty_21_reg_1592) + unsigned(trunc_ln11_reg_1183));
    empty_23_fu_1074_p2 <= std_logic_vector(unsigned(empty_22_reg_1612) + unsigned(trunc_ln11_reg_1183));
    empty_24_fu_1084_p2 <= std_logic_vector(unsigned(empty_23_reg_1637) + unsigned(trunc_ln11_reg_1183));
    empty_25_fu_1094_p2 <= std_logic_vector(unsigned(empty_24_fu_1084_p2) + unsigned(trunc_ln11_reg_1183));

    grp_fu_613_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage63, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage32, ap_block_pp0_stage32_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage36, ap_block_pp0_stage36_11001, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage40_11001, ap_CS_fsm_pp0_stage44, ap_block_pp0_stage44_11001, ap_CS_fsm_pp0_stage48, ap_block_pp0_stage48_11001, ap_CS_fsm_pp0_stage52, ap_block_pp0_stage52_11001, ap_CS_fsm_pp0_stage56, ap_block_pp0_stage56_11001, ap_CS_fsm_pp0_stage60, ap_block_pp0_stage60_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage37_11001, ap_CS_fsm_pp0_stage41, ap_block_pp0_stage41_11001, ap_CS_fsm_pp0_stage45, ap_block_pp0_stage45_11001, ap_CS_fsm_pp0_stage49, ap_block_pp0_stage49_11001, ap_CS_fsm_pp0_stage53, ap_block_pp0_stage53_11001, ap_CS_fsm_pp0_stage57, ap_block_pp0_stage57_11001, ap_CS_fsm_pp0_stage61, ap_block_pp0_stage61_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31_11001, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage34_11001, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35_11001, ap_block_pp0_stage38_11001, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage39_11001, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage42_11001, ap_CS_fsm_pp0_stage42, ap_block_pp0_stage43_11001, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage46_11001, ap_CS_fsm_pp0_stage46, ap_block_pp0_stage47_11001, ap_CS_fsm_pp0_stage47, ap_block_pp0_stage50_11001, ap_CS_fsm_pp0_stage50, ap_block_pp0_stage51_11001, ap_CS_fsm_pp0_stage51, ap_block_pp0_stage54_11001, ap_CS_fsm_pp0_stage54, ap_block_pp0_stage55_11001, ap_CS_fsm_pp0_stage55, ap_block_pp0_stage58_11001, ap_CS_fsm_pp0_stage58, ap_block_pp0_stage59_11001, ap_CS_fsm_pp0_stage59, ap_block_pp0_stage62_11001, ap_CS_fsm_pp0_stage62, ap_block_pp0_stage63_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_const_boolean_0 = ap_block_pp0_stage61_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage57) and (ap_const_boolean_0 = ap_block_pp0_stage57_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_const_boolean_0 = ap_block_pp0_stage53_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_const_boolean_0 = ap_block_pp0_stage49_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_const_boolean_0 = ap_block_pp0_stage45_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_const_boolean_0 = ap_block_pp0_stage41_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_const_boolean_0 = ap_block_pp0_stage37_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_const_boolean_0 = ap_block_pp0_stage60_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage56) and (ap_const_boolean_0 = ap_block_pp0_stage56_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_const_boolean_0 = ap_block_pp0_stage52_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_const_boolean_0 = ap_block_pp0_stage48_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_const_boolean_0 = ap_block_pp0_stage44_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_const_boolean_0 = ap_block_pp0_stage40_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_const_boolean_0 = ap_block_pp0_stage36_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_const_boolean_0 = ap_block_pp0_stage33_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_const_boolean_0 = ap_block_pp0_stage32_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage62) and (ap_const_boolean_0 = ap_block_pp0_stage62_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage59) and (ap_const_boolean_0 = ap_block_pp0_stage59_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage58) and (ap_const_boolean_0 = ap_block_pp0_stage58_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage55) and (ap_const_boolean_0 = ap_block_pp0_stage55_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage54) and (ap_const_boolean_0 = ap_block_pp0_stage54_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_const_boolean_0 = ap_block_pp0_stage51_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_const_boolean_0 = ap_block_pp0_stage50_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage47) and (ap_const_boolean_0 = ap_block_pp0_stage47_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage46) and (ap_const_boolean_0 = ap_block_pp0_stage46_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_const_boolean_0 = ap_block_pp0_stage43_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage42) and (ap_const_boolean_0 = ap_block_pp0_stage42_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_const_boolean_0 = ap_block_pp0_stage39_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (ap_const_boolean_0 = ap_block_pp0_stage38_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage63) and (ap_const_boolean_0 = ap_block_pp0_stage63_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_const_boolean_0 = ap_block_pp0_stage35_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_const_boolean_0 = ap_block_pp0_stage34_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)))) then 
            grp_fu_613_ce <= ap_const_logic_1;
        else 
            grp_fu_613_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_613_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage32, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage33, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, grp_fu_613_p2, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage40, ap_CS_fsm_pp0_stage44, ap_CS_fsm_pp0_stage48, ap_CS_fsm_pp0_stage52, ap_CS_fsm_pp0_stage56, ap_CS_fsm_pp0_stage60, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage41, ap_CS_fsm_pp0_stage45, ap_CS_fsm_pp0_stage49, ap_CS_fsm_pp0_stage53, ap_CS_fsm_pp0_stage57, ap_CS_fsm_pp0_stage61, tmp_r_1_fu_945_p3, tmp_i_1_fu_966_p3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage16, ap_block_pp0_stage17, ap_block_pp0_stage20, ap_block_pp0_stage21, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage28, ap_block_pp0_stage29, ap_block_pp0_stage32, ap_block_pp0_stage33, ap_block_pp0_stage36, ap_block_pp0_stage37, ap_block_pp0_stage40, ap_block_pp0_stage41, ap_block_pp0_stage44, ap_block_pp0_stage45, ap_block_pp0_stage48, ap_block_pp0_stage49, ap_block_pp0_stage52, ap_block_pp0_stage53, ap_block_pp0_stage56, ap_block_pp0_stage57, ap_block_pp0_stage60, ap_block_pp0_stage61)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_const_boolean_0 = ap_block_pp0_stage61)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage57) and (ap_const_boolean_0 = ap_block_pp0_stage57)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_const_boolean_0 = ap_block_pp0_stage53)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_const_boolean_0 = ap_block_pp0_stage49)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_const_boolean_0 = ap_block_pp0_stage45)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_const_boolean_0 = ap_block_pp0_stage41)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_const_boolean_0 = ap_block_pp0_stage37)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_const_boolean_0 = ap_block_pp0_stage60)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage56) and (ap_const_boolean_0 = ap_block_pp0_stage56)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_const_boolean_0 = ap_block_pp0_stage52)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_const_boolean_0 = ap_block_pp0_stage48)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_const_boolean_0 = ap_block_pp0_stage44)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_const_boolean_0 = ap_block_pp0_stage40)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_const_boolean_0 = ap_block_pp0_stage36)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_const_boolean_0 = ap_block_pp0_stage33)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_const_boolean_0 = ap_block_pp0_stage32)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13)))) then 
            grp_fu_613_p0 <= grp_fu_613_p2;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_613_p0 <= tmp_i_1_fu_966_p3;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_613_p0 <= tmp_r_1_fu_945_p3;
        else 
            grp_fu_613_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_613_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, grp_fu_618_p2, reg_654, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage32, reg_664, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage33, ap_CS_fsm_pp0_stage12, reg_674, ap_CS_fsm_pp0_stage24, reg_684, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage40, ap_CS_fsm_pp0_stage44, ap_CS_fsm_pp0_stage48, ap_CS_fsm_pp0_stage52, ap_CS_fsm_pp0_stage56, ap_CS_fsm_pp0_stage60, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage41, ap_CS_fsm_pp0_stage45, ap_CS_fsm_pp0_stage49, ap_CS_fsm_pp0_stage53, ap_CS_fsm_pp0_stage57, ap_CS_fsm_pp0_stage61, reg_704, reg_709, reg_714, reg_719, mul7_7_i_i_reg_1702, mul14_7_i_i_reg_1707, mul7_9_i_i_reg_1717, mul14_9_i_i_reg_1722, mul7_11_i_i_reg_1727, mul14_11_i_i_reg_1732, mul7_13_i_i_reg_1737, mul14_13_i_i_reg_1742, mul7_15_i_i_reg_1747, mul14_15_i_i_reg_1752, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage16, ap_block_pp0_stage17, ap_block_pp0_stage20, ap_block_pp0_stage21, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage28, ap_block_pp0_stage29, ap_block_pp0_stage32, ap_block_pp0_stage33, ap_block_pp0_stage36, ap_block_pp0_stage37, ap_block_pp0_stage40, ap_block_pp0_stage41, ap_block_pp0_stage44, ap_block_pp0_stage45, ap_block_pp0_stage48, ap_block_pp0_stage49, ap_block_pp0_stage52, ap_block_pp0_stage53, ap_block_pp0_stage56, ap_block_pp0_stage57, ap_block_pp0_stage60, ap_block_pp0_stage61)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_613_p1 <= mul14_15_i_i_reg_1752;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_613_p1 <= mul7_15_i_i_reg_1747;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage57) and (ap_const_boolean_0 = ap_block_pp0_stage57))) then 
            grp_fu_613_p1 <= mul14_13_i_i_reg_1742;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage56) and (ap_const_boolean_0 = ap_block_pp0_stage56))) then 
            grp_fu_613_p1 <= mul7_13_i_i_reg_1737;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_const_boolean_0 = ap_block_pp0_stage49))) then 
            grp_fu_613_p1 <= mul14_11_i_i_reg_1732;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_const_boolean_0 = ap_block_pp0_stage48))) then 
            grp_fu_613_p1 <= mul7_11_i_i_reg_1727;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_const_boolean_0 = ap_block_pp0_stage41))) then 
            grp_fu_613_p1 <= mul14_9_i_i_reg_1722;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_const_boolean_0 = ap_block_pp0_stage40))) then 
            grp_fu_613_p1 <= mul7_9_i_i_reg_1717;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_const_boolean_0 = ap_block_pp0_stage33))) then 
            grp_fu_613_p1 <= mul14_7_i_i_reg_1707;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_const_boolean_0 = ap_block_pp0_stage32))) then 
            grp_fu_613_p1 <= mul7_7_i_i_reg_1702;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage53) and (ap_const_boolean_0 = ap_block_pp0_stage53)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25)))) then 
            grp_fu_613_p1 <= reg_719;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_const_boolean_0 = ap_block_pp0_stage52)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24)))) then 
            grp_fu_613_p1 <= reg_714;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_const_boolean_0 = ap_block_pp0_stage37)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)))) then 
            grp_fu_613_p1 <= reg_709;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_const_boolean_0 = ap_block_pp0_stage36)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16)))) then 
            grp_fu_613_p1 <= reg_704;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage61) and (ap_const_boolean_0 = ap_block_pp0_stage61)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13)))) then 
            grp_fu_613_p1 <= reg_664;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage60) and (ap_const_boolean_0 = ap_block_pp0_stage60)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12)))) then 
            grp_fu_613_p1 <= reg_654;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_const_boolean_0 = ap_block_pp0_stage45)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)))) then 
            grp_fu_613_p1 <= reg_684;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_const_boolean_0 = ap_block_pp0_stage44)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)))) then 
            grp_fu_613_p1 <= reg_674;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_613_p1 <= grp_fu_618_p2;
        else 
            grp_fu_613_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_618_ce_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage32, ap_block_pp0_stage32_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31_11001, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage34_11001, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_const_boolean_0 = ap_block_pp0_stage33_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_const_boolean_0 = ap_block_pp0_stage32_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_const_boolean_0 = ap_block_pp0_stage35_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_const_boolean_0 = ap_block_pp0_stage34_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)))) then 
            grp_fu_618_ce <= ap_const_logic_1;
        else 
            grp_fu_618_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_618_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage32, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage29, bitcast_ln25_fu_879_p1, bitcast_ln25_reg_1307, bitcast_ln25_10_reg_1372, bitcast_ln25_11_reg_1377, bitcast_ln25_12_reg_1382, bitcast_ln25_13_reg_1387, bitcast_ln25_14_reg_1392, bitcast_ln25_15_reg_1397, bitcast_ln25_1_fu_928_p1, bitcast_ln25_1_reg_1417, bitcast_ln25_2_fu_974_p1, bitcast_ln25_2_reg_1462, bitcast_ln25_3_fu_998_p1, bitcast_ln25_3_reg_1497, bitcast_ln25_4_fu_1022_p1, bitcast_ln25_4_reg_1537, bitcast_ln25_5_fu_1046_p1, bitcast_ln25_5_reg_1582, bitcast_ln25_6_fu_1070_p1, bitcast_ln25_6_reg_1627, bitcast_ln25_7_fu_1099_p1, bitcast_ln25_7_reg_1672, bitcast_ln25_8_fu_1108_p1, bitcast_ln25_8_reg_1697, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, bitcast_ln25_9_fu_1112_p1, bitcast_ln25_9_reg_1712, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage15, ap_block_pp0_stage16, ap_block_pp0_stage17, ap_block_pp0_stage20, ap_block_pp0_stage21, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage28, ap_block_pp0_stage29, ap_block_pp0_stage32, ap_block_pp0_stage18, ap_block_pp0_stage19, ap_block_pp0_stage22, ap_block_pp0_stage23, ap_block_pp0_stage26, ap_block_pp0_stage27, ap_block_pp0_stage30, ap_block_pp0_stage31)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_const_boolean_0 = ap_block_pp0_stage32)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31)))) then 
            grp_fu_618_p0 <= bitcast_ln25_15_reg_1397;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30)))) then 
            grp_fu_618_p0 <= bitcast_ln25_14_reg_1392;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27)))) then 
            grp_fu_618_p0 <= bitcast_ln25_13_reg_1387;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26)))) then 
            grp_fu_618_p0 <= bitcast_ln25_12_reg_1382;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)))) then 
            grp_fu_618_p0 <= bitcast_ln25_11_reg_1377;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22)))) then 
            grp_fu_618_p0 <= bitcast_ln25_10_reg_1372;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
            grp_fu_618_p0 <= bitcast_ln25_9_reg_1712;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
            grp_fu_618_p0 <= bitcast_ln25_9_fu_1112_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
            grp_fu_618_p0 <= bitcast_ln25_8_reg_1697;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
            grp_fu_618_p0 <= bitcast_ln25_8_fu_1108_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
            grp_fu_618_p0 <= bitcast_ln25_7_reg_1672;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            grp_fu_618_p0 <= bitcast_ln25_7_fu_1099_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
            grp_fu_618_p0 <= bitcast_ln25_6_reg_1627;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
            grp_fu_618_p0 <= bitcast_ln25_6_fu_1070_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
            grp_fu_618_p0 <= bitcast_ln25_5_reg_1582;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            grp_fu_618_p0 <= bitcast_ln25_5_fu_1046_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            grp_fu_618_p0 <= bitcast_ln25_4_reg_1537;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_618_p0 <= bitcast_ln25_4_fu_1022_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_618_p0 <= bitcast_ln25_3_reg_1497;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_618_p0 <= bitcast_ln25_3_fu_998_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_618_p0 <= bitcast_ln25_2_reg_1462;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_618_p0 <= bitcast_ln25_2_fu_974_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_618_p0 <= bitcast_ln25_1_reg_1417;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_618_p0 <= bitcast_ln25_1_fu_928_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_618_p0 <= bitcast_ln25_reg_1307;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_618_p0 <= bitcast_ln25_fu_879_p1;
        else 
            grp_fu_618_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_618_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, cos_coefficients_table_q0, reg_624, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, reg_629, ap_CS_fsm_pp0_stage13, reg_634, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage14, reg_639, ap_CS_fsm_pp0_stage7, reg_644, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, reg_649, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage32, reg_659, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage17, reg_669, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage24, reg_679, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage25, reg_689, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage29, sin_coefficients_table_load_7_reg_1517, cos_coefficients_table_load_8_reg_1542, sin_coefficients_table_load_9_reg_1562, cos_coefficients_table_load_10_reg_1587, sin_coefficients_table_load_11_reg_1607, cos_coefficients_table_load_12_reg_1632, sin_coefficients_table_load_13_reg_1652, cos_coefficients_table_load_14_reg_1677, sin_coefficients_table_load_15_reg_1692, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage15, ap_block_pp0_stage16, ap_block_pp0_stage17, ap_block_pp0_stage20, ap_block_pp0_stage21, ap_block_pp0_stage24, ap_block_pp0_stage25, ap_block_pp0_stage28, ap_block_pp0_stage29, ap_block_pp0_stage32, ap_block_pp0_stage18, ap_block_pp0_stage19, ap_block_pp0_stage22, ap_block_pp0_stage23, ap_block_pp0_stage26, ap_block_pp0_stage27, ap_block_pp0_stage30, ap_block_pp0_stage31)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_const_boolean_0 = ap_block_pp0_stage32))) then 
            grp_fu_618_p1 <= sin_coefficients_table_load_15_reg_1692;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29))) then 
            grp_fu_618_p1 <= cos_coefficients_table_load_14_reg_1677;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28))) then 
            grp_fu_618_p1 <= sin_coefficients_table_load_13_reg_1652;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25))) then 
            grp_fu_618_p1 <= cos_coefficients_table_load_12_reg_1632;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24))) then 
            grp_fu_618_p1 <= sin_coefficients_table_load_11_reg_1607;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21))) then 
            grp_fu_618_p1 <= cos_coefficients_table_load_10_reg_1587;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
            grp_fu_618_p1 <= sin_coefficients_table_load_9_reg_1562;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
            grp_fu_618_p1 <= cos_coefficients_table_load_8_reg_1542;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
            grp_fu_618_p1 <= sin_coefficients_table_load_7_reg_1517;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31)))) then 
            grp_fu_618_p1 <= reg_689;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30)))) then 
            grp_fu_618_p1 <= reg_679;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)))) then 
            grp_fu_618_p1 <= reg_669;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22)))) then 
            grp_fu_618_p1 <= reg_659;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19)))) then 
            grp_fu_618_p1 <= reg_624;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18)))) then 
            grp_fu_618_p1 <= reg_649;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15)))) then 
            grp_fu_618_p1 <= reg_644;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)))) then 
            grp_fu_618_p1 <= reg_639;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27)))) then 
            grp_fu_618_p1 <= reg_634;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26)))) then 
            grp_fu_618_p1 <= reg_629;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_618_p1 <= cos_coefficients_table_q0;
        else 
            grp_fu_618_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln13_fu_742_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv13_1000) else "0";
    icmp_ln20_fu_798_p2 <= "1" when (select_ln11_fu_768_p3 = ap_const_lv9_0) else "0";
    icmp_ln27_fu_852_p2 <= "1" when (or_ln16_fu_846_p2 = ap_const_lv8_FF) else "0";
    lshr_ln_fu_804_p4 <= select_ln11_fu_768_p3(7 downto 4);
    mul_ln25_fu_834_p1 <= select_ln11_1_fu_782_p3(8 - 1 downto 0);
    or_ln16_fu_846_p2 <= (trunc_ln25_fu_794_p1 or ap_const_lv8_F);
    real_sample_0_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_0_ce0 <= ap_const_logic_1;
        else 
            real_sample_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_10_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_10_ce0 <= ap_const_logic_1;
        else 
            real_sample_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_11_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_11_ce0 <= ap_const_logic_1;
        else 
            real_sample_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_12_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_12_ce0 <= ap_const_logic_1;
        else 
            real_sample_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_13_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_13_ce0 <= ap_const_logic_1;
        else 
            real_sample_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_14_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_14_ce0 <= ap_const_logic_1;
        else 
            real_sample_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_15_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_15_ce0 <= ap_const_logic_1;
        else 
            real_sample_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_1_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_1_ce0 <= ap_const_logic_1;
        else 
            real_sample_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_2_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_2_ce0 <= ap_const_logic_1;
        else 
            real_sample_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_3_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_3_ce0 <= ap_const_logic_1;
        else 
            real_sample_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_4_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_4_ce0 <= ap_const_logic_1;
        else 
            real_sample_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_5_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_5_ce0 <= ap_const_logic_1;
        else 
            real_sample_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_6_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_6_ce0 <= ap_const_logic_1;
        else 
            real_sample_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_7_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_7_ce0 <= ap_const_logic_1;
        else 
            real_sample_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_8_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_8_ce0 <= ap_const_logic_1;
        else 
            real_sample_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_sample_9_address0 <= zext_ln25_16_fu_814_p1(4 - 1 downto 0);

    real_sample_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_sample_9_ce0 <= ap_const_logic_1;
        else 
            real_sample_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln11_1_fu_782_p3 <= 
        add_ln13_1_fu_776_p2 when (tmp_fu_760_p3(0) = '1') else 
        ap_sig_allocacmp_k_load;
    select_ln11_fu_768_p3 <= 
        ap_const_lv9_0 when (tmp_fu_760_p3(0) = '1') else 
        ap_sig_allocacmp_n_load;

    sin_coefficients_table_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage0, zext_ln25_fu_840_p1, zext_ln25_1_fu_888_p1, ap_block_pp0_stage1, zext_ln25_2_fu_922_p1, ap_block_pp0_stage2, zext_ln25_3_fu_936_p1, ap_block_pp0_stage3, zext_ln25_4_fu_957_p1, ap_block_pp0_stage4, zext_ln25_5_fu_982_p1, ap_block_pp0_stage5, zext_ln25_6_fu_992_p1, ap_block_pp0_stage6, zext_ln25_7_fu_1006_p1, ap_block_pp0_stage7, zext_ln25_8_fu_1016_p1, ap_block_pp0_stage8, zext_ln25_9_fu_1030_p1, ap_block_pp0_stage9, zext_ln25_10_fu_1040_p1, ap_block_pp0_stage10, zext_ln25_11_fu_1054_p1, ap_block_pp0_stage11, zext_ln25_12_fu_1064_p1, ap_block_pp0_stage12, zext_ln25_13_fu_1078_p1, ap_block_pp0_stage13, zext_ln25_14_fu_1088_p1, ap_block_pp0_stage14, zext_ln25_15_fu_1103_p1, ap_block_pp0_stage15)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
                sin_coefficients_table_address0 <= zext_ln25_15_fu_1103_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
                sin_coefficients_table_address0 <= zext_ln25_14_fu_1088_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
                sin_coefficients_table_address0 <= zext_ln25_13_fu_1078_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
                sin_coefficients_table_address0 <= zext_ln25_12_fu_1064_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
                sin_coefficients_table_address0 <= zext_ln25_11_fu_1054_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
                sin_coefficients_table_address0 <= zext_ln25_10_fu_1040_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
                sin_coefficients_table_address0 <= zext_ln25_9_fu_1030_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
                sin_coefficients_table_address0 <= zext_ln25_8_fu_1016_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
                sin_coefficients_table_address0 <= zext_ln25_7_fu_1006_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
                sin_coefficients_table_address0 <= zext_ln25_6_fu_992_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
                sin_coefficients_table_address0 <= zext_ln25_5_fu_982_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
                sin_coefficients_table_address0 <= zext_ln25_4_fu_957_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                sin_coefficients_table_address0 <= zext_ln25_3_fu_936_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                sin_coefficients_table_address0 <= zext_ln25_2_fu_922_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                sin_coefficients_table_address0 <= zext_ln25_1_fu_888_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                sin_coefficients_table_address0 <= zext_ln25_fu_840_p1(8 - 1 downto 0);
            else 
                sin_coefficients_table_address0 <= "XXXXXXXX";
            end if;
        else 
            sin_coefficients_table_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sin_coefficients_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            sin_coefficients_table_ce0 <= ap_const_logic_1;
        else 
            sin_coefficients_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sum_i_address0 <= sum_i_addr_reg_1757;

    sum_i_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then 
            sum_i_ce0 <= ap_const_logic_1;
        else 
            sum_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sum_i_d0 <= grp_fu_613_p2;

    sum_i_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, icmp_ln27_reg_1303_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln27_reg_1303_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then 
            sum_i_we0 <= ap_const_logic_1;
        else 
            sum_i_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sum_r_address0 <= zext_ln11_fu_1116_p1(8 - 1 downto 0);

    sum_r_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
            sum_r_ce0 <= ap_const_logic_1;
        else 
            sum_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sum_r_d0 <= grp_fu_613_p2;

    sum_r_we0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, icmp_ln27_reg_1303_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln27_reg_1303_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
            sum_r_we0 <= ap_const_logic_1;
        else 
            sum_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_760_p3 <= ap_sig_allocacmp_n_load(8 downto 8);
    tmp_i_1_fu_966_p3 <= 
        ap_const_lv32_0 when (icmp_ln20_reg_1202(0) = '1') else 
        ap_sig_allocacmp_tmp_i_load;
    tmp_r_1_fu_945_p3 <= 
        ap_const_lv32_0 when (icmp_ln20_reg_1202(0) = '1') else 
        ap_sig_allocacmp_tmp_r_load;
    trunc_ln11_fu_790_p1 <= select_ln11_1_fu_782_p3(8 - 1 downto 0);
    trunc_ln25_fu_794_p1 <= select_ln11_fu_768_p3(8 - 1 downto 0);
    zext_ln11_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln11_1_reg_1178_pp0_iter1_reg),64));
    zext_ln25_10_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_20_fu_1036_p2),64));
    zext_ln25_11_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_21_fu_1050_p2),64));
    zext_ln25_12_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_22_fu_1060_p2),64));
    zext_ln25_13_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_23_fu_1074_p2),64));
    zext_ln25_14_fu_1088_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_24_fu_1084_p2),64));
    zext_ln25_15_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_25_reg_1667),64));
    zext_ln25_16_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_804_p4),64));
    zext_ln25_1_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln25_fu_884_p2),64));
    zext_ln25_2_fu_922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_12_fu_918_p2),64));
    zext_ln25_3_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_13_fu_932_p2),64));
    zext_ln25_4_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_14_fu_953_p2),64));
    zext_ln25_5_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_15_fu_978_p2),64));
    zext_ln25_6_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_16_fu_988_p2),64));
    zext_ln25_7_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_17_fu_1002_p2),64));
    zext_ln25_8_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_18_fu_1012_p2),64));
    zext_ln25_9_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_19_fu_1026_p2),64));
    zext_ln25_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln25_fu_834_p2),64));
end behav;
