// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_dut_Pipeline_Queue_loop_Edge_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        q_array_address0,
        q_array_ce0,
        q_array_we0,
        q_array_d0,
        q_array_address1,
        q_array_ce1,
        q_array_q1,
        v_i,
        v_o,
        v_o_ap_vld,
        s_array_address0,
        s_array_ce0,
        s_array_we0,
        s_array_d0,
        offset_buf_address0,
        offset_buf_ce0,
        offset_buf_q0,
        offset_buf_address1,
        offset_buf_ce1,
        offset_buf_q1,
        dist_array_address0,
        dist_array_ce0,
        dist_array_we0,
        dist_array_d0,
        dist_array_q0,
        dist_array_address1,
        dist_array_ce1,
        dist_array_q1,
        sigma_array_address0,
        sigma_array_ce0,
        sigma_array_we0,
        sigma_array_d0,
        sigma_array_q0,
        sigma_array_address1,
        sigma_array_ce1,
        sigma_array_q1,
        q_index_i,
        q_index_o,
        q_index_o_ap_vld,
        column_buf_address0,
        column_buf_ce0,
        column_buf_q0,
        w,
        w_ap_vld,
        travel_address0,
        travel_ce0,
        travel_we0,
        travel_d0,
        travel_q0,
        sigma_tmp,
        sigma_tmp_ap_vld,
        p_index_array_address0,
        p_index_array_ce0,
        p_index_array_we0,
        p_index_array_d0,
        p_index_array_address1,
        p_index_array_ce1,
        p_index_array_q1,
        p_array_address0,
        p_array_ce0,
        p_array_we0,
        p_array_d0,
        grp_fu_667_p_din0,
        grp_fu_667_p_din1,
        grp_fu_667_p_opcode,
        grp_fu_667_p_dout0,
        grp_fu_667_p_ce,
        grp_fu_671_p_din0,
        grp_fu_671_p_dout0,
        grp_fu_671_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] q_array_address0;
output   q_array_ce0;
output   q_array_we0;
output  [15:0] q_array_d0;
output  [11:0] q_array_address1;
output   q_array_ce1;
input  [15:0] q_array_q1;
input  [15:0] v_i;
output  [15:0] v_o;
output   v_o_ap_vld;
output  [11:0] s_array_address0;
output   s_array_ce0;
output   s_array_we0;
output  [15:0] s_array_d0;
output  [11:0] offset_buf_address0;
output   offset_buf_ce0;
input  [15:0] offset_buf_q0;
output  [11:0] offset_buf_address1;
output   offset_buf_ce1;
input  [15:0] offset_buf_q1;
output  [11:0] dist_array_address0;
output   dist_array_ce0;
output   dist_array_we0;
output  [15:0] dist_array_d0;
input  [15:0] dist_array_q0;
output  [11:0] dist_array_address1;
output   dist_array_ce1;
input  [15:0] dist_array_q1;
output  [11:0] sigma_array_address0;
output   sigma_array_ce0;
output   sigma_array_we0;
output  [31:0] sigma_array_d0;
input  [31:0] sigma_array_q0;
output  [11:0] sigma_array_address1;
output   sigma_array_ce1;
input  [31:0] sigma_array_q1;
input  [15:0] q_index_i;
output  [15:0] q_index_o;
output   q_index_o_ap_vld;
output  [15:0] column_buf_address0;
output   column_buf_ce0;
input  [15:0] column_buf_q0;
output  [11:0] w;
output   w_ap_vld;
output  [11:0] travel_address0;
output   travel_ce0;
output   travel_we0;
output  [0:0] travel_d0;
input  [0:0] travel_q0;
output  [31:0] sigma_tmp;
output   sigma_tmp_ap_vld;
output  [11:0] p_index_array_address0;
output   p_index_array_ce0;
output   p_index_array_we0;
output  [7:0] p_index_array_d0;
output  [11:0] p_index_array_address1;
output   p_index_array_ce1;
input  [7:0] p_index_array_q1;
output  [16:0] p_array_address0;
output   p_array_ce0;
output   p_array_we0;
output  [15:0] p_array_d0;
output  [31:0] grp_fu_667_p_din0;
output  [31:0] grp_fu_667_p_din1;
output  [1:0] grp_fu_667_p_opcode;
input  [31:0] grp_fu_667_p_dout0;
output   grp_fu_667_p_ce;
output  [31:0] grp_fu_671_p_din0;
input  [31:0] grp_fu_671_p_dout0;
output   grp_fu_671_p_ce;

reg ap_idle;
reg q_array_ce0;
reg q_array_we0;
reg q_array_ce1;
reg[15:0] v_o;
reg v_o_ap_vld;
reg s_array_ce0;
reg s_array_we0;
reg offset_buf_ce0;
reg offset_buf_ce1;
reg[11:0] dist_array_address0;
reg dist_array_ce0;
reg dist_array_we0;
reg dist_array_ce1;
reg[11:0] sigma_array_address0;
reg sigma_array_ce0;
reg sigma_array_we0;
reg sigma_array_ce1;
reg[15:0] q_index_o;
reg q_index_o_ap_vld;
reg column_buf_ce0;
reg w_ap_vld;
reg[11:0] travel_address0;
reg travel_ce0;
reg travel_we0;
reg sigma_tmp_ap_vld;
reg p_index_array_ce0;
reg p_index_array_we0;
reg p_index_array_ce1;
reg p_array_ce0;
reg p_array_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_state26_pp0_stage1_iter12;
wire    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln209_fu_327_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [15:0] num_edge;
reg   [15:0] base_edge;
reg   [15:0] dist_tmp;
reg   [31:0] sigma_tmp_v;
reg   [15:0] q_index_tmp;
reg   [15:0] dist_tmp_w;
reg   [0:0] icmp_ln209_reg_788;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln209_reg_788_pp0_iter1_reg;
reg   [0:0] icmp_ln209_reg_788_pp0_iter2_reg;
reg   [0:0] icmp_ln209_reg_788_pp0_iter3_reg;
reg   [0:0] icmp_ln209_reg_788_pp0_iter4_reg;
reg   [0:0] icmp_ln209_reg_788_pp0_iter5_reg;
reg   [0:0] icmp_ln209_reg_788_pp0_iter6_reg;
reg   [0:0] icmp_ln209_reg_788_pp0_iter7_reg;
reg   [0:0] icmp_ln209_reg_788_pp0_iter8_reg;
reg   [0:0] icmp_ln209_reg_788_pp0_iter9_reg;
reg   [0:0] icmp_ln209_reg_788_pp0_iter10_reg;
reg   [0:0] icmp_ln209_reg_788_pp0_iter11_reg;
wire   [5:0] select_ln209_fu_357_p3;
reg   [5:0] select_ln209_reg_792;
reg   [5:0] select_ln209_reg_792_pp0_iter1_reg;
wire   [63:0] zext_ln209_fu_373_p1;
reg   [63:0] zext_ln209_reg_798;
wire   [0:0] icmp_ln227_fu_378_p2;
reg   [0:0] icmp_ln227_reg_803;
reg   [0:0] icmp_ln227_reg_803_pp0_iter1_reg;
reg   [0:0] icmp_ln227_reg_803_pp0_iter2_reg;
reg   [0:0] icmp_ln227_reg_803_pp0_iter3_reg;
reg   [15:0] q_array_load_reg_812;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_state27_pp0_stage0_iter13;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] q_array_load_reg_812_pp0_iter2_reg;
reg   [15:0] q_array_load_reg_812_pp0_iter3_reg;
wire   [11:0] add_ln233_fu_398_p2;
reg   [11:0] add_ln233_reg_819;
wire   [63:0] zext_ln231_fu_414_p1;
reg   [63:0] zext_ln231_reg_824;
reg   [63:0] zext_ln231_reg_824_pp0_iter2_reg;
wire   [0:0] icmp_ln237_fu_447_p2;
reg   [0:0] icmp_ln237_reg_845;
reg   [0:0] icmp_ln237_reg_845_pp0_iter3_reg;
reg   [0:0] icmp_ln237_reg_845_pp0_iter4_reg;
reg   [0:0] icmp_ln237_reg_845_pp0_iter5_reg;
reg   [0:0] icmp_ln237_reg_845_pp0_iter6_reg;
reg   [0:0] icmp_ln237_reg_845_pp0_iter7_reg;
reg   [0:0] icmp_ln237_reg_845_pp0_iter8_reg;
reg   [0:0] icmp_ln237_reg_845_pp0_iter9_reg;
reg   [0:0] icmp_ln237_reg_845_pp0_iter10_reg;
reg   [0:0] icmp_ln237_reg_845_pp0_iter11_reg;
reg   [0:0] icmp_ln237_reg_845_pp0_iter12_reg;
reg   [15:0] column_buf_load_reg_854;
reg   [15:0] column_buf_load_reg_854_pp0_iter4_reg;
wire   [16:0] add_ln255_fu_514_p2;
reg   [16:0] add_ln255_reg_860;
reg   [16:0] add_ln255_reg_860_pp0_iter4_reg;
wire   [63:0] zext_ln241_fu_520_p1;
reg   [63:0] zext_ln241_reg_870;
reg   [11:0] dist_array_addr_1_reg_876;
reg   [11:0] dist_array_addr_1_reg_876_pp0_iter4_reg;
reg   [11:0] travel_addr_reg_881;
reg   [15:0] q_index_load_reg_886;
reg   [0:0] travel_load_reg_891;
reg   [15:0] dist_tmp_load_reg_895;
wire   [0:0] icmp_ln249_fu_582_p2;
reg   [0:0] icmp_ln249_reg_901;
reg   [0:0] icmp_ln249_reg_901_pp0_iter5_reg;
reg   [0:0] icmp_ln249_reg_901_pp0_iter6_reg;
reg   [0:0] icmp_ln249_reg_901_pp0_iter7_reg;
reg   [0:0] icmp_ln249_reg_901_pp0_iter8_reg;
reg   [0:0] icmp_ln249_reg_901_pp0_iter9_reg;
reg   [0:0] icmp_ln249_reg_901_pp0_iter10_reg;
reg   [0:0] icmp_ln249_reg_901_pp0_iter11_reg;
reg   [0:0] icmp_ln249_reg_901_pp0_iter12_reg;
reg   [11:0] sigma_array_addr_1_reg_905;
reg   [11:0] sigma_array_addr_1_reg_905_pp0_iter5_reg;
reg   [11:0] sigma_array_addr_1_reg_905_pp0_iter6_reg;
reg   [11:0] sigma_array_addr_1_reg_905_pp0_iter7_reg;
reg   [11:0] sigma_array_addr_1_reg_905_pp0_iter8_reg;
reg   [11:0] sigma_array_addr_1_reg_905_pp0_iter9_reg;
reg   [11:0] sigma_array_addr_1_reg_905_pp0_iter10_reg;
reg   [11:0] sigma_array_addr_1_reg_905_pp0_iter11_reg;
reg   [11:0] sigma_array_addr_1_reg_905_pp0_iter12_reg;
reg   [11:0] p_index_array_addr_reg_915;
reg   [31:0] sigma_array_load_1_reg_921;
reg   [15:0] v_load_reg_926;
wire   [16:0] add_ln255_1_fu_610_p2;
reg   [16:0] add_ln255_1_reg_931;
wire   [7:0] add_ln256_fu_615_p2;
reg   [7:0] add_ln256_reg_936;
reg   [31:0] conv2_reg_941;
reg   [31:0] conv2_reg_941_pp0_iter7_reg;
reg   [31:0] conv1_reg_946;
reg   [31:0] dc_reg_951;
reg   [0:0] p_Result_s_reg_956;
wire   [31:0] val_fu_748_p3;
reg   [31:0] val_reg_961;
wire   [31:0] result_V_fu_761_p3;
reg   [31:0] result_V_reg_967;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln233_fu_418_p1;
wire   [63:0] zext_ln239_fu_463_p1;
wire   [63:0] zext_ln243_fu_574_p1;
wire   [63:0] zext_ln255_1_fu_621_p1;
wire   [15:0] sub_ln233_fu_428_p2;
wire    ap_block_pp0_stage0;
wire   [15:0] add_ln232_fu_468_p2;
wire   [15:0] add_ln244_fu_556_p2;
reg   [5:0] k_fu_120;
wire   [5:0] k_1_fu_404_p2;
wire    ap_loop_init;
reg   [11:0] j_fu_124;
wire   [11:0] select_ln209_1_fu_365_p3;
reg   [17:0] indvar_flatten_fu_128;
wire   [17:0] add_ln209_1_fu_333_p2;
reg   [31:0] grp_fu_306_p0;
wire   [0:0] icmp_ln217_fu_351_p2;
wire   [11:0] add_ln209_fu_345_p2;
wire   [11:0] trunc_ln233_fu_394_p1;
wire   [15:0] zext_ln218_fu_440_p1;
wire   [15:0] add_ln238_fu_457_p2;
wire   [12:0] trunc_ln239_1_fu_484_p1;
wire   [14:0] trunc_ln239_fu_480_p1;
wire   [16:0] tmp_2_fu_498_p3;
wire   [16:0] tmp_3_fu_506_p3;
wire   [16:0] zext_ln255_fu_606_p1;
wire   [31:0] data_V_fu_631_p1;
wire   [22:0] p_Result_1_fu_652_p1;
wire   [24:0] mantissa_fu_656_p4;
wire   [7:0] xs_exp_V_fu_642_p4;
wire   [8:0] zext_ln346_fu_670_p1;
wire   [8:0] add_ln346_fu_674_p2;
wire   [7:0] sub_ln1512_fu_688_p2;
wire   [0:0] isNeg_fu_680_p3;
wire  signed [8:0] sext_ln1512_fu_694_p1;
wire   [8:0] ush_fu_698_p3;
wire  signed [31:0] sext_ln1488_fu_706_p1;
wire   [78:0] zext_ln15_fu_666_p1;
wire   [78:0] zext_ln1488_fu_710_p1;
wire   [78:0] r_V_fu_714_p2;
wire   [0:0] tmp_fu_726_p3;
wire   [78:0] r_V_1_fu_720_p2;
wire   [31:0] zext_ln818_fu_734_p1;
wire   [31:0] tmp_6_fu_738_p4;
wire   [31:0] result_V_2_fu_756_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter12_stage0;
reg    ap_idle_pp0_0to11;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to13;
reg    ap_block_pp0;
reg    ap_predicate_op50_load_state2;
reg    ap_enable_operation_50;
reg    ap_enable_state2_pp0_iter0_stage1;
reg    ap_predicate_op53_load_state3;
reg    ap_enable_operation_53;
reg    ap_enable_state3_pp0_iter1_stage0;
reg    ap_predicate_op122_store_state10;
reg    ap_enable_operation_122;
reg    ap_enable_state10_pp0_iter4_stage1;
reg    ap_enable_operation_78;
reg    ap_enable_state6_pp0_iter2_stage1;
reg    ap_enable_operation_87;
reg    ap_enable_state7_pp0_iter3_stage0;
reg    ap_predicate_op135_store_state11;
reg    ap_enable_operation_135;
reg    ap_enable_state11_pp0_iter5_stage0;
reg    ap_enable_operation_99;
reg    ap_enable_state8_pp0_iter3_stage1;
reg    ap_enable_operation_106;
reg    ap_enable_state9_pp0_iter4_stage0;
reg    ap_predicate_op186_store_state27;
reg    ap_enable_operation_186;
reg    ap_enable_state27_pp0_iter13_stage0;
reg    ap_enable_operation_102;
reg    ap_enable_operation_111;
reg    ap_enable_operation_104;
reg    ap_enable_operation_113;
reg    ap_predicate_op119_store_state9;
reg    ap_enable_operation_119;
reg    ap_predicate_op127_load_state10;
reg    ap_enable_operation_127;
reg    ap_predicate_op137_load_state11;
reg    ap_enable_operation_137;
reg    ap_predicate_op131_load_state10;
reg    ap_enable_operation_131;
reg    ap_predicate_op139_load_state11;
reg    ap_enable_operation_139;
reg    ap_predicate_op148_store_state12;
reg    ap_enable_operation_148;
reg    ap_enable_state12_pp0_iter5_stage1;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage1_00001;
reg    ap_condition_323;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 num_edge = 16'd0;
#0 base_edge = 16'd0;
#0 dist_tmp = 16'd0;
#0 sigma_tmp_v = 32'd0;
#0 q_index_tmp = 16'd0;
#0 dist_tmp_w = 16'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dut_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_323)) begin
        if ((travel_q0 == 1'd0)) begin
            dist_tmp_w <= dist_tmp;
        end else if ((1'b1 == 1'b1)) begin
            dist_tmp_w <= dist_array_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_128 <= 18'd0;
    end else if (((icmp_ln209_fu_327_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten_fu_128 <= add_ln209_1_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_124 <= 12'd0;
    end else if (((icmp_ln209_fu_327_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_124 <= select_ln209_1_fu_365_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_120 <= 6'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln209_reg_788 == 1'd0))) begin
            k_fu_120 <= k_1_fu_404_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_323)) begin
        if ((travel_q0 == 1'd0)) begin
            q_index_tmp <= add_ln244_fu_556_p2;
        end else if ((1'b1 == 1'b1)) begin
            q_index_tmp <= q_index_i;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln227_reg_803 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln209_reg_788 == 1'd0))) begin
        add_ln233_reg_819 <= add_ln233_fu_398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln249_reg_901 == 1'd1) & (icmp_ln237_reg_845_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln255_1_reg_931 <= add_ln255_1_fu_610_p2;
        add_ln256_reg_936 <= add_ln256_fu_615_p2;
        v_load_reg_926 <= v_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln237_reg_845 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln255_reg_860[16 : 2] <= add_ln255_fu_514_p2[16 : 2];
        column_buf_load_reg_854 <= column_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln255_reg_860_pp0_iter4_reg[16 : 2] <= add_ln255_reg_860[16 : 2];
        column_buf_load_reg_854_pp0_iter4_reg <= column_buf_load_reg_854;
        q_array_load_reg_812_pp0_iter2_reg <= q_array_load_reg_812;
        q_array_load_reg_812_pp0_iter3_reg <= q_array_load_reg_812_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln227_reg_803_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        base_edge <= offset_buf_q1;
        num_edge <= sub_ln233_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln249_reg_901_pp0_iter7_reg == 1'd1) & (icmp_ln237_reg_845_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_reg_946 <= grp_fu_671_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln249_reg_901_pp0_iter5_reg == 1'd1) & (icmp_ln237_reg_845_pp0_iter5_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv2_reg_941 <= grp_fu_671_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv2_reg_941_pp0_iter7_reg <= conv2_reg_941;
        dist_array_addr_1_reg_876_pp0_iter4_reg <= dist_array_addr_1_reg_876;
        icmp_ln209_reg_788 <= icmp_ln209_fu_327_p2;
        icmp_ln209_reg_788_pp0_iter10_reg <= icmp_ln209_reg_788_pp0_iter9_reg;
        icmp_ln209_reg_788_pp0_iter11_reg <= icmp_ln209_reg_788_pp0_iter10_reg;
        icmp_ln209_reg_788_pp0_iter1_reg <= icmp_ln209_reg_788;
        icmp_ln209_reg_788_pp0_iter2_reg <= icmp_ln209_reg_788_pp0_iter1_reg;
        icmp_ln209_reg_788_pp0_iter3_reg <= icmp_ln209_reg_788_pp0_iter2_reg;
        icmp_ln209_reg_788_pp0_iter4_reg <= icmp_ln209_reg_788_pp0_iter3_reg;
        icmp_ln209_reg_788_pp0_iter5_reg <= icmp_ln209_reg_788_pp0_iter4_reg;
        icmp_ln209_reg_788_pp0_iter6_reg <= icmp_ln209_reg_788_pp0_iter5_reg;
        icmp_ln209_reg_788_pp0_iter7_reg <= icmp_ln209_reg_788_pp0_iter6_reg;
        icmp_ln209_reg_788_pp0_iter8_reg <= icmp_ln209_reg_788_pp0_iter7_reg;
        icmp_ln209_reg_788_pp0_iter9_reg <= icmp_ln209_reg_788_pp0_iter8_reg;
        icmp_ln227_reg_803_pp0_iter1_reg <= icmp_ln227_reg_803;
        icmp_ln227_reg_803_pp0_iter2_reg <= icmp_ln227_reg_803_pp0_iter1_reg;
        icmp_ln227_reg_803_pp0_iter3_reg <= icmp_ln227_reg_803_pp0_iter2_reg;
        icmp_ln237_reg_845 <= icmp_ln237_fu_447_p2;
        icmp_ln237_reg_845_pp0_iter10_reg <= icmp_ln237_reg_845_pp0_iter9_reg;
        icmp_ln237_reg_845_pp0_iter11_reg <= icmp_ln237_reg_845_pp0_iter10_reg;
        icmp_ln237_reg_845_pp0_iter12_reg <= icmp_ln237_reg_845_pp0_iter11_reg;
        icmp_ln237_reg_845_pp0_iter3_reg <= icmp_ln237_reg_845;
        icmp_ln237_reg_845_pp0_iter4_reg <= icmp_ln237_reg_845_pp0_iter3_reg;
        icmp_ln237_reg_845_pp0_iter5_reg <= icmp_ln237_reg_845_pp0_iter4_reg;
        icmp_ln237_reg_845_pp0_iter6_reg <= icmp_ln237_reg_845_pp0_iter5_reg;
        icmp_ln237_reg_845_pp0_iter7_reg <= icmp_ln237_reg_845_pp0_iter6_reg;
        icmp_ln237_reg_845_pp0_iter8_reg <= icmp_ln237_reg_845_pp0_iter7_reg;
        icmp_ln237_reg_845_pp0_iter9_reg <= icmp_ln237_reg_845_pp0_iter8_reg;
        icmp_ln249_reg_901_pp0_iter10_reg <= icmp_ln249_reg_901_pp0_iter9_reg;
        icmp_ln249_reg_901_pp0_iter11_reg <= icmp_ln249_reg_901_pp0_iter10_reg;
        icmp_ln249_reg_901_pp0_iter12_reg <= icmp_ln249_reg_901_pp0_iter11_reg;
        icmp_ln249_reg_901_pp0_iter5_reg <= icmp_ln249_reg_901;
        icmp_ln249_reg_901_pp0_iter6_reg <= icmp_ln249_reg_901_pp0_iter5_reg;
        icmp_ln249_reg_901_pp0_iter7_reg <= icmp_ln249_reg_901_pp0_iter6_reg;
        icmp_ln249_reg_901_pp0_iter8_reg <= icmp_ln249_reg_901_pp0_iter7_reg;
        icmp_ln249_reg_901_pp0_iter9_reg <= icmp_ln249_reg_901_pp0_iter8_reg;
        select_ln209_reg_792_pp0_iter1_reg <= select_ln209_reg_792;
        sigma_array_addr_1_reg_905_pp0_iter10_reg <= sigma_array_addr_1_reg_905_pp0_iter9_reg;
        sigma_array_addr_1_reg_905_pp0_iter11_reg <= sigma_array_addr_1_reg_905_pp0_iter10_reg;
        sigma_array_addr_1_reg_905_pp0_iter12_reg <= sigma_array_addr_1_reg_905_pp0_iter11_reg;
        sigma_array_addr_1_reg_905_pp0_iter5_reg <= sigma_array_addr_1_reg_905;
        sigma_array_addr_1_reg_905_pp0_iter6_reg <= sigma_array_addr_1_reg_905_pp0_iter5_reg;
        sigma_array_addr_1_reg_905_pp0_iter7_reg <= sigma_array_addr_1_reg_905_pp0_iter6_reg;
        sigma_array_addr_1_reg_905_pp0_iter8_reg <= sigma_array_addr_1_reg_905_pp0_iter7_reg;
        sigma_array_addr_1_reg_905_pp0_iter9_reg <= sigma_array_addr_1_reg_905_pp0_iter8_reg;
        zext_ln231_reg_824_pp0_iter2_reg[15 : 0] <= zext_ln231_reg_824[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln249_reg_901_pp0_iter10_reg == 1'd1) & (icmp_ln237_reg_845_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dc_reg_951 <= grp_fu_667_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln237_reg_845 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dist_array_addr_1_reg_876 <= zext_ln241_fu_520_p1;
        travel_addr_reg_881 <= zext_ln241_fu_520_p1;
        zext_ln241_reg_870[15 : 0] <= zext_ln241_fu_520_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln227_reg_803_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dist_tmp <= add_ln232_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dist_tmp_load_reg_895 <= dist_tmp;
        q_index_load_reg_886 <= q_index_i;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_fu_327_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln227_reg_803 <= icmp_ln227_fu_378_p2;
        select_ln209_reg_792 <= select_ln209_fu_357_p3;
        zext_ln209_reg_798[11 : 0] <= zext_ln209_fu_373_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln249_reg_901 <= icmp_ln249_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln249_reg_901_pp0_iter11_reg == 1'd1) & (icmp_ln237_reg_845_pp0_iter11_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_s_reg_956 <= data_V_fu_631_p1[32'd31];
        val_reg_961 <= val_fu_748_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln249_fu_582_p2 == 1'd1) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_index_array_addr_reg_915 <= zext_ln241_reg_870;
        sigma_array_addr_1_reg_905 <= zext_ln241_reg_870;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln227_reg_803 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln209_reg_788 == 1'd0))) begin
        q_array_load_reg_812 <= q_array_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln249_reg_901_pp0_iter11_reg == 1'd1) & (icmp_ln237_reg_845_pp0_iter11_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_V_reg_967 <= result_V_fu_761_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln249_reg_901 == 1'd1) & (icmp_ln237_reg_845_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sigma_array_load_1_reg_921 <= sigma_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln227_reg_803_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sigma_tmp_v <= sigma_array_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        travel_load_reg_891 <= travel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln227_reg_803 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        zext_ln231_reg_824[15 : 0] <= zext_ln231_fu_414_p1[15 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln209_fu_327_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1) & (icmp_ln209_reg_788_pp0_iter11_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter12_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter12_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to11 = 1'b1;
    end else begin
        ap_idle_pp0_0to11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to13 = 1'b1;
    end else begin
        ap_idle_pp0_1to13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        column_buf_ce0 = 1'b1;
    end else begin
        column_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dist_array_address0 = dist_array_addr_1_reg_876_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dist_array_address0 = zext_ln241_fu_520_p1;
    end else begin
        dist_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        dist_array_ce0 = 1'b1;
    end else begin
        dist_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dist_array_ce1 = 1'b1;
    end else begin
        dist_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (travel_load_reg_891 == 1'd0) & (icmp_ln237_reg_845_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dist_array_we0 = 1'b1;
    end else begin
        dist_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_306_p0 = sigma_array_load_1_reg_921;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_306_p0 = sigma_tmp_v;
    end else begin
        grp_fu_306_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        offset_buf_ce0 = 1'b1;
    end else begin
        offset_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        offset_buf_ce1 = 1'b1;
    end else begin
        offset_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_array_ce0 = 1'b1;
    end else begin
        p_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln249_reg_901 == 1'd1) & (icmp_ln237_reg_845_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_array_we0 = 1'b1;
    end else begin
        p_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_index_array_ce0 = 1'b1;
    end else begin
        p_index_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_index_array_ce1 = 1'b1;
    end else begin
        p_index_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln249_reg_901 == 1'd1) & (icmp_ln237_reg_845_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_index_array_we0 = 1'b1;
    end else begin
        p_index_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        q_array_ce0 = 1'b1;
    end else begin
        q_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        q_array_ce1 = 1'b1;
    end else begin
        q_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (travel_load_reg_891 == 1'd0) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        q_array_we0 = 1'b1;
    end else begin
        q_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        q_index_o = q_index_tmp;
    end else begin
        q_index_o = q_index_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        q_index_o_ap_vld = 1'b1;
    end else begin
        q_index_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_array_ce0 = 1'b1;
    end else begin
        s_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln227_reg_803 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_array_we0 = 1'b1;
    end else begin
        s_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sigma_array_address0 = sigma_array_addr_1_reg_905_pp0_iter12_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sigma_array_address0 = zext_ln241_reg_870;
    end else begin
        sigma_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        sigma_array_ce0 = 1'b1;
    end else begin
        sigma_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sigma_array_ce1 = 1'b1;
    end else begin
        sigma_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (icmp_ln249_reg_901_pp0_iter12_reg == 1'd1) & (icmp_ln237_reg_845_pp0_iter12_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sigma_array_we0 = 1'b1;
    end else begin
        sigma_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln249_reg_901_pp0_iter10_reg == 1'd1) & (icmp_ln237_reg_845_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sigma_tmp_ap_vld = 1'b1;
    end else begin
        sigma_tmp_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        travel_address0 = travel_addr_reg_881;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        travel_address0 = zext_ln241_fu_520_p1;
    end else begin
        travel_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        travel_ce0 = 1'b1;
    end else begin
        travel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (travel_q0 == 1'd0))) begin
        travel_we0 = 1'b1;
    end else begin
        travel_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln227_reg_803_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_o = q_array_load_reg_812_pp0_iter3_reg;
    end else begin
        v_o = v_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln227_reg_803_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_o_ap_vld = 1'b1;
    end else begin
        v_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln237_reg_845 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_ap_vld = 1'b1;
    end else begin
        w_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to11 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter12_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to13 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln209_1_fu_333_p2 = (indvar_flatten_fu_128 + 18'd1);

assign add_ln209_fu_345_p2 = (j_fu_124 + 12'd1);

assign add_ln232_fu_468_p2 = (dist_array_q1 + 16'd1);

assign add_ln233_fu_398_p2 = (trunc_ln233_fu_394_p1 + 12'd1);

assign add_ln238_fu_457_p2 = (base_edge + zext_ln218_fu_440_p1);

assign add_ln244_fu_556_p2 = (q_index_i + 16'd1);

assign add_ln255_1_fu_610_p2 = (add_ln255_reg_860_pp0_iter4_reg + zext_ln255_fu_606_p1);

assign add_ln255_fu_514_p2 = (tmp_2_fu_498_p3 + tmp_3_fu_506_p3);

assign add_ln256_fu_615_p2 = (p_index_array_q1 + 8'd1);

assign add_ln346_fu_674_p2 = ($signed(zext_ln346_fu_670_p1) + $signed(9'd385));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_323 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_102 = (icmp_ln237_reg_845 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_104 = (icmp_ln237_reg_845 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_106 = (icmp_ln227_reg_803_pp0_iter3_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_111 = (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_113 = (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_119 = (ap_predicate_op119_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_122 = (ap_predicate_op122_store_state10 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_127 = (ap_predicate_op127_load_state10 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_131 = (ap_predicate_op131_load_state10 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_135 = (ap_predicate_op135_store_state11 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_137 = (ap_predicate_op137_load_state11 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_139 = (ap_predicate_op139_load_state11 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_148 = (ap_predicate_op148_store_state12 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_186 = (ap_predicate_op186_store_state27 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_50 = (ap_predicate_op50_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_53 = (ap_predicate_op53_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_78 = (icmp_ln227_reg_803_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_87 = (icmp_ln227_reg_803_pp0_iter2_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_99 = (icmp_ln227_reg_803_pp0_iter2_reg == 1'd1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state10_pp0_iter4_stage1 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state11_pp0_iter5_stage0 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state12_pp0_iter5_stage1 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state27_pp0_iter13_stage0 = ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state2_pp0_iter0_stage1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state3_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage1 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state7_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state8_pp0_iter3_stage1 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state9_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

always @ (*) begin
    ap_predicate_op119_store_state9 = ((icmp_ln237_reg_845_pp0_iter3_reg == 1'd1) & (travel_q0 == 1'd0));
end

always @ (*) begin
    ap_predicate_op122_store_state10 = ((travel_load_reg_891 == 1'd0) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op127_load_state10 = ((icmp_ln249_fu_582_p2 == 1'd1) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op131_load_state10 = ((icmp_ln249_fu_582_p2 == 1'd1) & (icmp_ln237_reg_845_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op135_store_state11 = ((travel_load_reg_891 == 1'd0) & (icmp_ln237_reg_845_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op137_load_state11 = ((icmp_ln249_reg_901 == 1'd1) & (icmp_ln237_reg_845_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op139_load_state11 = ((icmp_ln249_reg_901 == 1'd1) & (icmp_ln237_reg_845_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op148_store_state12 = ((icmp_ln249_reg_901 == 1'd1) & (icmp_ln237_reg_845_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op186_store_state27 = ((icmp_ln249_reg_901_pp0_iter12_reg == 1'd1) & (icmp_ln237_reg_845_pp0_iter12_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op50_load_state2 = ((icmp_ln209_fu_327_p2 == 1'd0) & (icmp_ln227_fu_378_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op53_load_state3 = ((icmp_ln227_reg_803 == 1'd1) & (icmp_ln209_reg_788 == 1'd0));
end

assign column_buf_address0 = zext_ln239_fu_463_p1;

assign data_V_fu_631_p1 = dc_reg_951;

assign dist_array_address1 = zext_ln231_reg_824;

assign dist_array_d0 = dist_tmp_load_reg_895;

assign grp_fu_667_p_ce = 1'b1;

assign grp_fu_667_p_din0 = conv1_reg_946;

assign grp_fu_667_p_din1 = conv2_reg_941_pp0_iter7_reg;

assign grp_fu_667_p_opcode = 2'd0;

assign grp_fu_671_p_ce = 1'b1;

assign grp_fu_671_p_din0 = grp_fu_306_p0;

assign icmp_ln209_fu_327_p2 = ((indvar_flatten_fu_128 == 18'd134292) ? 1'b1 : 1'b0);

assign icmp_ln217_fu_351_p2 = ((k_fu_120 == 6'd38) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_378_p2 = ((select_ln209_fu_357_p3 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln237_fu_447_p2 = ((zext_ln218_fu_440_p1 < num_edge) ? 1'b1 : 1'b0);

assign icmp_ln249_fu_582_p2 = ((dist_tmp_load_reg_895 == dist_tmp_w) ? 1'b1 : 1'b0);

assign isNeg_fu_680_p3 = add_ln346_fu_674_p2[32'd8];

assign k_1_fu_404_p2 = (select_ln209_reg_792 + 6'd1);

assign mantissa_fu_656_p4 = {{{{1'd1}, {p_Result_1_fu_652_p1}}}, {1'd0}};

assign offset_buf_address0 = zext_ln233_fu_418_p1;

assign offset_buf_address1 = zext_ln231_fu_414_p1;

assign p_Result_1_fu_652_p1 = data_V_fu_631_p1[22:0];

assign p_array_address0 = zext_ln255_1_fu_621_p1;

assign p_array_d0 = v_load_reg_926;

assign p_index_array_address0 = p_index_array_addr_reg_915;

assign p_index_array_address1 = zext_ln241_reg_870;

assign p_index_array_d0 = add_ln256_reg_936;

assign q_array_address0 = zext_ln243_fu_574_p1;

assign q_array_address1 = zext_ln209_fu_373_p1;

assign q_array_d0 = column_buf_load_reg_854_pp0_iter4_reg;

assign r_V_1_fu_720_p2 = zext_ln15_fu_666_p1 << zext_ln1488_fu_710_p1;

assign r_V_fu_714_p2 = zext_ln15_fu_666_p1 >> zext_ln1488_fu_710_p1;

assign result_V_2_fu_756_p2 = (32'd0 - val_reg_961);

assign result_V_fu_761_p3 = ((p_Result_s_reg_956[0:0] == 1'b1) ? result_V_2_fu_756_p2 : val_reg_961);

assign s_array_address0 = zext_ln209_reg_798;

assign s_array_d0 = q_array_load_reg_812;

assign select_ln209_1_fu_365_p3 = ((icmp_ln217_fu_351_p2[0:0] == 1'b1) ? add_ln209_fu_345_p2 : j_fu_124);

assign select_ln209_fu_357_p3 = ((icmp_ln217_fu_351_p2[0:0] == 1'b1) ? 6'd0 : k_fu_120);

assign sext_ln1488_fu_706_p1 = $signed(ush_fu_698_p3);

assign sext_ln1512_fu_694_p1 = $signed(sub_ln1512_fu_688_p2);

assign sigma_array_address1 = zext_ln231_reg_824_pp0_iter2_reg;

assign sigma_array_d0 = result_V_reg_967;

assign sigma_tmp = grp_fu_667_p_dout0;

assign sub_ln1512_fu_688_p2 = (8'd127 - xs_exp_V_fu_642_p4);

assign sub_ln233_fu_428_p2 = (offset_buf_q0 - offset_buf_q1);

assign tmp_2_fu_498_p3 = {{trunc_ln239_1_fu_484_p1}, {4'd0}};

assign tmp_3_fu_506_p3 = {{trunc_ln239_fu_480_p1}, {2'd0}};

assign tmp_6_fu_738_p4 = {{r_V_1_fu_720_p2[55:24]}};

assign tmp_fu_726_p3 = r_V_fu_714_p2[32'd24];

assign travel_d0 = 1'd1;

assign trunc_ln233_fu_394_p1 = q_array_q1[11:0];

assign trunc_ln239_1_fu_484_p1 = column_buf_q0[12:0];

assign trunc_ln239_fu_480_p1 = column_buf_q0[14:0];

assign ush_fu_698_p3 = ((isNeg_fu_680_p3[0:0] == 1'b1) ? sext_ln1512_fu_694_p1 : add_ln346_fu_674_p2);

assign val_fu_748_p3 = ((isNeg_fu_680_p3[0:0] == 1'b1) ? zext_ln818_fu_734_p1 : tmp_6_fu_738_p4);

assign w = column_buf_q0[11:0];

assign xs_exp_V_fu_642_p4 = {{data_V_fu_631_p1[30:23]}};

assign zext_ln1488_fu_710_p1 = $unsigned(sext_ln1488_fu_706_p1);

assign zext_ln15_fu_666_p1 = mantissa_fu_656_p4;

assign zext_ln209_fu_373_p1 = select_ln209_1_fu_365_p3;

assign zext_ln218_fu_440_p1 = select_ln209_reg_792_pp0_iter1_reg;

assign zext_ln231_fu_414_p1 = q_array_load_reg_812;

assign zext_ln233_fu_418_p1 = add_ln233_reg_819;

assign zext_ln239_fu_463_p1 = add_ln238_fu_457_p2;

assign zext_ln241_fu_520_p1 = column_buf_load_reg_854;

assign zext_ln243_fu_574_p1 = q_index_load_reg_886;

assign zext_ln255_1_fu_621_p1 = add_ln255_1_reg_931;

assign zext_ln255_fu_606_p1 = p_index_array_q1;

assign zext_ln346_fu_670_p1 = xs_exp_V_fu_642_p4;

assign zext_ln818_fu_734_p1 = tmp_fu_726_p3;

always @ (posedge ap_clk) begin
    zext_ln209_reg_798[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln231_reg_824[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln231_reg_824_pp0_iter2_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    add_ln255_reg_860[1:0] <= 2'b00;
    add_ln255_reg_860_pp0_iter4_reg[1:0] <= 2'b00;
    zext_ln241_reg_870[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //dut_dut_Pipeline_Queue_loop_Edge_loop
