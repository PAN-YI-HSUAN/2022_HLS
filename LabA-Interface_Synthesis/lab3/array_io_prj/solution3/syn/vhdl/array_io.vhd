-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity array_io is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    d_o_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_full_n : IN STD_LOGIC;
    d_o_0_write : OUT STD_LOGIC;
    d_o_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_full_n : IN STD_LOGIC;
    d_o_1_write : OUT STD_LOGIC;
    d_o_2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_full_n : IN STD_LOGIC;
    d_o_2_write : OUT STD_LOGIC;
    d_o_3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_full_n : IN STD_LOGIC;
    d_o_3_write : OUT STD_LOGIC;
    d_i_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_0_ce0 : OUT STD_LOGIC;
    d_i_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_1_ce0 : OUT STD_LOGIC;
    d_i_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_2_ce0 : OUT STD_LOGIC;
    d_i_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_2_ce1 : OUT STD_LOGIC;
    d_i_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_3_ce0 : OUT STD_LOGIC;
    d_i_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_3_ce1 : OUT STD_LOGIC;
    d_i_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of array_io is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "array_io_array_io,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.759313,HLS_SYN_LAT=10,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=899,HLS_SYN_LUT=2186,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal d_o_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal d_o_1_blk_n : STD_LOGIC;
    signal d_o_2_blk_n : STD_LOGIC;
    signal d_o_3_blk_n : STD_LOGIC;
    signal reg_412 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal ap_block_state9 : BOOLEAN;
    signal reg_416 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_421 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_426 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_431 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_436 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_reg_1144 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_fu_449_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_reg_1149 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_1_fu_467_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_1_reg_1170 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_5_fu_477_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_5_reg_1175 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_1_fu_498_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_1_reg_1185 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_fu_508_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_reg_1196 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_fu_517_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_reg_1206 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_9_fu_592_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_9_reg_1217 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_2_fu_610_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_2_reg_1227 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_fu_616_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_reg_1238 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_fu_625_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_reg_1248 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_13_fu_676_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_13_reg_1259 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_3_fu_694_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_3_reg_1269 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_fu_700_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_reg_1280 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_fu_709_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_reg_1290 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_17_fu_760_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_17_reg_1301 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_4_fu_778_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_4_reg_1311 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_fu_784_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_reg_1322 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_fu_793_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_reg_1332 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_21_fu_844_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_21_reg_1343 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_5_fu_862_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_5_reg_1353 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_fu_868_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_reg_1364 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_fu_877_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_reg_1374 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_25_fu_928_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_25_reg_1385 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_6_fu_946_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_6_reg_1395 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_fu_952_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_reg_1406 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_fu_961_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_reg_1416 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_29_fu_1012_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_29_reg_1422 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_7_fu_1030_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_7_reg_1427 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_fu_1036_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_reg_1433 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_fu_1045_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_reg_1438 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_fu_1088_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_reg_1444 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_fu_1093_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_reg_1449 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_fu_545_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_1_fu_576_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_fu_660_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_fu_744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_4_fu_828_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_5_fu_912_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_6_fu_996_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_7_fu_1076_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10 : BOOLEAN;
    signal ap_block_state11 : BOOLEAN;
    signal add_ln69_24_fu_635_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_25_fu_719_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_26_fu_803_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_27_fu_887_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_28_fu_971_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_29_fu_1051_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_30_fu_1099_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_31_fu_1105_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_fu_449_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_fu_445_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_8_fu_455_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_9_fu_459_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_8_fu_463_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_8_fu_455_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_8_fu_463_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_11_fu_473_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_9_fu_459_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_11_fu_473_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_1_fu_490_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_1_fu_498_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_1_fu_494_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_1_fu_513_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_10_fu_523_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_fu_483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_9_fu_532_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_fu_504_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_2_fu_535_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_10_fu_541_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_fu_527_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_1_fu_490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_12_fu_563_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_1_fu_513_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_6_fu_566_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_13_fu_572_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_4_fu_557_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_14_fu_588_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_10_fu_523_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_14_fu_588_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_2_fu_602_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_2_fu_610_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_2_fu_606_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_2_fu_621_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_11_fu_631_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_2_fu_602_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_15_fu_647_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_2_fu_621_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_10_fu_650_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_16_fu_656_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_8_fu_641_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_17_fu_672_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_11_fu_631_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_17_fu_672_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_3_fu_686_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_3_fu_694_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_3_fu_690_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_3_fu_705_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_12_fu_715_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_3_fu_686_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_18_fu_731_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_3_fu_705_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_14_fu_734_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_19_fu_740_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_12_fu_725_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_20_fu_756_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_12_fu_715_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_20_fu_756_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_4_fu_770_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_4_fu_778_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_4_fu_774_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_4_fu_789_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_13_fu_799_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_4_fu_770_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_21_fu_815_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_4_fu_789_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_18_fu_818_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_22_fu_824_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_16_fu_809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_23_fu_840_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_13_fu_799_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_23_fu_840_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_5_fu_854_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_5_fu_862_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_5_fu_858_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_5_fu_873_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_14_fu_883_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_5_fu_854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_24_fu_899_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_5_fu_873_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_22_fu_902_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_25_fu_908_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_20_fu_893_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_26_fu_924_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_14_fu_883_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_26_fu_924_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_6_fu_938_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_6_fu_946_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_6_fu_942_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_6_fu_957_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_15_fu_967_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_6_fu_938_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_27_fu_983_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_6_fu_957_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_26_fu_986_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_28_fu_992_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_24_fu_977_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_29_fu_1008_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_15_fu_967_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_29_fu_1008_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_7_fu_1022_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_7_fu_1030_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_7_fu_1026_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_7_fu_1041_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_7_fu_1022_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_30_fu_1063_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_7_fu_1041_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_30_fu_1066_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_31_fu_1072_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_28_fu_1057_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_condition_156 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    reg_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
                reg_416 <= d_i_2_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                reg_416 <= d_i_2_q1;
            end if; 
        end if;
    end process;

    reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                reg_421 <= d_i_2_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                reg_421 <= d_i_2_q0;
            end if; 
        end if;
    end process;

    reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_426 <= d_i_3_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                reg_426 <= d_i_3_q1;
            end if; 
        end if;
    end process;

    reg_431_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                reg_431 <= d_i_3_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                reg_431 <= d_i_3_q0;
            end if; 
        end if;
    end process;

    reg_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                reg_436 <= d_i_3_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                reg_436 <= d_i_3_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                acc_0 <= temp_fu_545_p2;
                acc_1 <= temp_1_fu_576_p2;
                add_ln67_9_reg_1217 <= add_ln67_9_fu_592_p2;
                add_ln69_16_reg_1206 <= add_ln69_16_fu_517_p2;
                add_ln69_1_reg_1185 <= add_ln69_1_fu_498_p2;
                add_ln69_8_reg_1196 <= add_ln69_8_fu_508_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                acc_2 <= temp_2_fu_660_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                acc_3 <= temp_3_fu_744_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                acc_4 <= temp_4_fu_828_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                acc_5 <= temp_5_fu_912_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                acc_6 <= temp_6_fu_996_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                acc_7 <= temp_7_fu_1076_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln67_13_reg_1259 <= add_ln67_13_fu_676_p2;
                add_ln69_17_reg_1248 <= add_ln69_17_fu_625_p2;
                add_ln69_2_reg_1227 <= add_ln69_2_fu_610_p2;
                add_ln69_9_reg_1238 <= add_ln69_9_fu_616_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln67_17_reg_1301 <= add_ln67_17_fu_760_p2;
                add_ln69_10_reg_1280 <= add_ln69_10_fu_700_p2;
                add_ln69_18_reg_1290 <= add_ln69_18_fu_709_p2;
                add_ln69_3_reg_1269 <= add_ln69_3_fu_694_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln67_1_reg_1170 <= add_ln67_1_fu_467_p2;
                add_ln67_5_reg_1175 <= add_ln67_5_fu_477_p2;
                add_ln69_reg_1149 <= add_ln69_fu_449_p2;
                d_i_0_load_reg_1144 <= d_i_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln67_21_reg_1343 <= add_ln67_21_fu_844_p2;
                add_ln69_11_reg_1322 <= add_ln69_11_fu_784_p2;
                add_ln69_19_reg_1332 <= add_ln69_19_fu_793_p2;
                add_ln69_4_reg_1311 <= add_ln69_4_fu_778_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln67_25_reg_1385 <= add_ln67_25_fu_928_p2;
                add_ln69_12_reg_1364 <= add_ln69_12_fu_868_p2;
                add_ln69_20_reg_1374 <= add_ln69_20_fu_877_p2;
                add_ln69_5_reg_1353 <= add_ln69_5_fu_862_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln67_29_reg_1422 <= add_ln67_29_fu_1012_p2;
                add_ln69_13_reg_1406 <= add_ln69_13_fu_952_p2;
                add_ln69_21_reg_1416 <= add_ln69_21_fu_961_p2;
                add_ln69_6_reg_1395 <= add_ln69_6_fu_946_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln69_14_reg_1433 <= add_ln69_14_fu_1036_p2;
                add_ln69_22_reg_1438 <= add_ln69_22_fu_1045_p2;
                add_ln69_7_reg_1427 <= add_ln69_7_fu_1030_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln69_15_reg_1444 <= add_ln69_15_fu_1088_p2;
                add_ln69_23_reg_1449 <= add_ln69_23_fu_1093_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then
                reg_412 <= d_i_1_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln67_10_fu_650_p2 <= std_logic_vector(signed(sext_ln67_15_fu_647_p1) + signed(sext_ln69_2_fu_621_p1));
    add_ln67_12_fu_725_p2 <= std_logic_vector(unsigned(acc_3) + unsigned(sext_ln67_3_fu_686_p1));
    add_ln67_13_fu_676_p2 <= std_logic_vector(signed(sext_ln69_11_fu_631_p1) + signed(sext_ln67_17_fu_672_p1));
    add_ln67_14_fu_734_p2 <= std_logic_vector(signed(sext_ln67_18_fu_731_p1) + signed(sext_ln69_3_fu_705_p1));
    add_ln67_16_fu_809_p2 <= std_logic_vector(unsigned(acc_4) + unsigned(sext_ln67_4_fu_770_p1));
    add_ln67_17_fu_760_p2 <= std_logic_vector(signed(sext_ln69_12_fu_715_p1) + signed(sext_ln67_20_fu_756_p1));
    add_ln67_18_fu_818_p2 <= std_logic_vector(signed(sext_ln67_21_fu_815_p1) + signed(sext_ln69_4_fu_789_p1));
    add_ln67_1_fu_467_p2 <= std_logic_vector(signed(sext_ln69_8_fu_455_p1) + signed(sext_ln67_8_fu_463_p1));
    add_ln67_20_fu_893_p2 <= std_logic_vector(unsigned(acc_5) + unsigned(sext_ln67_5_fu_854_p1));
    add_ln67_21_fu_844_p2 <= std_logic_vector(signed(sext_ln69_13_fu_799_p1) + signed(sext_ln67_23_fu_840_p1));
    add_ln67_22_fu_902_p2 <= std_logic_vector(signed(sext_ln67_24_fu_899_p1) + signed(sext_ln69_5_fu_873_p1));
    add_ln67_24_fu_977_p2 <= std_logic_vector(unsigned(acc_6) + unsigned(sext_ln67_6_fu_938_p1));
    add_ln67_25_fu_928_p2 <= std_logic_vector(signed(sext_ln69_14_fu_883_p1) + signed(sext_ln67_26_fu_924_p1));
    add_ln67_26_fu_986_p2 <= std_logic_vector(signed(sext_ln67_27_fu_983_p1) + signed(sext_ln69_6_fu_957_p1));
    add_ln67_28_fu_1057_p2 <= std_logic_vector(unsigned(acc_7) + unsigned(sext_ln67_7_fu_1022_p1));
    add_ln67_29_fu_1012_p2 <= std_logic_vector(signed(sext_ln69_15_fu_967_p1) + signed(sext_ln67_29_fu_1008_p1));
    add_ln67_2_fu_535_p2 <= std_logic_vector(signed(sext_ln67_9_fu_532_p1) + signed(sext_ln69_fu_504_p1));
    add_ln67_30_fu_1066_p2 <= std_logic_vector(signed(sext_ln67_30_fu_1063_p1) + signed(sext_ln69_7_fu_1041_p1));
    add_ln67_4_fu_557_p2 <= std_logic_vector(unsigned(acc_1) + unsigned(sext_ln67_1_fu_490_p1));
    add_ln67_5_fu_477_p2 <= std_logic_vector(signed(sext_ln69_9_fu_459_p1) + signed(sext_ln67_11_fu_473_p1));
    add_ln67_6_fu_566_p2 <= std_logic_vector(signed(sext_ln67_12_fu_563_p1) + signed(sext_ln69_1_fu_513_p1));
    add_ln67_8_fu_641_p2 <= std_logic_vector(unsigned(acc_2) + unsigned(sext_ln67_2_fu_602_p1));
    add_ln67_9_fu_592_p2 <= std_logic_vector(signed(sext_ln69_10_fu_523_p1) + signed(sext_ln67_14_fu_588_p1));
    add_ln67_fu_527_p2 <= std_logic_vector(unsigned(acc_0) + unsigned(sext_ln67_fu_483_p1));
    add_ln69_10_fu_700_p2 <= std_logic_vector(signed(reg_412) + signed(add_ln69_2_reg_1227));
    add_ln69_11_fu_784_p2 <= std_logic_vector(signed(reg_412) + signed(add_ln69_3_reg_1269));
    add_ln69_12_fu_868_p2 <= std_logic_vector(signed(reg_412) + signed(add_ln69_4_reg_1311));
    add_ln69_13_fu_952_p2 <= std_logic_vector(signed(reg_412) + signed(add_ln69_5_reg_1353));
    add_ln69_14_fu_1036_p2 <= std_logic_vector(signed(reg_412) + signed(add_ln69_6_reg_1395));
    add_ln69_15_fu_1088_p2 <= std_logic_vector(signed(reg_412) + signed(add_ln69_7_reg_1427));
    add_ln69_16_fu_517_p2 <= std_logic_vector(signed(reg_416) + signed(add_ln69_8_fu_508_p2));
    add_ln69_17_fu_625_p2 <= std_logic_vector(signed(reg_421) + signed(add_ln69_9_fu_616_p2));
    add_ln69_18_fu_709_p2 <= std_logic_vector(signed(reg_416) + signed(add_ln69_10_fu_700_p2));
    add_ln69_19_fu_793_p2 <= std_logic_vector(signed(reg_421) + signed(add_ln69_11_fu_784_p2));
    add_ln69_1_fu_498_p0 <= d_i_0_q0;
    add_ln69_1_fu_498_p2 <= std_logic_vector(signed(add_ln69_1_fu_498_p0) + signed(trunc_ln67_1_fu_494_p1));
    add_ln69_20_fu_877_p2 <= std_logic_vector(signed(reg_416) + signed(add_ln69_12_fu_868_p2));
    add_ln69_21_fu_961_p2 <= std_logic_vector(signed(reg_421) + signed(add_ln69_13_fu_952_p2));
    add_ln69_22_fu_1045_p2 <= std_logic_vector(signed(reg_416) + signed(add_ln69_14_fu_1036_p2));
    add_ln69_23_fu_1093_p2 <= std_logic_vector(signed(reg_421) + signed(add_ln69_15_fu_1088_p2));
    add_ln69_24_fu_635_p2 <= std_logic_vector(signed(reg_426) + signed(add_ln69_16_reg_1206));
    add_ln69_25_fu_719_p2 <= std_logic_vector(signed(reg_431) + signed(add_ln69_17_reg_1248));
    add_ln69_26_fu_803_p2 <= std_logic_vector(signed(reg_436) + signed(add_ln69_18_reg_1290));
    add_ln69_27_fu_887_p2 <= std_logic_vector(signed(reg_426) + signed(add_ln69_19_reg_1332));
    add_ln69_28_fu_971_p2 <= std_logic_vector(signed(reg_431) + signed(add_ln69_20_reg_1374));
    add_ln69_29_fu_1051_p2 <= std_logic_vector(signed(reg_436) + signed(add_ln69_21_reg_1416));
    add_ln69_2_fu_610_p0 <= d_i_0_q0;
    add_ln69_2_fu_610_p2 <= std_logic_vector(signed(add_ln69_2_fu_610_p0) + signed(trunc_ln67_2_fu_606_p1));
    add_ln69_30_fu_1099_p2 <= std_logic_vector(signed(reg_426) + signed(add_ln69_22_reg_1438));
    add_ln69_31_fu_1105_p2 <= std_logic_vector(signed(reg_431) + signed(add_ln69_23_reg_1449));
    add_ln69_3_fu_694_p0 <= d_i_0_q0;
    add_ln69_3_fu_694_p2 <= std_logic_vector(signed(add_ln69_3_fu_694_p0) + signed(trunc_ln67_3_fu_690_p1));
    add_ln69_4_fu_778_p0 <= d_i_0_q0;
    add_ln69_4_fu_778_p2 <= std_logic_vector(signed(add_ln69_4_fu_778_p0) + signed(trunc_ln67_4_fu_774_p1));
    add_ln69_5_fu_862_p0 <= d_i_0_q0;
    add_ln69_5_fu_862_p2 <= std_logic_vector(signed(add_ln69_5_fu_862_p0) + signed(trunc_ln67_5_fu_858_p1));
    add_ln69_6_fu_946_p0 <= d_i_0_q0;
    add_ln69_6_fu_946_p2 <= std_logic_vector(signed(add_ln69_6_fu_946_p0) + signed(trunc_ln67_6_fu_942_p1));
    add_ln69_7_fu_1030_p0 <= d_i_0_q0;
    add_ln69_7_fu_1030_p2 <= std_logic_vector(signed(add_ln69_7_fu_1030_p0) + signed(trunc_ln67_7_fu_1026_p1));
    add_ln69_8_fu_508_p2 <= std_logic_vector(signed(reg_412) + signed(add_ln69_reg_1149));
    add_ln69_9_fu_616_p2 <= std_logic_vector(signed(reg_412) + signed(add_ln69_1_reg_1185));
    add_ln69_fu_449_p0 <= d_i_0_q0;
    add_ln69_fu_449_p2 <= std_logic_vector(signed(add_ln69_fu_449_p0) + signed(trunc_ln67_fu_445_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state10_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state10 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state11_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state11 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state4 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state5 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state6 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state7 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state8 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state9 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_condition_156_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_condition_156 <= not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state11)
    begin
        if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state11)
    begin
        if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_0_address0 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_0_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_0_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_0_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_0_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_i_0_address0 <= "XXX";
        end if; 
    end process;


    d_i_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_i_0_ce0 <= ap_const_logic_1;
        else 
            d_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_1_address0 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_1_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_1_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_1_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_1_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_i_1_address0 <= "XXX";
        end if; 
    end process;


    d_i_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_i_1_ce0 <= ap_const_logic_1;
        else 
            d_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_2_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_2_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_2_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_2_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_2_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            d_i_2_address0 <= "XXX";
        end if; 
    end process;


    d_i_2_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_2_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_2_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_2_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_2_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_i_2_address1 <= "XXX";
        end if; 
    end process;


    d_i_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_i_2_ce0 <= ap_const_logic_1;
        else 
            d_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_2_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            d_i_2_ce1 <= ap_const_logic_1;
        else 
            d_i_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_3_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_3_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_3_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_3_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_3_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            d_i_3_address0 <= "XXX";
        end if; 
    end process;


    d_i_3_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_3_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_3_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_3_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_3_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_i_3_address1 <= "XXX";
        end if; 
    end process;


    d_i_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_i_3_ce0 <= ap_const_logic_1;
        else 
            d_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_3_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            d_i_3_ce1 <= ap_const_logic_1;
        else 
            d_i_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_0_blk_n_assign_proc : process(d_o_0_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            d_o_0_blk_n <= d_o_0_full_n;
        else 
            d_o_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_0_din_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, add_ln69_reg_1149, add_ln69_1_reg_1185, add_ln69_2_reg_1227, add_ln69_3_reg_1269, add_ln69_4_reg_1311, add_ln69_5_reg_1353, add_ln69_6_reg_1395, add_ln69_7_reg_1427, ap_condition_156)
    begin
        if ((ap_const_boolean_1 = ap_condition_156)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                d_o_0_din <= add_ln69_7_reg_1427;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_0_din <= add_ln69_6_reg_1395;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_0_din <= add_ln69_5_reg_1353;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_0_din <= add_ln69_4_reg_1311;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_0_din <= add_ln69_3_reg_1269;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_0_din <= add_ln69_2_reg_1227;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_0_din <= add_ln69_1_reg_1185;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_0_din <= add_ln69_reg_1149;
            else 
                d_o_0_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_0_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_0_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_o_0_write <= ap_const_logic_1;
        else 
            d_o_0_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_1_blk_n_assign_proc : process(d_o_1_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            d_o_1_blk_n <= d_o_1_full_n;
        else 
            d_o_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_1_din_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, add_ln69_8_reg_1196, add_ln69_9_reg_1238, add_ln69_10_reg_1280, add_ln69_11_reg_1322, add_ln69_12_reg_1364, add_ln69_13_reg_1406, add_ln69_14_reg_1433, add_ln69_15_reg_1444, ap_condition_156)
    begin
        if ((ap_const_boolean_1 = ap_condition_156)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                d_o_1_din <= add_ln69_15_reg_1444;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_1_din <= add_ln69_14_reg_1433;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_1_din <= add_ln69_13_reg_1406;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_1_din <= add_ln69_12_reg_1364;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_1_din <= add_ln69_11_reg_1322;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_1_din <= add_ln69_10_reg_1280;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_1_din <= add_ln69_9_reg_1238;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_1_din <= add_ln69_8_reg_1196;
            else 
                d_o_1_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_1_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_1_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_o_1_write <= ap_const_logic_1;
        else 
            d_o_1_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_2_blk_n_assign_proc : process(d_o_2_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            d_o_2_blk_n <= d_o_2_full_n;
        else 
            d_o_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_2_din_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, add_ln69_16_reg_1206, add_ln69_17_reg_1248, add_ln69_18_reg_1290, add_ln69_19_reg_1332, add_ln69_20_reg_1374, add_ln69_21_reg_1416, add_ln69_22_reg_1438, add_ln69_23_reg_1449, ap_condition_156)
    begin
        if ((ap_const_boolean_1 = ap_condition_156)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                d_o_2_din <= add_ln69_23_reg_1449;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_2_din <= add_ln69_22_reg_1438;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_2_din <= add_ln69_21_reg_1416;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_2_din <= add_ln69_20_reg_1374;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_2_din <= add_ln69_19_reg_1332;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_2_din <= add_ln69_18_reg_1290;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_2_din <= add_ln69_17_reg_1248;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_2_din <= add_ln69_16_reg_1206;
            else 
                d_o_2_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_2_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_2_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_o_2_write <= ap_const_logic_1;
        else 
            d_o_2_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_3_blk_n_assign_proc : process(d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            d_o_3_blk_n <= d_o_3_full_n;
        else 
            d_o_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_3_din_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, add_ln69_24_fu_635_p2, add_ln69_25_fu_719_p2, add_ln69_26_fu_803_p2, add_ln69_27_fu_887_p2, add_ln69_28_fu_971_p2, add_ln69_29_fu_1051_p2, add_ln69_30_fu_1099_p2, add_ln69_31_fu_1105_p2, ap_condition_156)
    begin
        if ((ap_const_boolean_1 = ap_condition_156)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                d_o_3_din <= add_ln69_31_fu_1105_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_3_din <= add_ln69_30_fu_1099_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_3_din <= add_ln69_29_fu_1051_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_3_din <= add_ln69_28_fu_971_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_3_din <= add_ln69_27_fu_887_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_3_din <= add_ln69_26_fu_803_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_3_din <= add_ln69_25_fu_719_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_3_din <= add_ln69_24_fu_635_p2;
            else 
                d_o_3_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_3_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_3_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_o_3_write <= ap_const_logic_1;
        else 
            d_o_3_write <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln67_10_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_2_fu_535_p2),32));

    sext_ln67_11_fu_473_p0 <= d_i_3_q0;
        sext_ln67_11_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_11_fu_473_p0),17));

        sext_ln67_12_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_5_reg_1175),18));

        sext_ln67_13_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_6_fu_566_p2),32));

    sext_ln67_14_fu_588_p0 <= d_i_3_q0;
        sext_ln67_14_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_14_fu_588_p0),17));

        sext_ln67_15_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_9_reg_1217),18));

        sext_ln67_16_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_10_fu_650_p2),32));

    sext_ln67_17_fu_672_p0 <= d_i_3_q1;
        sext_ln67_17_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_17_fu_672_p0),17));

        sext_ln67_18_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_13_reg_1259),18));

        sext_ln67_19_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_14_fu_734_p2),32));

    sext_ln67_1_fu_490_p0 <= d_i_0_q0;
        sext_ln67_1_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_1_fu_490_p0),32));

    sext_ln67_20_fu_756_p0 <= d_i_3_q0;
        sext_ln67_20_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_20_fu_756_p0),17));

        sext_ln67_21_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_17_reg_1301),18));

        sext_ln67_22_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_18_fu_818_p2),32));

    sext_ln67_23_fu_840_p0 <= d_i_3_q1;
        sext_ln67_23_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_23_fu_840_p0),17));

        sext_ln67_24_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_21_reg_1343),18));

        sext_ln67_25_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_22_fu_902_p2),32));

    sext_ln67_26_fu_924_p0 <= d_i_3_q0;
        sext_ln67_26_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_26_fu_924_p0),17));

        sext_ln67_27_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_25_reg_1385),18));

        sext_ln67_28_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_26_fu_986_p2),32));

    sext_ln67_29_fu_1008_p0 <= d_i_3_q1;
        sext_ln67_29_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_29_fu_1008_p0),17));

    sext_ln67_2_fu_602_p0 <= d_i_0_q0;
        sext_ln67_2_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_2_fu_602_p0),32));

        sext_ln67_30_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_29_reg_1422),18));

        sext_ln67_31_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_30_fu_1066_p2),32));

    sext_ln67_3_fu_686_p0 <= d_i_0_q0;
        sext_ln67_3_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_3_fu_686_p0),32));

    sext_ln67_4_fu_770_p0 <= d_i_0_q0;
        sext_ln67_4_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_4_fu_770_p0),32));

    sext_ln67_5_fu_854_p0 <= d_i_0_q0;
        sext_ln67_5_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_5_fu_854_p0),32));

    sext_ln67_6_fu_938_p0 <= d_i_0_q0;
        sext_ln67_6_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_6_fu_938_p0),32));

    sext_ln67_7_fu_1022_p0 <= d_i_0_q0;
        sext_ln67_7_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_7_fu_1022_p0),32));

    sext_ln67_8_fu_463_p0 <= d_i_3_q1;
        sext_ln67_8_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_8_fu_463_p0),17));

        sext_ln67_9_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_1_reg_1170),18));

        sext_ln67_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_reg_1144),32));

    sext_ln69_10_fu_523_p0 <= d_i_2_q0;
        sext_ln69_10_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_10_fu_523_p0),17));

    sext_ln69_11_fu_631_p0 <= d_i_2_q1;
        sext_ln69_11_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_11_fu_631_p0),17));

    sext_ln69_12_fu_715_p0 <= d_i_2_q0;
        sext_ln69_12_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_12_fu_715_p0),17));

    sext_ln69_13_fu_799_p0 <= d_i_2_q1;
        sext_ln69_13_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_13_fu_799_p0),17));

    sext_ln69_14_fu_883_p0 <= d_i_2_q0;
        sext_ln69_14_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_14_fu_883_p0),17));

    sext_ln69_15_fu_967_p0 <= d_i_2_q1;
        sext_ln69_15_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_15_fu_967_p0),17));

    sext_ln69_1_fu_513_p0 <= d_i_1_q0;
        sext_ln69_1_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_1_fu_513_p0),18));

    sext_ln69_2_fu_621_p0 <= d_i_1_q0;
        sext_ln69_2_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_2_fu_621_p0),18));

    sext_ln69_3_fu_705_p0 <= d_i_1_q0;
        sext_ln69_3_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_3_fu_705_p0),18));

    sext_ln69_4_fu_789_p0 <= d_i_1_q0;
        sext_ln69_4_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_4_fu_789_p0),18));

    sext_ln69_5_fu_873_p0 <= d_i_1_q0;
        sext_ln69_5_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_5_fu_873_p0),18));

    sext_ln69_6_fu_957_p0 <= d_i_1_q0;
        sext_ln69_6_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_6_fu_957_p0),18));

    sext_ln69_7_fu_1041_p0 <= d_i_1_q0;
        sext_ln69_7_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_7_fu_1041_p0),18));

    sext_ln69_8_fu_455_p0 <= d_i_2_q1;
        sext_ln69_8_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_8_fu_455_p0),17));

    sext_ln69_9_fu_459_p0 <= d_i_2_q0;
        sext_ln69_9_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_9_fu_459_p0),17));

        sext_ln69_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_412),18));

    temp_1_fu_576_p2 <= std_logic_vector(signed(sext_ln67_13_fu_572_p1) + signed(add_ln67_4_fu_557_p2));
    temp_2_fu_660_p2 <= std_logic_vector(signed(sext_ln67_16_fu_656_p1) + signed(add_ln67_8_fu_641_p2));
    temp_3_fu_744_p2 <= std_logic_vector(signed(sext_ln67_19_fu_740_p1) + signed(add_ln67_12_fu_725_p2));
    temp_4_fu_828_p2 <= std_logic_vector(signed(sext_ln67_22_fu_824_p1) + signed(add_ln67_16_fu_809_p2));
    temp_5_fu_912_p2 <= std_logic_vector(signed(sext_ln67_25_fu_908_p1) + signed(add_ln67_20_fu_893_p2));
    temp_6_fu_996_p2 <= std_logic_vector(signed(sext_ln67_28_fu_992_p1) + signed(add_ln67_24_fu_977_p2));
    temp_7_fu_1076_p2 <= std_logic_vector(signed(sext_ln67_31_fu_1072_p1) + signed(add_ln67_28_fu_1057_p2));
    temp_fu_545_p2 <= std_logic_vector(signed(sext_ln67_10_fu_541_p1) + signed(add_ln67_fu_527_p2));
    trunc_ln67_1_fu_494_p1 <= acc_1(16 - 1 downto 0);
    trunc_ln67_2_fu_606_p1 <= acc_2(16 - 1 downto 0);
    trunc_ln67_3_fu_690_p1 <= acc_3(16 - 1 downto 0);
    trunc_ln67_4_fu_774_p1 <= acc_4(16 - 1 downto 0);
    trunc_ln67_5_fu_858_p1 <= acc_5(16 - 1 downto 0);
    trunc_ln67_6_fu_942_p1 <= acc_6(16 - 1 downto 0);
    trunc_ln67_7_fu_1026_p1 <= acc_7(16 - 1 downto 0);
    trunc_ln67_fu_445_p1 <= acc_0(16 - 1 downto 0);
end behav;
